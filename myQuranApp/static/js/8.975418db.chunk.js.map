{"version":3,"sources":["store/action/radioActions.js","containers/Radios/RadiosStyle.js","containers/Radios/radioList.js","containers/Radios/index.js"],"names":["isRadioPage","value","type","actionType","startRadioRequest","stopRadioRequest","RadioStyled","styled","div","props","themeStyle","all","mainColor","includes","language","theme","secondaryColor","boxShadow","light","whiteColor","radioList","className","sameLink","color","size","clicked","url","name","onClick","connect","state","site_language","lang","suraLink","getData","loading","dispatch","isFavoritePage","favoriteActions","showPlayer","settingActions","radioActions","suraLinkFunc","link","getDataActions","withErrorHandler","useState","radioLists","setRadioLists","copyRadioLists","setCopyRadioLists","search","setSearch","useEffect","window","scrollTo","isCurrent","axios","get","then","res","data","Radios","catch","error","favArray","map","radiosList","Name","toLocaleLowerCase","push","quran_radio","Form","Control","placeholder","reciter","onChange","e","target","dir","length","radio","URL","yellowColor","console","log","clickedHandler"],"mappings":"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","file":"static/js/8.975418db.chunk.js","sourcesContent":["import * as actionType from './actionTypes';\r\n\r\nexport const isRadioPage = (value) => ({type: actionType.iS_RADIO_PAGE, value: value});\r\nexport const startRadioRequest = () => ({type: actionType.START_RADIO_REQUEST});\r\nexport const stopRadioRequest = () => ({type: actionType.STOP_RADIO_REQUEST});","import styled from 'styled-components';\r\n\r\nexport const RadioStyled = styled.div`\r\n    .title_name {\r\n        font-size: 28px;\r\n        color: ${props => props.themeStyle.all.mainColor};\r\n        border-${props => ['ar', 'ug', 'ur', 'fa'].includes(props.language) ? 'right' : 'left'}: 5px solid rgb(57 194 201 / 50%);\r\n        padding-${props => ['ar', 'ug', 'ur', 'fa'].includes(props.language) ? 'right' : 'left'}: 6px;\r\n    }\r\n    .form-search {\r\n        input {\r\n            text-align: ${props => ['ar', 'ug', 'ur', 'fa'].includes(props.language) ? 'right' : 'left'};\r\n        }\r\n    }\r\n    .radios_list {\r\n        padding: 10px 15px;\r\n        border-radius: 6px;\r\n        background-color: ${props => props.themeStyle[props.theme].secondaryColor};\r\n        box-shadow: ${props => props.themeStyle[props.theme].boxShadow};\r\n        transition: all .3s ease-in-out;\r\n        margin-bottom: 10px;\r\n        .name_radio {\r\n            margin: 0 5px;\r\n            color: ${props => props.theme === 'light' ? '#6d6d6d' : props.themeStyle.light.secondaryColor};\r\n        }\r\n        &.same_link {\r\n            background-color: ${props => props.themeStyle.all.mainColor};\r\n            .name_radio {\r\n                color: ${props => props.themeStyle.all.whiteColor};\r\n            }\r\n        }\r\n    }\r\n`; ","import React from 'react';\r\nimport PlayBtn from '../../components/playBtn/playBtn';\r\n\r\nconst radioList = props => (\r\n    <li className={`radios_list d-flex ${props.sameLink && 'same_link'}`}>\r\n        <PlayBtn color={props.themeStyle} size={28} clicked={() => props.clicked({url: props.url, name: props.name})} />\r\n        <span className=\"name_radio\" onClick={() => props.clicked({url: props.url, name: props.name})}>{props.name}</span>\r\n    </li>\r\n);\r\n\r\nexport default radioList;","import React, { useState, useEffect } from 'react';\r\nimport { RadioStyled } from './RadiosStyle';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport Form from 'react-bootstrap/Form';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport RadioList from './radioList';\r\nimport Loading from '../../components/Loader/loader';\r\nimport * as favoriteActions from '../../store/action/favoriteActions';\r\nimport * as radioActions from '../../store/action/radioActions';\r\nimport * as getDataActions from '../../store/action/getDataActions';\r\nimport * as settingActions from '../../store/action/settingActions';\r\n\r\nconst Radios = ({ isFavoritePage, isRadioPage, language, suraLinkFunc, showPlayer, themeStyle, theme, site_language, suraLink, startRadioRequest, stopRadioRequest, loading}) => {\r\n\r\n    const [radioLists, setRadioLists] = useState([]);\r\n    const [copyRadioLists, setCopyRadioLists] = useState();\r\n    const [search, setSearch] = useState('');\r\n\r\n    useEffect(() => {\r\n        isFavoritePage(true);\r\n        isRadioPage(true);\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let isCurrent = true;\r\n        const api = () => {\r\n            startRadioRequest();\r\n            axios.get(`//mp3quran.net/api/2/radio_${language.lang}.json`)\r\n            .then(res => {\r\n                if (isCurrent) {\r\n                    setRadioLists(res.data.Radios);\r\n                    setCopyRadioLists(res.data.Radios);\r\n                    stopRadioRequest();\r\n                }\r\n            })\r\n            .catch(error => {\r\n                if (isCurrent) {\r\n                    stopRadioRequest();\r\n                    return error;\r\n                }\r\n            });\r\n        }\r\n\r\n        api();\r\n\r\n        return () => {\r\n            isCurrent = false;\r\n        };\r\n    }, [language]);\r\n\r\n    useEffect(() => {\r\n        let favArray = [];\r\n        radioLists.map(radiosList => {\r\n            if (search === '') {\r\n                return favArray.push(radiosList);\r\n\r\n            } else if (radiosList.Name.toLocaleLowerCase().includes(search.toLocaleLowerCase())) {\r\n                return favArray.push(radiosList)\r\n            }\r\n            return null\r\n        });\r\n        setCopyRadioLists(favArray);\r\n    }, [search]);\r\n\r\n    const clickedHandler = (link) => {\r\n        console.log(link.url)\r\n        suraLinkFunc(link.url);\r\n        showPlayer();\r\n    }\r\n\r\n    let data = <Loading />\r\n\r\n    data = !loading && (\r\n        <RadioStyled language={language.lang} themeStyle={themeStyle} theme={theme}>\r\n            <h2 className='title_name mb-4'>{site_language && site_language.quran_radio}</h2>\r\n            <div className='form-search mb-5'>\r\n                <Form>\r\n                    <Form.Control type='text' placeholder={`${site_language && site_language.search} ${site_language && site_language.reciter}`} className='rounded-pill search-filed' onChange={e => setSearch(e.target.value)} dir='auto' />\r\n                </Form>\r\n            </div>\r\n            <ul className='radios_lists'>\r\n                {\r\n                    copyRadioLists && copyRadioLists.length > 0 && copyRadioLists.map(radio => {\r\n                        return (\r\n                            <RadioList\r\n                                key={radio.URL}\r\n                                url={radio.URL}\r\n                                name={radio.Name}\r\n                                themeStyle={themeStyle.all.yellowColor}\r\n                                clicked={(link) => clickedHandler(link)}\r\n                                sameLink={radio.URL === suraLink}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        </RadioStyled>\r\n    );\r\n\r\n    return data;\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    site_language: state.lang.site_language,\r\n    language: state.lang.language,\r\n    theme: state.theme.theme,\r\n    themeStyle: state.theme.themeStyle,\r\n    suraLink: state.getData.suraLink,\r\n    loading: state.getData.loading\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    isFavoritePage: (value) => dispatch(favoriteActions.isFavoritePage(value)),\r\n    showPlayer: () => dispatch(settingActions.showPlayer()),\r\n    isRadioPage: (value) => dispatch(radioActions.isRadioPage(value)),\r\n    suraLinkFunc: (link) => dispatch(getDataActions.suraLink(link)),\r\n    startRadioRequest: () => dispatch(radioActions.startRadioRequest()),\r\n    stopRadioRequest: () => dispatch(radioActions.stopRadioRequest())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Radios, axios));"],"sourceRoot":""}