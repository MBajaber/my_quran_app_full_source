{"version":3,"sources":["store/action/radioActions.js","components/linkBtn/linkBtn.js","containers/Favorite/favouriteStyled.js","containers/Favorite/favoriteListStyled.js","containers/Favorite/favoriteList.js","containers/Favorite/index.js"],"names":["isRadioPage","value","type","actionType","startRadioRequest","stopRadioRequest","connect","state","language","lang","props","className","title","size","FavouriteStyled","styled","div","themeStyle","all","mainColor","includes","theme","mutedColor","dark","textNormal","Surahbox","li","linkState","secondaryColor","boxShadow","whiteColor","yellowColor","redColor","blackColor","suraLink","getData","server","playSura","number","name","suraName","deleteItems","rewaya","useState","setLinkState","useEffect","color","clicked","onClick","navigator","clipboard","writeText","url","playlist","fav","site_language","dispatch","deleteItemFromPlaylist","item","favoriteActions","deleteFavFromSurabox","isFavoritePage","radioActions","suraLinkFunc","link","getDataActions","showPlayer","settingActions","isFromFavouritePlaylist","bool","search","setSearch","playlistFavorite","setPlaylistFavorite","allElements","setAllElements","favArray","map","favorite","toLocaleLowerCase","push","Form","Control","placeholder","surah_name","onChange","e","target","dir","length","no_playlist_added"],"mappings":"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","file":"static/js/7.54ef8511.chunk.js","sourcesContent":["import * as actionType from './actionTypes';\r\n\r\nexport const isRadioPage = (value) => ({type: actionType.iS_RADIO_PAGE, value: value});\r\nexport const startRadioRequest = () => ({type: actionType.START_RADIO_REQUEST});\r\nexport const stopRadioRequest = () => ({type: actionType.STOP_RADIO_REQUEST});","import React from 'react';\r\nimport { BsLink45Deg } from 'react-icons/bs';\r\nimport { connect } from 'react-redux';\r\n\r\nconst LinkBtn = props => (\r\n    <button className='btn' title={props.language.lang === 'ar' ? 'نسخ الرابط' : 'copy link'}>\r\n        <BsLink45Deg size={24} />\r\n    </button>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    language: state.lang.language\r\n});\r\nexport default connect(mapStateToProps)(LinkBtn);\r\n","import styled from 'styled-components';\r\n\r\nexport const FavouriteStyled = styled.div`\r\n    transition: all 0.3s ease-in-out;\r\n    .title {\r\n        font-size: 30px;\r\n        color: ${props => props.themeStyle.all.mainColor};\r\n        border-${props => ['ar', 'ug', 'ur', 'fa'].includes(props.language) ? 'right' : 'left'}: 5px solid rgb(57 194 201 / 50%);\r\n        padding-${props => ['ar', 'ug', 'ur', 'fa'].includes(props.language) ? 'right' : 'left'}: 6px;\r\n    }\r\n    .form form input {\r\n        text-align: ${props => ['ar', 'ug', 'ur', 'fa'].includes(props.language) ? 'right' : 'false'};\r\n    }\r\n    .playlist-content {\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n        grid-gap: 10px;\r\n        flex-wrap: wrap;\r\n        @media (max-width: 350px) {\r\n            grid-template-columns: repeat(auto-fill, minmax(100%, 1fr));\r\n        }\r\n        .no-list {\r\n            color: ${props => props.theme === 'light' ? props.themeStyle.all.mutedColor : props.themeStyle.dark.textNormal};\r\n            padding-top: 40px;\r\n            font-size: 20px;\r\n        }\r\n    }\r\n`;\r\n\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const Surahbox = styled.li`\r\n    padding: 7px;\r\n    padding-bottom: 7px;\r\n    border-radius: 6px;\r\n    background-color: ${props => props.linkState ?  props.themeStyle.all.mainColor : props.themeStyle[props.theme].secondaryColor};\r\n    box-shadow: ${props => props.themeStyle[props.theme].boxShadow};\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-wrap: wrap;\r\n    transition: all .3s ease-in-out;\r\n    .icon_name_number_section {\r\n        flex-basis: 65%;\r\n        @media (max-width: 350px) {\r\n            flex-basis: 100%;\r\n        }\r\n        .surah-box-number {\r\n            margin-left: 6px;\r\n            margin-right: 6px;\r\n            color: ${props => props.linkState ? props.themeStyle.all.whiteColor : props.theme === 'light' ? props.themeStyle.all.mutedColor : props.themeStyle.all.secondaryColor};\r\n        }\r\n        .surah-box-name {\r\n            color: ${props => props.linkState ? props.themeStyle.all.whiteColor : props.themeStyle[props.theme].textNormal};\r\n            white-space: nowrap;\r\n        }\r\n        .immam_name {\r\n            font-size: 13px;\r\n            letter-spacing: 0.3px;\r\n            padding: 0 6px;\r\n            color: ${props => props.linkState ? props.themeStyle.all.yellowColor : props.theme === 'light' ? props.themeStyle.all.mutedColor : props.themeStyle.all.yellowColor};\r\n        }\r\n        .immam_rewaya {\r\n            font-size: 12px;\r\n            letter-spacing: 0.3px;\r\n            padding: 0 6px;\r\n            color: ${props => props.themeStyle.all.secondaryColor};\r\n        }\r\n    }\r\n    .surah-box-imam-page-info {\r\n        flex-basis: 27%;\r\n        justify-content: space-between;\r\n        @media (max-width: 350px) {\r\n            flex-basis: 100%;\r\n            justify-content: flex-end;\r\n        }\r\n        .list {\r\n            cursor: pointer;\r\n            border-radius: 6px;\r\n            transition: all 0.3s ease-in-out;\r\n            button {\r\n                color: ${props => props.linkState ? props.themeStyle.all.whiteColor : props.theme === 'light' ? '#6d6d6d' : props.themeStyle.all.whiteColor};\r\n                padding: 2px 5px;\r\n                transition: all .3s ease-in-out;\r\n                &.delete_item {\r\n                    color: ${props => props.linkState ? props.themeStyle.all.whiteColor : props.themeStyle.all.redColor};\r\n                }\r\n                &:hover .delete_item {\r\n                    color: ${props => props.themeStyle.all.whiteColor};\r\n                }\r\n            }\r\n            &:hover button {\r\n                background-color: #14eeaa;\r\n                color: ${props => props.themeStyle.all.whiteColor};\r\n            }\r\n            &.heart {\r\n                color: ${props => props.themeStyle.all.blackColor};\r\n                &.full_heart_btn {\r\n                    color: ${props => props.themeStyle.all.yellowColor};\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;","import React, { useState, useEffect } from 'react';\r\nimport PlayBtn from '../../components/playBtn/playBtn';\r\nimport LinkBtn from '../../components/linkBtn/linkBtn';\r\nimport { MdDelete } from 'react-icons/md';\r\nimport { connect } from 'react-redux';\r\nimport { Surahbox } from './favoriteListStyled';\r\nimport DownloadBtn from '../../components/downloadBtn/downloadBtn';\r\n\r\nconst Playlist = ({ suraLink, server, playSura, theme, themeStyle, number, name, suraName, deleteItems, rewaya}) => {\r\n\r\n    const [linkState, setLinkState] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(suraLink === server) {\r\n            setLinkState(true);\r\n        } else {\r\n            setLinkState(false);\r\n        }\r\n    }, [suraLink, server]);\r\n\r\n    return (\r\n        <Surahbox theme={theme} themeStyle={themeStyle} linkState={linkState}>\r\n            <div className='icon_name_number_section d-flex flex-column'>\r\n                <div className='icon_name_number d-flex align-items-center align-items-center'>\r\n                    <PlayBtn size={33} color='#F5B44B' clicked={() => playSura(server)} linkState={linkState} />\r\n                    <div className='text d-flex flex-column' onClick={() => playSura(server)}>\r\n                        <div className='d-flex surah-box-number-number-text'>\r\n                            <div className='surah-box-number'>{number}</div>\r\n                            <div className='surah-box-name text-capitalize'>{suraName}</div>\r\n                        </div>\r\n                        <span className='immam_name text-capitalize'>{name}</span>\r\n                        <span className='immam_rewaya text-capitalize mt-1'>{rewaya}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='surah-box-imam-page-info d-flex align-items-center'>\r\n                <div className='list m-0' title='copy link' onClick={() => navigator.clipboard.writeText(server)}>\r\n                    <LinkBtn />\r\n                </div>\r\n                <div className='list m-0' title='delete'>\r\n                    <button className='btn delete_item' onClick={() => deleteItems({server: server})}>\r\n                        <MdDelete size={24} />\r\n                    </button>\r\n                </div>\r\n                <div className='list m-0' title='delete'>\r\n                    <DownloadBtn size={24} url={server} suraName={suraName} />\r\n                </div>\r\n            </div>\r\n        </Surahbox>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    suraLink: state.getData.suraLink,\r\n    theme: state.theme.theme,\r\n    themeStyle: state.theme.themeStyle\r\n});\r\n\r\nexport default connect(mapStateToProps)(Playlist);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { FavouriteStyled } from './favouriteStyled';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FavoriteList from './favoriteList';\r\nimport { connect } from 'react-redux';\r\nimport { CgTrashEmpty } from 'react-icons/cg';\r\nimport * as favoriteActions from '../../store/action/favoriteActions';\r\nimport * as radioActions from '../../store/action/radioActions';\r\nimport * as getDataActions from '../../store/action/getDataActions';\r\nimport * as settingActions from '../../store/action/settingActions';\r\n\r\nconst Favorite = ({ playlist, isFavoritePage, isRadioPage, deleteFavFromSurabox, deleteItemFromPlaylist, theme, themeStyle, language, site_language, showPlayer, isFromFavouritePlaylist,  suraLinkFunc}) => {\r\n\r\n    const [search, setSearch] = useState('');\r\n    const [playlistFavorite, setPlaylistFavorite] = useState(playlist);\r\n    const [allElements, setAllElements] = useState([...playlistFavorite]);\r\n\r\n    useEffect(() => {\r\n        isFavoritePage(true);\r\n        isRadioPage(false);\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        setPlaylistFavorite(playlist);\r\n        setAllElements(playlist)\r\n    }, [playlist]);\r\n\r\n    useEffect(() => {\r\n        let favArray = [];\r\n        playlistFavorite.map(favorite => {\r\n            if(search === '') {\r\n                favArray.push(favorite);\r\n\r\n            } else if(favorite.suraName.toLocaleLowerCase().includes(search.toLocaleLowerCase())) {\r\n                favArray.push(favorite)\r\n            }\r\n            return null;\r\n        });\r\n\r\n        setAllElements(favArray);\r\n    }, [search]);\r\n\r\n    const deleteItems = (item) => {\r\n        deleteFavFromSurabox(item.server);\r\n        deleteItemFromPlaylist(item);\r\n    }\r\n\r\n    const playSura = (link) => {\r\n        suraLinkFunc(link);\r\n        isFromFavouritePlaylist(true);\r\n        showPlayer();\r\n    }\r\n\r\n    return (\r\n        <FavouriteStyled theme={theme} themeStyle={themeStyle} language={language.lang}>\r\n            <h2 className='title text-capitalize mb-4'>{site_language && site_language.favorite}</h2>\r\n            <div className='form mb-4'>\r\n                <Form>\r\n                    <Form.Control type='text' placeholder={`${site_language && site_language.search} ${site_language && site_language.surah_name}`} className='rounded-pill search-filed' onChange={e => setSearch(e.target.value)} dir='auto' />\r\n                </Form>\r\n            </div>\r\n            <ul className='playlist-content'>\r\n                {\r\n                    allElements.length > 0 ? (\r\n                        allElements.map(favorite =>\r\n                            <FavoriteList\r\n                                key={`${favorite.server}/${favorite.name}/${favorite.suraName}/${favorite.server}`}\r\n                                name={favorite.name}\r\n                                number={favorite.number}\r\n                                server={favorite.server}\r\n                                suraName={favorite.suraName}\r\n                                rewaya={favorite.rewaya}\r\n                                deleteItems={(item) => deleteItems(item)}\r\n                                playSura={(link) => playSura(link)}\r\n                            />\r\n                        )\r\n                    ) : <div className='no-list text-center'>{`${site_language && site_language.no_playlist_added}... `}<CgTrashEmpty size={28} /></div>\r\n                }                \r\n            </ul>\r\n        </FavouriteStyled>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    playlist: state.fav.playlist,\r\n    theme: state.theme.theme,\r\n    themeStyle: state.theme.themeStyle,\r\n    site_language: state.lang.site_language,\r\n    language: state.lang.language\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    deleteItemFromPlaylist: (item) => dispatch(favoriteActions.removeItemFromPlayList(item)),\r\n    deleteFavFromSurabox: (item) => dispatch(favoriteActions.deleteFavFromSurabox(item)),\r\n    isFavoritePage: (value) => dispatch(favoriteActions.isFavoritePage(value)),\r\n    isRadioPage: (value) => dispatch(radioActions.isRadioPage(value)),\r\n\r\n    suraLinkFunc: (link) => dispatch(getDataActions.suraLink(link)),\r\n    showPlayer: () => dispatch(settingActions.showPlayer()),\r\n    isFromFavouritePlaylist: (bool) => dispatch(favoriteActions.isFromFavouritePlaylist(bool))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorite);\r\n"],"sourceRoot":""}