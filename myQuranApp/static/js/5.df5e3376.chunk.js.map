{"version":3,"sources":["components/linkBtn/linkBtn.js","components/imamPage/imamPageStyled.js","components/surahBox/surahBoxStyled.js","components/heartBox/heartBox.js","components/toastCompo/toastCompoStyled.js","components/toastCompo/toastCompo.js","components/surahBox/surahBox.js","components/imamPage/ImamPage.js"],"names":["connect","state","language","lang","props","className","title","size","ImamPageStyled","styled","div","themeStyle","all","blackColor","includes","site_lang","SurahBoxList","li","linkState","mainColor","theme","secondaryColor","boxShadow","yellowColor","whiteColor","mutedColor","textNormal","HeartBox","onClick","toggleFav","isFav","color","colorOne","colorTwo","showUp","keyframes","ToastCompoStyled","myClass","msg","myMsg","initialState","action","type","isToastOpen","isFavorite","suraLink","getData","playlist","fav","deleteFav","site_language","dispatch","deleteItemFromPlaylist","item","favoriteActions","isFavor","allData","number","name","server","copyText","addFav","clicked","isPlayToggle","useReducer","surahState","useState","setIsFav","setLinkState","useEffect","setTime","setTimeout","closeToast","openToast","useCallback","clearTimeout","navigator","clipboard","writeText","delete","favorite","add_files_playlist","add","adding_done_susseccfully","map","list","Server","suraName","url","suraNumbers","suraNames","allSurasBoxs","myReducer","numbers","names","allSurasBoxes","suras","loading","showPlayer","settingActions","link","getDataActions","startRequest","successRequest","failRequest","error","addToPlaylist","isFromFavouritePlaylist","bool","ErrorHandler","search","setSearch","filterSearch","setFilterSearch","isCurrent","axios","get","then","res","arrayNames","num","push","data","catch","clickedHandler","index","fixNum","length","addFavFun","setData","collectData","allDataPlaylist","rewaya","array2","filter","sura","toLocaleLowerCase","window","scrollTo","arr","sing","i","myNumber","successFav","k","myNumbers","suraLoop","to","Form","Control","placeholder","surah_name","onChange","e","target","value","dir"],"mappings":"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","file":"static/js/5.df5e3376.chunk.js","sourcesContent":["import React from 'react';\r\nimport { BsLink45Deg } from 'react-icons/bs';\r\nimport { connect } from 'react-redux';\r\n\r\nconst LinkBtn = props => (\r\n    <button className='btn' title={props.language.lang === 'ar' ? 'نسخ الرابط' : 'copy link'}>\r\n        <BsLink45Deg size={24} />\r\n    </button>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    language: state.lang.language\r\n});\r\nexport default connect(mapStateToProps)(LinkBtn);\r\n","import styled from 'styled-components';\r\n\r\nexport const ImamPageStyled = styled.div`\r\n    text-align: start;\r\n    transition: all .3s ease-in-out;\r\n    .top-search-rewaya {\r\n        form {\r\n            width: 100%;\r\n            .search-filed {\r\n                font-size: 14px;\r\n                padding: 10px 18px;\r\n                height: 38px;\r\n                color: ${props => props.themeStyle.all.blackColor};\r\n                text-align: ${props => ['ar', 'ug', 'ur', 'fa'].includes(props.site_lang) ? 'right' : 'left'};\r\n            }\r\n        }  \r\n    }\r\n    .all-surah-name {\r\n        margin: 30px 0;\r\n        display: grid;\r\n        grid-gap: 12px;\r\n        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n        @media (max-width: 350px) {\r\n            grid-template-columns: repeat(auto-fit, minmax(100%, 1fr));  \r\n        }\r\n    }\r\n`;","import styled from 'styled-components';\r\n\r\nexport const SurahBoxList = styled.li`\r\n    padding-top: 7px;\r\n    padding-bottom: 7px;\r\n    border-radius: 6px;\r\n    background-color: ${props => props.linkState ? props.themeStyle.all.mainColor : props.themeStyle[props.theme].secondaryColor};\r\n    box-shadow: ${props => props.themeStyle[props.theme].boxShadow};\r\n    transition: all .3s ease-in-out;\r\n    & .icon_name_number {\r\n        flex-basis: 66%;\r\n        @media (max-width: 350px) {\r\n            flex-basis: 100%;\r\n        }\r\n        & .play-btn {\r\n            color: ${props => props.themeStyle.all.yellowColor};\r\n        }\r\n        & .surah-box-number {\r\n            margin: 0 3px;\r\n            color: ${props => props.linkState ? props.themeStyle.all.whiteColor : props.theme === 'light' ? props.themeStyle.all.mutedColor : props.themeStyle.all.secondaryColor};\r\n        }\r\n        & .surah-box-name {\r\n            margin: 0 9px;\r\n            color: ${props => props.linkState ? props.themeStyle.all.whiteColor : props.themeStyle[props.theme].textNormal};\r\n            white-space: nowrap;\r\n        }\r\n    }\r\n    & .surah-box-imam-page-info {\r\n        flex-basis: 30%;\r\n        justify-content: space-between;\r\n        @media (max-width: 450px) {\r\n            flex-basis: 100%;\r\n            justify-content: flex-end;\r\n        }\r\n        .list {\r\n            cursor: pointer;\r\n            border-radius: 6px;\r\n            transition: all 0.3s ease-in-out;\r\n            @media (max-width: 450px) {\r\n                margin: 0 7px;\r\n            }\r\n            button {\r\n                color: ${props => props.linkState ? props.themeStyle.all.whiteColor : '#6d6d6d'};\r\n                padding: 2px 5px;\r\n            }\r\n            &.heart .full_heart_btn {\r\n                color: ${props => props.themeStyle.all.yellowColor};\r\n            }\r\n            &.show_on_hover {\r\n                opacity: 1;\r\n            }\r\n        }\r\n    }\r\n    &:hover .list:hover {\r\n        background-color: #14eeaa;\r\n        svg {\r\n            color: #fff;\r\n        }\r\n        button {\r\n            color: #fff;;\r\n        }\r\n    }\r\n`;","import React from 'react';\r\nimport './heartBox.css';\r\nimport { AiOutlineHeart, AiFillHeart } from 'react-icons/ai';\r\n\r\nconst HeartBox = props => (\r\n    <button className='heart_box_section' onClick={props.toggleFav} >\r\n        {props.isFav \r\n            ? <span className='full_heart_btn'><AiFillHeart size={props.size} color={props.colorOne} /></span> \r\n            : <span className='empty_heart_btn'><AiOutlineHeart size={props.size} color={props.colorTwo} /></span> \r\n        }\r\n    </button>\r\n);\r\n\r\nexport default HeartBox;","import styled, { keyframes } from 'styled-components';\r\n\r\nconst showUp = keyframes`\r\n    0% {\r\n        transform: scale(0);\r\n        ${props => ['ar', 'ur', 'ug', 'fa'].includes(props.site_lang) ? 'right' : 'left'}: -120vw;\r\n        opacity: 0;\r\n    }\r\n    100% {\r\n        transform: scale(1);\r\n        ${props => ['ar', 'ur', 'ug', 'fa'].includes(props.site_lang) ? 'right' : 'left'}: 20px;\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nexport const ToastCompoStyled = styled.div`\r\n    position: fixed;\r\n    bottom: 100px;\r\n    text-align: start;\r\n    ${props => ['ar', 'ur', 'ug', 'fa'].includes(props.site_lang) ? 'right' : 'left'}: 20px;\r\n    box-shadow: 0 2px 8px 0 hsl(0deg 0% 64% / 19%);\r\n    background-color: #fff;\r\n    padding: 5px 0 10px;\r\n    animation: ${showUp} 1s ease-in-out alternate;\r\n    color: ${props => props.themeStyle[props.theme].textNormal};\r\n    border-radius: 6px;\r\n    border-top: 3px solid ${props => props.myClass === 'added_item' ? '#39C2C9' : '#F5B44B'};\r\n    .toastCompo-header {\r\n        font-weight: bold;\r\n        margin-bottom: 10px;\r\n        padding: 15px 60px;\r\n        border-bottom: 1px solid ${props => props.theme === 'light' ? '#EEE' : '#b4b4b4'};\r\n        background-color: #fff;\r\n        color: ${props => props.themeStyle.all.mainColor};\r\n    }\r\n    .toastCompo-para {\r\n        padding: 10px 20px 0;\r\n        font-size: 14px;\r\n        color: ${props => props.themeStyle.all.blackColor};\r\n    }\r\n`;","import React from 'react';\r\nimport { ToastCompoStyled } from './toastCompoStyled';\r\nimport { connect } from 'react-redux';\r\n\r\nconst ToastCompo = props => (\r\n    <ToastCompoStyled site_lang={props.language.lang} myClass={props.msg.myClass} themeStyle={props.themeStyle} theme={props.theme}>\r\n        <h6 className='toastCompo-header'>{props.msg.title}</h6>\r\n        <p className='toastCompo-para'>{props.msg.myMsg}</p>\r\n    </ToastCompoStyled>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    theme: state.theme.theme,\r\n    themeStyle: state.theme.themeStyle,\r\n    language: state.lang.language\r\n});\r\n\r\nexport default connect(mapStateToProps)(ToastCompo);\r\n","import React, { useReducer, useCallback, useState, useEffect } from 'react';\r\nimport { SurahBoxList } from './surahBoxStyled';\r\nimport PlayBtn from '../playBtn/playBtn';\r\nimport HeartBtn from '../heartBox/heartBox';\r\nimport LinkBtn from '../linkBtn/linkBtn';\r\nimport DownloadBtn from '../downloadBtn/downloadBtn';\r\nimport ToastComp from '../toastCompo/toastCompo';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as favoriteActions from '../../store/action/favoriteActions';\r\n\r\nconst initialState = (state, action) => {\r\n    switch(action.type) {\r\n        case 'isToastOpen':\r\n            return {...state, isToastOpen: true, msg: action.msg, isFavorite: action.isFavorite}\r\n        case 'isToastClose':\r\n            return {...state, isToastOpen: false, msg: {}, isFavorite: state.isFavorite}\r\n        case 'isFavorite':\r\n            return {...state, isFavorite: action.isFavorite}\r\n        case 'Msg':\r\n            return {...state, msg: action.msg}\r\n        default: \r\n        return state;\r\n    }\r\n}\r\n\r\nconst SurahBox = ({ isFavor, playlist, allData, number, name, server, deleteFav, suraLink, copyText, language, addFav, clicked, isPlayToggle, site_language, deleteItemFromPlaylist, theme, themeStyle}) => {\r\n    \r\n    const [surahState, dispatch] = useReducer(initialState, {\r\n        isToastOpen: false,\r\n        isFavorite: isFavor,\r\n        msg: {}\r\n    });\r\n\r\n    const [isFav, setIsFav] = useState(isFavor);\r\n    const [linkState, setLinkState] = useState(false);\r\n\r\n    const toggleFav = () => {\r\n        if(isFav) {\r\n            playlist.map(list => {\r\n                if(list.server === `${allData.Server}/${number}.mp3` && list.number === number && list.suraName === name) {\r\n                    return deleteItemFromPlaylist({server: list.server});\r\n                }\r\n                return null;\r\n            });\r\n        }\r\n        setIsFav(!isFav);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(`${server}/${number}.mp3` === deleteFav) {\r\n            setIsFav(false);\r\n        }\r\n    }, [deleteFav, isFav, number, server]);\r\n\r\n    useEffect(() => {\r\n        if(suraLink === copyText) {\r\n            setLinkState(true);\r\n        } else {\r\n            setLinkState(false);\r\n        }\r\n    }, [suraLink, copyText]);\r\n\r\n    const setTime = () => setTimeout(() => {closeToast()}, 5000);\r\n\r\n    const openToast = useCallback((msg) => {\r\n        dispatch({type: 'isToastOpen', msg: {...msg}, isFavorite: msg.isFavorite });\r\n    }, []);\r\n\r\n    const closeToast = () => {\r\n        clearTimeout(setTime);\r\n        dispatch({type: 'isToastClose', msg: {}, isFavorite: surahState.isFavorite});\r\n    };\r\n\r\n    const cpiedFunc = () => {\r\n        clearTimeout(setTime);\r\n        openToast({title: language.lang === 'ar' ? 'تم النسخ' : 'Copied', myMsg: language.lang === 'ar' ? 'تم نسخ الرابط' : 'The Link is copied', myClass: 'added_item', isFavorite: surahState.isFavorite});\r\n        navigator.clipboard.writeText(copyText);\r\n    };\r\n\r\n    const favFunc = () => {\r\n        clearTimeout(setTime);\r\n        if(surahState.isFavorite) {\r\n            openToast({title: site_language.delete, myMsg: site_language.delete + ' ' + site_language.favorite, myClass:'remove_item', isFavorite: surahState.isFavorite});\r\n            dispatch({type: 'isFavorite', msg: 'the item was removed from favorites', isFavorite: !surahState.isFavorite });\r\n        } else {\r\n            openToast({title: site_language.add, myMsg: site_language.adding_done_susseccfully, myClass: 'added_item', isFavorite: surahState.isFavorite});\r\n            dispatch({type: 'isFavorite', msg: 'the item was removed from favorites', isFavorite: !surahState.isFavorite });\r\n        }\r\n    }\r\n\r\n    surahState.isToastOpen ? setTime() : clearTimeout(setTime);\r\n    \r\n    const addToFavList = () => {\r\n        favFunc();\r\n        addFav({isFavorite: !surahState.isFavorite, allData: allData });\r\n    }\r\n\r\n    return site_language && (\r\n        <>\r\n            {surahState.isToastOpen && <ToastComp msg={surahState.msg} />}\r\n            <SurahBoxList className='d-flex justify-content-between flex-wrap pr-1 pl-1 pr-sm-3 pl-sm-3' title={name} theme={theme} themeStyle={themeStyle} linkState={linkState}>\r\n                <div className='icon_name_number d-flex align-items-center' onClick={clicked}>\r\n                    <PlayBtn size={30} clicked={isPlayToggle} linkState={linkState} />\r\n                    <div className='surah-box-number' onClick={isPlayToggle}>{number}</div>\r\n                    <div className='surah-box-name text-capitalize' onClick={isPlayToggle}>{name}</div>\r\n                </div>\r\n                <div className='surah-box-imam-page-info d-flex align-items-center'>\r\n                    <div className='list hide_on_hover' title='copy link' onClick={() => cpiedFunc()}>\r\n                        <LinkBtn />\r\n                    </div>\r\n                    <div className='list hide_on_hover heart' title={isFavor ? site_language.delete + ' ' + site_language.favorite : site_language.add_files_playlist} onClick={addToFavList} >\r\n                        <HeartBtn size={22} server={server} number={number} isFav={isFav} toggleFav={toggleFav} />\r\n                    </div>\r\n                    <div className='list hide_on_hover heart' title='download' >\r\n                        <DownloadBtn size={22} url={copyText} suraName={name} />\r\n                    </div>\r\n                </div>\r\n            </SurahBoxList>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    suraLink: state.getData.suraLink,\r\n    playlist: state.fav.playlist,\r\n    deleteFav: state.fav.deleteFav,\r\n    theme: state.theme.theme,\r\n    themeStyle: state.theme.themeStyle,\r\n    language: state.lang.language,\r\n    site_language: state.lang.site_language\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    deleteItemFromPlaylist: (item) => dispatch(favoriteActions.removeItemFromPlayList(item))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SurahBox);","import React, { useEffect, useReducer, useState } from 'react';\r\nimport { ImamPageStyled } from './imamPageStyled';\r\nimport Form from 'react-bootstrap/Form';\r\nimport SurahBox from '../surahBox/surahBox';\r\nimport axios from '../../axiosBase/createAxios';\r\nimport ErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport { connect } from 'react-redux';\r\nimport Loader from '../Loader/loader';\r\nimport { Redirect  } from 'react-router-dom';\r\nimport * as favoriteActions from '../../store/action/favoriteActions';\r\nimport * as settingActions from '../../store/action/settingActions';\r\nimport * as getDataActions from '../../store/action/getDataActions';\r\n\r\nconst initialState = {\r\n    suraNumbers: [],\r\n    suraNames: [],\r\n    allSurasBoxs: []\r\n}\r\n\r\nconst myReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'surahNumbers':\r\n            return { ...state, suraNumbers: [...action.numbers] }\r\n        case 'surahNames':\r\n            return { ...state, suraNames: [...action.names] }\r\n        case 'allSurasBoxs':\r\n            return { ...state, allSurasBoxs: [...action.allSurasBoxes] }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst ImamPage = ({ startRequest, language, suras, successRequest, failRequest, server, getData, suraLink, isFromFavouritePlaylist, showPlayer, addToPlaylist, playlist, loading, site_language, theme, themeStyle}) => {\r\n        \r\n    const [state, dispatch] = useReducer(myReducer, initialState);\r\n    const [search, setSearch] = useState('');\r\n    const [filterSearch, setFilterSearch] = useState();\r\n\r\n    useEffect(() => {\r\n        let isCurrent = true\r\n        const api = () => {\r\n            startRequest();\r\n            axios.get(`/translations?languages=${language.lang}`)\r\n            .then(res => {\r\n                if (isCurrent) {\r\n                    dispatch({type: 'surahNumbers', numbers: suras});\r\n                    successRequest();\r\n                    let arrayNames = [];\r\n                    if(suras) {\r\n                        suras.map(num => arrayNames.push(res.data[language.lang][`sura${num}`]));\r\n                    }\r\n                    dispatch({type: 'surahNames', names: arrayNames})\r\n                }\r\n            })\r\n            .catch(error => {\r\n                if (isCurrent) {\r\n                    failRequest(error)\r\n                }\r\n            });\r\n        }\r\n\r\n        api();\r\n\r\n        return () => {\r\n            isCurrent = false;\r\n        }\r\n    }, [language.lang]);\r\n\r\n    const clickedHandler = (index) => {\r\n        let fixNum = index.length === 1 ? `00${index}` : index.length === 2 ? `0${index}` : index;\r\n        suraLink(`${server}/${fixNum}.mp3`);\r\n        isFromFavouritePlaylist(false);\r\n        showPlayer();\r\n    }\r\n\r\n    const addFavFun = (data, num, suraName) => {\r\n        let setData = {...data, number: num};\r\n        const collectData = {allDataPlaylist: data, isFavorite: setData.isFavorite, server: `${setData.allData.Server}/${setData.number}.mp3`, number: setData.number, name: setData.allData.name, rewaya: setData.allData.rewaya, suraName: suraName};\r\n        addToPlaylist(collectData);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let array2 = [];\r\n        state.allSurasBoxs.filter(sura => {\r\n            if(search === '') {\r\n                array2 = [state.allSurasBoxs];\r\n                setFilterSearch(array2);\r\n            } else if(sura.props.name.toLocaleLowerCase().includes(search.toLocaleLowerCase())) {\r\n                array2.push(\r\n                    <SurahBox\r\n                    key={`${server}/${sura.props.name}/${sura.props.number}/${sura.props.isFavor}`}\r\n                    name={sura.props.name}\r\n                    server={sura.props.server}\r\n                    number={sura.props.number}\r\n                    clicked={() => clickedHandler(sura.props.number)}\r\n                    addFav={(data) => addFavFun(data, sura.props.number, sura.props.name)}\r\n                    isFavor={sura.props.isFavor}\r\n                    allData={sura.props.allData}\r\n                    copyText={sura.props.copyText}\r\n                />);\r\n            }\r\n            return array2;\r\n        });\r\n        setFilterSearch(array2);\r\n    }, [search]);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, []);\r\n\r\n    let data = <Loader />;\r\n\r\n    let arr = [];\r\n    const suraLoop = () => {\r\n        let sing= null;\r\n        if(server && state.suraNames && state.suraNumbers && state.suraNumbers.length > 0 && state.suraNumbers) {\r\n            if(playlist && playlist.length > 0) {\r\n                for(let i=0; i < state.suraNumbers.length; i++) {\r\n                    let myNumber= null;\r\n                    let successFav = false;\r\n                    myNumber = state.suraNumbers[i].length === 1 ? `00${state.suraNumbers[i]}` : state.suraNumbers[i].length === 2 ? `0${state.suraNumbers[i]}` : state.suraNumbers[i];\r\n                    for (let k=0; k < playlist.length; k++) {\r\n                        sing= getData.name === playlist[k].name && myNumber === playlist[k].number && `${getData.Server}/${myNumber}.mp3` === playlist[k].server && state.suraNames[i] === playlist[k].suraName;\r\n                        if(sing){\r\n                            successFav = sing;\r\n                        }\r\n                    }\r\n\r\n                    arr.push(\r\n                        <SurahBox\r\n                            key={`${server}/${state.suraNames[i]}/${myNumber}`}\r\n                            name={state.suraNames[i]}\r\n                            server={getData.Server}\r\n                            number={myNumber}\r\n                            clicked={() => clickedHandler(state.suraNumbers[i])}\r\n                            addFav={(data) => addFavFun(data, myNumber, state.suraNames[i])}\r\n                            isFavor={successFav}\r\n                            allData={getData}\r\n                            copyText={`${server}/${myNumber}.mp3`}\r\n                        />\r\n                    )\r\n                }\r\n            } else {\r\n                for(let i=0; i < state.suraNumbers.length; i++){\r\n                    let myNumbers= null;\r\n                    let successFavs = false;\r\n                    myNumbers = state.suraNumbers[i].length === 1 ? `00${state.suraNumbers[i]}` : state.suraNumbers[i].length === 2 ? `0${state.suraNumbers[i]}` : state.suraNumbers[i];\r\n                    arr.push(\r\n                        <SurahBox\r\n                            key={`${server}/${state.suraNames[i]}/${myNumbers}`}\r\n                            name={state.suraNames[i]}\r\n                            server={getData.Server}\r\n                            number={myNumbers}\r\n                            clicked={() => clickedHandler(state.suraNumbers[i])}\r\n                            addFav={(data) => addFavFun(data, myNumbers, state.suraNames[i])}\r\n                            isFavor={successFavs}\r\n                            allData={getData}\r\n                            copyText={`${server}/${myNumbers}.mp3`}\r\n                        />\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        setFilterSearch(arr);\r\n        dispatch({type: 'allSurasBoxs', allSurasBoxes: arr});\r\n    }\r\n    \r\n    useEffect(() => {\r\n        server && state.suraNames && state.suraNumbers && state.suraNumbers.length > 0 && state.suraNumbers && suraLoop();\r\n    }, [server, state.suraNames, state.suraNumbers, state.suraNumbers]);\r\n\r\n    if(!loading && site_language) {\r\n        data = (\r\n            <>\r\n                {getData === null ? <Redirect to='/' /> : null}\r\n                <ImamPageStyled theme={theme} themeStyle={themeStyle} site_lang={language.lang}>\r\n                    <div className='top-search-rewaya mb-5'>\r\n                        <div className='top-search mb-2 mb-md-0'>\r\n                            <Form>\r\n                                <Form.Control type='text' placeholder={`${language.lang === 'ar' ? '...' + site_language.search + ' ' + site_language.surah_name : site_language.search + ' ' + site_language.surah_name + '...'}`} className='rounded-pill search-filed' onChange={e => setSearch(e.target.value)} dir='auto' />\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                    <ul className='all-surah-name'>\r\n                        {filterSearch}\r\n                    </ul>\r\n                </ImamPageStyled>\r\n            </>\r\n        )\r\n    }\r\n    return data;\r\n};\r\n\r\nconst mapStateToprops = state => ({\r\n    getData: state.getData.getData,\r\n    suras: state.getData.suras,\r\n    loading: state.getData.loading,\r\n    server: state.getData.server,\r\n    playlist: state.fav.playlist,\r\n    theme: state.theme.theme,\r\n    themeStyle: state.theme.themeStyle,\r\n    language: state.lang.language,\r\n    site_language: state.lang.site_language\r\n})\r\n\r\nconst mapDispatchToprops = dispatch => ({\r\n    showPlayer: () => dispatch(settingActions.showPlayer()),\r\n    suraLink: (link) => dispatch(getDataActions.suraLink(link)),\r\n    startRequest: () => dispatch(getDataActions.startRequest()),\r\n    successRequest: () => dispatch(getDataActions.successRequest()),\r\n    failRequest: (error) => dispatch(getDataActions.failRequest(error)),\r\n    addToPlaylist: (item) => dispatch(favoriteActions.addToPlayList(item)),\r\n    isFromFavouritePlaylist: (bool) => dispatch(favoriteActions.isFromFavouritePlaylist(bool)),\r\n})\r\n\r\nexport default connect(mapStateToprops, mapDispatchToprops)(ErrorHandler(ImamPage, axios));"],"sourceRoot":""}