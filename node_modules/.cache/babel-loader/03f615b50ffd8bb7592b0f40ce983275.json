{"ast":null,"code":"import * as actionType from '../action/actionTypes';\nconst initialState = {\n  isAsideShow: false,\n  letters: null,\n  lettersIndex: null,\n  allElementsImams: null,\n  data: null,\n  getData: null,\n  suras: [],\n  server: null,\n  showPlayer: false,\n  suraNumber: null,\n  suraName: null,\n  allSurasNames: [],\n  isPlaying: false,\n  suraLink: null,\n  loading: false,\n  error: null,\n  isRandom: false,\n  playlist: [],\n  deleteFav: '',\n  isFavPlaylist: false,\n  imamNameBeforeUpdate: null,\n  playlistImamName: null,\n  isThemeDark: false,\n  theme: 'light'\n};\n\nconst myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionType.START_MAIN:\n      return { ...state,\n        loading: true,\n        letters: null,\n        lettersIndex: null,\n        allElementsImams: null,\n        error: null,\n        server: null,\n        suras: [],\n        isRandom: false\n      };\n\n    case actionType.SUCCESS_MAIN:\n      return { ...state,\n        loading: false,\n        letters: action.letters,\n        lettersIndex: action.letterIndexs,\n        allElementsImams: action.allElements\n      };\n\n    case actionType.START_REQUEST:\n      return { ...state,\n        loading: true,\n        error: null,\n        data: null\n      };\n\n    case actionType.SUCCESS_REQUEST:\n      return { ...state,\n        loading: false\n      };\n\n    case actionType.FAIL_REQUEST:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    case actionType.CLOSE_ASIDE:\n      return { ...state,\n        isAsideShow: false\n      };\n\n    case actionType.OPEN_ASIDE:\n      return { ...state,\n        isAsideShow: true\n      };\n\n    case actionType.PLAYLIST_STORAGE:\n      return { ...state,\n        playlist: action.items\n      };\n\n    case actionType.ADD_TO_PLAYLIST:\n      let allList = state.playlist && state.playlist.some(list => list.server === action.item.server);\n      let item = null;\n\n      if (action.item.isFavorite && !allList) {\n        item = { ...state,\n          playlist: state.playlist.concat(action.item)\n        };\n      } else {\n        item = { ...state\n        };\n      }\n\n      return item;\n\n    case actionType.REMOVE_ITEM_FROM_PLAYLIST:\n      let filterPlaylist = state.playlist.filter(list => list.server !== action.item.server);\n      return { ...state,\n        playlist: filterPlaylist\n      };\n\n    case actionType.DELETE_FAVOURITE_FROM_SURABOX:\n      return { ...state,\n        deleteFav: action.item\n      };\n\n    case actionType.EMPTY_FAVOURITE_FROM_SURABOX:\n      return { ...state,\n        deleteFav: ''\n      };\n\n    case actionType.IS_FROM_FAVOURITE_PLAYLIST:\n      return { ...state,\n        isFavPlaylist: action.booleanValue\n      };\n\n    case actionType.FAVOURITE_PLAYLIST_IMMAM_NAME:\n      return { ...state,\n        playlistImamName: action.name\n      };\n\n    case actionType.GET_IMAM_DATA:\n      return { ...state,\n        getData: action.imamData,\n        suras: [...action.suras],\n        isRandom: true\n      };\n\n    case actionType.GET_SERVER:\n      return { ...state,\n        server: action.server\n      };\n\n    case actionType.SHOW_PLAYER:\n      return { ...state,\n        showPlayer: true\n      };\n\n    case actionType.SURA_NUMBER_NAME:\n      return { ...state,\n        suraNumber: action.suraNumber,\n        suraName: action.suraName\n      };\n\n    case actionType.CHANGE_NAME:\n      return { ...state,\n        suraName: action.name\n      };\n\n    case actionType.GET_IMAM_NAME_BEFORE_UPDATE:\n      return { ...state,\n        imamNameBeforeUpdate: action.name\n      };\n\n    case actionType.ALL_SUARS_NAMES:\n      return { ...state,\n        allSurasNames: action.surasNames\n      };\n\n    case actionType.PLAYER_TOGGLE:\n      return { ...state,\n        isPlaying: !state.isPlaying\n      };\n\n    case actionType.SURA_LINK:\n      return { ...state,\n        suraLink: action.link\n      };\n\n    case actionType.SURA_LINK_RANDOM:\n      return { ...state,\n        suraNumber: action.number,\n        suraLink: `${state.server}/${action.number}.mp3`\n      };\n\n    case actionType.PLAYING_FALSE:\n      return { ...state,\n        isPlaying: false\n      };\n\n    case actionType.PLAYING_TRUE:\n      return { ...state,\n        isPlaying: true\n      };\n\n    case actionType.EMPTY_SURAS:\n      return { ...state,\n        suras: []\n      };\n\n    case actionType.GET_SURAS:\n      return { ...state,\n        suras: state.getData.suras.split(',')\n      };\n\n    case actionType.IS_THEME_IS_DARK:\n      return { ...state,\n        isThemeDark: !state.isThemeDark\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default myReducer;","map":{"version":3,"sources":["C:/Users/USER/Desktop/HTML/quran_project_2/quran/src/store/reducer/mainReducer.js"],"names":["actionType","initialState","isAsideShow","letters","lettersIndex","allElementsImams","data","getData","suras","server","showPlayer","suraNumber","suraName","allSurasNames","isPlaying","suraLink","loading","error","isRandom","playlist","deleteFav","isFavPlaylist","imamNameBeforeUpdate","playlistImamName","isThemeDark","theme","myReducer","state","action","type","START_MAIN","SUCCESS_MAIN","letterIndexs","allElements","START_REQUEST","SUCCESS_REQUEST","FAIL_REQUEST","CLOSE_ASIDE","OPEN_ASIDE","PLAYLIST_STORAGE","items","ADD_TO_PLAYLIST","allList","some","list","item","isFavorite","concat","REMOVE_ITEM_FROM_PLAYLIST","filterPlaylist","filter","DELETE_FAVOURITE_FROM_SURABOX","EMPTY_FAVOURITE_FROM_SURABOX","IS_FROM_FAVOURITE_PLAYLIST","booleanValue","FAVOURITE_PLAYLIST_IMMAM_NAME","name","GET_IMAM_DATA","imamData","GET_SERVER","SHOW_PLAYER","SURA_NUMBER_NAME","CHANGE_NAME","GET_IMAM_NAME_BEFORE_UPDATE","ALL_SUARS_NAMES","surasNames","PLAYER_TOGGLE","SURA_LINK","link","SURA_LINK_RANDOM","number","PLAYING_FALSE","PLAYING_TRUE","EMPTY_SURAS","GET_SURAS","split","IS_THEME_IS_DARK"],"mappings":"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","sourcesContent":["import * as actionType from '../action/actionTypes';\r\n\r\nconst initialState = {\r\n    isAsideShow: false,\r\n    letters: null,\r\n    lettersIndex: null,\r\n    allElementsImams: null,\r\n    data: null,\r\n    getData: null,\r\n    suras: [],\r\n    server: null,\r\n    showPlayer: false,\r\n    suraNumber: null,\r\n    suraName: null,\r\n    allSurasNames: [],\r\n    isPlaying: false,\r\n    suraLink: null,\r\n    loading: false,\r\n    error: null,\r\n    isRandom: false,\r\n    playlist: [],\r\n    deleteFav: '',\r\n    isFavPlaylist: false,\r\n    imamNameBeforeUpdate: null,\r\n    playlistImamName: null,\r\n    isThemeDark: false,\r\n    theme: 'light'\r\n}\r\n\r\nconst myReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionType.START_MAIN:\r\n            return {...state, loading: true, letters: null, lettersIndex: null, allElementsImams: null, error: null, server: null, suras: [], isRandom: false};\r\n        case actionType.SUCCESS_MAIN:\r\n            return {...state, loading: false, letters: action.letters, lettersIndex: action.letterIndexs, allElementsImams: action.allElements};\r\n\r\n        case actionType.START_REQUEST:\r\n            return {...state, loading: true, error: null, data: null};\r\n        case actionType.SUCCESS_REQUEST:\r\n            return {...state, loading: false};\r\n        case actionType.FAIL_REQUEST:\r\n            return {...state, loading: false, error: action.error};\r\n        \r\n        case actionType.CLOSE_ASIDE:\r\n            return {...state, isAsideShow: false};\r\n        case actionType.OPEN_ASIDE:\r\n            return {...state, isAsideShow: true};\r\n\r\n        case actionType.PLAYLIST_STORAGE:\r\n            return {...state, playlist: action.items}\r\n\r\n        case actionType.ADD_TO_PLAYLIST:\r\n            let allList = state.playlist && state.playlist.some(list => list.server === action.item.server);\r\n            let item = null;\r\n            if(action.item.isFavorite && !allList) {\r\n                item = {...state, playlist: state.playlist.concat(action.item)};\r\n            } else {\r\n                item = {...state};\r\n            }\r\n            return item;\r\n        case actionType.REMOVE_ITEM_FROM_PLAYLIST:\r\n            let filterPlaylist = state.playlist.filter(list => list.server !== action.item.server);\r\n            return {...state, playlist: filterPlaylist}\r\n        case actionType.DELETE_FAVOURITE_FROM_SURABOX:\r\n            return {...state, deleteFav: action.item}\r\n        case actionType.EMPTY_FAVOURITE_FROM_SURABOX:\r\n            return {...state, deleteFav: ''}\r\n        case actionType.IS_FROM_FAVOURITE_PLAYLIST:\r\n            return {...state, isFavPlaylist: action.booleanValue}\r\n        case actionType.FAVOURITE_PLAYLIST_IMMAM_NAME:\r\n            return {...state, playlistImamName: action.name}\r\n\r\n        case actionType.GET_IMAM_DATA:\r\n            return {...state, getData: action.imamData, suras: [...action.suras], isRandom: true};\r\n        case actionType.GET_SERVER:\r\n            return {...state, server: action.server};\r\n        case actionType.SHOW_PLAYER:\r\n            return {...state, showPlayer: true};\r\n        case actionType.SURA_NUMBER_NAME:\r\n            return {...state, suraNumber: action.suraNumber, suraName: action.suraName};\r\n        case actionType.CHANGE_NAME:\r\n            return {...state, suraName: action.name};\r\n        case actionType.GET_IMAM_NAME_BEFORE_UPDATE:\r\n            return {...state, imamNameBeforeUpdate: action.name};\r\n        case actionType.ALL_SUARS_NAMES:\r\n            return {...state, allSurasNames: action.surasNames};\r\n        case actionType.PLAYER_TOGGLE:\r\n            return {...state, isPlaying: !state.isPlaying};\r\n        case actionType.SURA_LINK:\r\n            return {...state, suraLink: action.link};\r\n        case actionType.SURA_LINK_RANDOM:\r\n            return {...state, suraNumber: action.number, suraLink: `${state.server}/${action.number}.mp3`};\r\n        case actionType.PLAYING_FALSE:\r\n            return {...state, isPlaying: false};\r\n        case actionType.PLAYING_TRUE:\r\n            return {...state, isPlaying: true};\r\n        case actionType.EMPTY_SURAS:\r\n            return {...state, suras: []};\r\n        case actionType.GET_SURAS:\r\n            return {...state, suras: state.getData.suras.split(',')}\r\n        case actionType.IS_THEME_IS_DARK:\r\n            return {...state, isThemeDark: !state.isThemeDark}\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}