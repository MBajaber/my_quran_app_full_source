{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\HTML\\\\quran_project_2\\\\quran\\\\src\\\\components\\\\imamPage\\\\ImamPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer } from 'react';\nimport './ImamPage.css';\nimport Form from 'react-bootstrap/Form';\nimport HeartBox from '../heartBox/heartBox';\nimport SurahBox from '../surahBox/surahBox';\nimport axios from '../../axiosBase/createAxios';\nimport ErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/action/getData';\nimport Loader from '../UI/Loader/loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  suraNumbers: [],\n  suraNames: []\n};\n\nconst myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'surahNumbers':\n      return { ...state,\n        suraNumbers: [...action.numbers]\n      };\n\n    case 'surahNames':\n      return { ...state,\n        suraNames: [...action.names]\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst ImamPage = props => {\n  _s();\n\n  const [state, dispatch] = useReducer(myReducer, initialState);\n\n  const Items = async () => {\n    props.startRequest();\n    axios.get('/translations?languages=en').then(res => {\n      dispatch({\n        type: 'surahNumbers',\n        numbers: props.suras\n      });\n      props.successRequest();\n      let arrayNames = [];\n\n      if (props.suras) {\n        props.suras.map(num => {\n          arrayNames.push(res.data.en[`sura${num}`]);\n        });\n      }\n\n      dispatch({\n        type: 'surahNames',\n        names: arrayNames\n      });\n      props.allSuras(arrayNames);\n      console.log('Response');\n    }).catch(error => {\n      props.failRequest(error);\n    });\n  };\n\n  useEffect(() => {\n    Items();\n  }, []);\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const clickedHandler = (index, suraName) => {\n    let fixNum = index.length === 1 ? `00${index}` : index.length === 2 ? `0${index}` : index;\n    props.showPlayer();\n    props.getSurahNumber(fixNum, suraName);\n    props.suraLink();\n    props.playingFalse();\n    props.imamName(props.getData.name);\n  };\n\n  const addFavFun = (data, num, suraName) => {\n    let setData = { ...data,\n      number: num\n    };\n    const collectData = {\n      isFavorite: setData.isFavorite,\n      server: `${setData.allData.Server}/${setData.number}.mp3`,\n      number: setData.number,\n      name: setData.allData.name,\n      rewaya: setData.allData.rewaya,\n      suraName: suraName\n    };\n    props.addToPlaylist(collectData);\n    localStorage.setItem('playlist', JSON.stringify(props.playlist));\n  };\n\n  let data = /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 16\n  }, this);\n\n  console.log('IMMAM PAGE');\n  let arr = [];\n\n  const suraLoop = () => {\n    let sing = null;\n\n    if (props.server && state.suraNames && state.suraNumbers && state.suraNumbers.length > 0 && state.suraNumbers) {\n      if (props.playlist && props.playlist.length > 0) {\n        for (let i = 0; i < state.suraNumbers.length; i++) {\n          let myNumber = null;\n          let successFav = false;\n          myNumber = state.suraNumbers[i].length === 1 ? `00${state.suraNumbers[i]}` : state.suraNumbers[i].length === 2 ? `0${state.suraNumbers[i]}` : state.suraNumbers[i];\n\n          for (let k = 0; k < props.playlist.length; k++) {\n            sing = props.getData.name === props.playlist[k].name && myNumber === props.playlist[k].number && `${props.getData.Server}/${myNumber}.mp3` === props.playlist[k].server && state.suraNames[i] === props.playlist[k].suraName;\n\n            if (sing) {\n              successFav = sing; // console.log(state.suraNames[i]+ ' => ' + successFav);\n            }\n          }\n\n          console.log('Long'); // console.log(state.suraNames[i]+ ' => ' + successFav);\n\n          arr.push( /*#__PURE__*/_jsxDEV(SurahBox, {\n            name: state.suraNames[i],\n            server: props.getData.Server,\n            number: myNumber,\n            clicked: () => clickedHandler(state.suraNumbers[i], state.suraNames[i]),\n            addFav: data => addFavFun(data, myNumber, state.suraNames[i]),\n            isFavor: successFav,\n            allData: props.getData,\n            copyText: `${props.server}/${myNumber}.mp3`\n          }, `${props.server}/${state.suraNames[i]}/${myNumber}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this));\n        }\n      } else {\n        for (let i = 0; i < state.suraNumbers.length; i++) {\n          let myNumbers = null;\n          let successFav = false;\n          myNumbers = state.suraNumbers[i].length === 1 ? `00${state.suraNumbers[i]}` : state.suraNumbers[i].length === 2 ? `0${state.suraNumbers[i]}` : state.suraNumbers[i];\n          console.log('Short');\n          arr.push( /*#__PURE__*/_jsxDEV(SurahBox, {\n            name: state.suraNames[i],\n            server: props.getData.Server,\n            number: myNumbers,\n            clicked: () => clickedHandler(state.suraNumbers[i], state.suraNames[i]),\n            addFav: data => addFavFun(data, myNumbers, state.suraNames[i]),\n            isFavor: successFav,\n            allData: props.getData,\n            copyText: `${props.server}/${myNumbers}.mp3`\n          }, `${props.server}/${state.suraNames[i]}/${myNumbers}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this));\n        }\n      }\n    }\n\n    return arr;\n  };\n\n  suraLoop();\n\n  if (!props.loading) {\n    data = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imam-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-search mb-4 d-flex align-center justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Search by Sura Name\",\n            className: \"rounded-pill search-filed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(HeartBox, {\n          size: 22,\n          bgColor: \"#FFF\",\n          colorOne: \"#F5B44B\",\n          colorTwo: \"#0D3A4D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"all-surah-name\",\n        children: arr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this);\n  }\n\n  return data;\n};\n\n_s(ImamPage, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n\n_c = ImamPage;\n\nconst mapStateToprops = state => ({\n  getData: state.getData,\n  suras: state.suras,\n  imamPage: state.imamPage,\n  loading: state.loading,\n  server: state.server,\n  playlist: state.playlist\n});\n\nconst mapDispatchToprops = dispatch => ({\n  showPlayer: () => dispatch(actions.showPlayer()),\n  getSurahNumber: (number, name) => dispatch(actions.getSurah_Number_Name(number, name)),\n  suraLink: () => dispatch(actions.suraLink()),\n  playingFalse: () => dispatch(actions.playingFalse()),\n  allSuras: names => dispatch(actions.allSurasNames(names)),\n  startRequest: () => dispatch(actions.startRequest()),\n  successRequest: () => dispatch(actions.successRequest()),\n  failRequest: error => dispatch(actions.failRequest(error)),\n  imamName: name => dispatch(actions.GetImamNameBeforeUpdate(name)),\n  addToPlaylist: item => dispatch(actions.addToPlayList(item))\n});\n\nexport default connect(mapStateToprops, mapDispatchToprops)(ErrorHandler(ImamPage, axios));\n\nvar _c;\n\n$RefreshReg$(_c, \"ImamPage\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/HTML/quran_project_2/quran/src/components/imamPage/ImamPage.js"],"names":["React","useEffect","useReducer","Form","HeartBox","SurahBox","axios","ErrorHandler","connect","actions","Loader","initialState","suraNumbers","suraNames","myReducer","state","action","type","numbers","names","ImamPage","props","dispatch","Items","startRequest","get","then","res","suras","successRequest","arrayNames","map","num","push","data","en","allSuras","console","log","catch","error","failRequest","window","scrollTo","clickedHandler","index","suraName","fixNum","length","showPlayer","getSurahNumber","suraLink","playingFalse","imamName","getData","name","addFavFun","setData","number","collectData","isFavorite","server","allData","Server","rewaya","addToPlaylist","localStorage","setItem","JSON","stringify","playlist","arr","suraLoop","sing","i","myNumber","successFav","k","myNumbers","loading","mapStateToprops","imamPage","mapDispatchToprops","getSurah_Number_Name","allSurasNames","GetImamNameBeforeUpdate","item","addToPlayList"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer } from 'react';\r\nimport './ImamPage.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport HeartBox from '../heartBox/heartBox';\r\nimport SurahBox from '../surahBox/surahBox';\r\nimport axios from '../../axiosBase/createAxios';\r\nimport ErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/action/getData';\r\nimport Loader from '../UI/Loader/loader';\r\n\r\nconst initialState = {\r\n    suraNumbers: [],\r\n    suraNames: [],\r\n}\r\n\r\nconst myReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'surahNumbers':\r\n            return { ...state, suraNumbers: [...action.numbers] }\r\n        case 'surahNames':\r\n            return { ...state, suraNames: [...action.names] }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst ImamPage = props => {\r\n    \r\n    const [state, dispatch] = useReducer(myReducer, initialState);\r\n    const Items = async () => {\r\n        props.startRequest();\r\n        axios.get('/translations?languages=en')\r\n        .then(res => {\r\n            dispatch({type: 'surahNumbers', numbers: props.suras});\r\n            props.successRequest();\r\n            let arrayNames = [];\r\n            if(props.suras) {\r\n                props.suras.map(num => {\r\n                    arrayNames.push(res.data.en[`sura${num}`]);\r\n                });\r\n            }\r\n            dispatch({type: 'surahNames', names: arrayNames})\r\n            props.allSuras(arrayNames)\r\n            console.log('Response');\r\n        })\r\n        .catch(error => {\r\n            props.failRequest(error)\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        Items();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, []);\r\n    \r\n\r\n    const clickedHandler = (index, suraName) => {\r\n        let fixNum = index.length === 1 ? `00${index}` : index.length === 2 ? `0${index}` : index;\r\n        props.showPlayer();\r\n        props.getSurahNumber(fixNum, suraName);\r\n        props.suraLink();\r\n        props.playingFalse();\r\n        props.imamName(props.getData.name);\r\n    }\r\n\r\n    const addFavFun = (data, num, suraName) => {\r\n        let setData = {...data, number: num};\r\n        const collectData = {isFavorite: setData.isFavorite, server: `${setData.allData.Server}/${setData.number}.mp3`, number: setData.number, name: setData.allData.name, rewaya: setData.allData.rewaya, suraName: suraName};\r\n        props.addToPlaylist(collectData);\r\n        localStorage.setItem('playlist', JSON.stringify(props.playlist));\r\n    }\r\n\r\n    let data = <Loader />;\r\n    console.log('IMMAM PAGE')\r\n    let arr = [];\r\n    const suraLoop = () => {\r\n        let sing= null;\r\n        if(props.server && state.suraNames && state.suraNumbers && state.suraNumbers.length > 0 && state.suraNumbers) {\r\n            if(props.playlist && props.playlist.length > 0) {\r\n                for(let i=0; i < state.suraNumbers.length; i++){\r\n                    let myNumber= null;\r\n                    let successFav = false;\r\n                    myNumber = state.suraNumbers[i].length === 1 ? `00${state.suraNumbers[i]}` : state.suraNumbers[i].length === 2 ? `0${state.suraNumbers[i]}` : state.suraNumbers[i];\r\n                    for (let k=0; k < props.playlist.length; k++) {\r\n                        sing= props.getData.name === props.playlist[k].name && myNumber === props.playlist[k].number && `${props.getData.Server}/${myNumber}.mp3` === props.playlist[k].server && state.suraNames[i] === props.playlist[k].suraName;\r\n                        if(sing){\r\n                            successFav = sing;\r\n                            // console.log(state.suraNames[i]+ ' => ' + successFav);\r\n                        }\r\n                    }\r\n                    console.log('Long');\r\n                    // console.log(state.suraNames[i]+ ' => ' + successFav);\r\n                    arr.push(\r\n                        <SurahBox\r\n                            key={`${props.server}/${state.suraNames[i]}/${myNumber}`}\r\n                            name={state.suraNames[i]}\r\n                            server={props.getData.Server}\r\n                            number={myNumber}\r\n                            clicked={() => clickedHandler(state.suraNumbers[i], state.suraNames[i])}\r\n                            addFav={(data) => addFavFun(data, myNumber, state.suraNames[i])}\r\n                            isFavor={successFav}\r\n                            allData={props.getData}\r\n                            copyText={`${props.server}/${myNumber}.mp3`}\r\n                        />\r\n                    )\r\n                }\r\n            } else {\r\n                for(let i=0; i < state.suraNumbers.length; i++){\r\n                    let myNumbers= null;\r\n                    let successFav = false;\r\n                    myNumbers = state.suraNumbers[i].length === 1 ? `00${state.suraNumbers[i]}` : state.suraNumbers[i].length === 2 ? `0${state.suraNumbers[i]}` : state.suraNumbers[i];\r\n                    console.log('Short')\r\n                    arr.push(\r\n                        <SurahBox\r\n                            key={`${props.server}/${state.suraNames[i]}/${myNumbers}`}\r\n                            name={state.suraNames[i]}\r\n                            server={props.getData.Server}\r\n                            number={myNumbers}\r\n                            clicked={() => clickedHandler(state.suraNumbers[i], state.suraNames[i])}\r\n                            addFav={(data) => addFavFun(data, myNumbers, state.suraNames[i])}\r\n                            isFavor={successFav}\r\n                            allData={props.getData}\r\n                            copyText={`${props.server}/${myNumbers}.mp3`}\r\n                        />\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    suraLoop();\r\n\r\n    if(!props.loading) {\r\n        \r\n        data = (\r\n            <div className='imam-page'>\r\n                <div className='top-search mb-4 d-flex align-center justify-content-between'>\r\n                    <Form>\r\n                        <Form.Control type='text' placeholder='Search by Sura Name' className='rounded-pill search-filed' />\r\n                    </Form>\r\n                    <HeartBox size={22} bgColor='#FFF' colorOne='#F5B44B' colorTwo='#0D3A4D' />\r\n                </div>\r\n                <ul className='all-surah-name'>\r\n                {/* {   isFavorite: true\r\n                    name: \"Abdelbari Al-Toubayti\"\r\n                    number: \"001\"\r\n                    rewaya: \"Rewayat Hafs A'n Assem\"\r\n                    server: \"https://server6.mp3quran.net/thubti/001.mp3\"\r\n                    suraName: \"Al-Fatihah\"\r\n                } */}\r\n\r\n                    {arr}\r\n\r\n                    {/* ****************************************************************************** */}\r\n\r\n                    {/* {\r\n                        props.server && state.suraNames && state.suraNumbers && state.suraNumbers.length > 0 && state.suraNumbers.map((num, i) => {\r\n                            const myNumber = num.length === 1 ? `00${num}` : num.length === 2 ? `0${num}` : num;\r\n                            return (\r\n                                <SurahBox\r\n                                key={`${props.server}/${state.suraNames[i]}/${num.length === 1 ? `00${num}` : num.length === 2 ? `0${num}` : num}`}\r\n                                name={state.suraNames[i]}\r\n                                server={props.getData.Server}\r\n                                number={myNumber}\r\n                                clicked={() => clickedHandler(state.suraNumbers[i], state.suraNames[i])}\r\n                                addFav={(data) => addFavFun(data, myNumber, state.suraNames[i])}\r\n                                allData={props.getData}\r\n                                copyText={`${props.server}/${myNumber}.mp3`}\r\n                            />\r\n                            )\r\n                        })\r\n                    } */}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n    return data;\r\n};\r\n\r\nconst mapStateToprops = state => ({\r\n    getData: state.getData,\r\n    suras: state.suras,\r\n    imamPage: state.imamPage,\r\n    loading: state.loading,\r\n    server: state.server,\r\n    playlist: state.playlist\r\n})\r\n\r\nconst mapDispatchToprops = dispatch => ({\r\n    showPlayer: () => dispatch(actions.showPlayer()),\r\n    getSurahNumber: (number, name) => dispatch(actions.getSurah_Number_Name(number, name)),\r\n    suraLink: () => dispatch(actions.suraLink()),\r\n    playingFalse: () => dispatch(actions.playingFalse()),\r\n    allSuras: (names) => dispatch(actions.allSurasNames(names)),\r\n    startRequest: () => dispatch(actions.startRequest()),\r\n    successRequest: () => dispatch(actions.successRequest()),\r\n    failRequest: (error) => dispatch(actions.failRequest(error)),\r\n    imamName: (name) => dispatch(actions.GetImamNameBeforeUpdate(name)),\r\n    addToPlaylist: (item) => dispatch(actions.addToPlayList(item))\r\n})\r\n\r\nexport default connect(mapStateToprops, mapDispatchToprops)(ErrorHandler(ImamPage, axios));"]},"metadata":{},"sourceType":"module"}