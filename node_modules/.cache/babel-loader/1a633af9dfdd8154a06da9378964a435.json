{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\HTML\\\\quran_project_2\\\\quran\\\\src\\\\components\\\\imamBoxs\\\\imamBoxs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport './imamBoxs.css';\nimport LetterSection from '../letters/letterSection';\nimport ShikhNames from '../shikhNames/shikhNames';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/action/getData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imamBoxs = /*#__PURE__*/React.memo(_s(props => {\n  _s();\n\n  const {\n    boxes,\n    search,\n    letter\n  } = props;\n  const clicked = useCallback(link => {\n    props.getData && props.imamName(props.getData.name);\n    props.getDataFunc(link);\n    props.getServer(link.Server);\n    props.history.push('/imamPage');\n  }, []); // const allboxs = props.boxes.map(box => <ShikhNames \n  //     clicked={() => clicked(box)}\n  //     key={box.id}\n  //     link={box.Server}\n  //     text={box.name}\n  //     title={+box.count === 114 ? 'All Quran' : `${+box.count} Sura`}\n  //     count={+box.count}\n  //     suras={box.suras}\n  //     rewaya={box.rewaya}\n  // />)\n\n  let allElementsInSection = [];\n  const allboxs = boxes.map(box => {\n    if (search === '') {\n      allElementsInSection.push( /*#__PURE__*/_jsxDEV(ShikhNames, {\n        clicked: () => clicked(box),\n        link: box.Server,\n        text: box.name,\n        title: +box.count === 114 ? 'All Quran' : `${+box.count} Sura`,\n        count: +box.count,\n        suras: box.suras,\n        rewaya: box.rewaya\n      }, box.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this));\n    } else if (box.name.toLocaleLowerCase().includes(search.toLocaleLowerCase())) {\n      allElementsInSection.push( /*#__PURE__*/_jsxDEV(ShikhNames, {\n        clicked: () => clicked(box),\n        link: box.Server,\n        text: box.name,\n        title: +box.count === 114 ? 'All Quran' : `${+box.count} Sura`,\n        count: +box.count,\n        suras: box.suras,\n        rewaya: box.rewaya\n      }, box.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this));\n    }\n  });\n  console.log(letter + ' ==>> ' + allElementsInSection.length);\n  return allElementsInSection.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"emam-section\",\n    id: `letter_${letter}`,\n    children: [/*#__PURE__*/_jsxDEV(LetterSection, {\n      letter: letter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emams-boxes\",\n      children: allElementsInSection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this) : null;\n}, \"T+cdsskpQc74ZI5HU9rvFHw1GLY=\"), [boxes, search]);\n\nconst mapStateToprops = state => ({\n  getData: state.getData\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getDataFunc: data => dispatch(actions.getData(data)),\n    getServer: server => dispatch(actions.getServer(server)),\n    imamName: name => dispatch(actions.getImamNameBeforeUpdate(name))\n  };\n};\n\nexport default connect(mapStateToprops, mapDispatchToProps)(withRouter(imamBoxs));","map":{"version":3,"sources":["C:/Users/USER/Desktop/HTML/quran_project_2/quran/src/components/imamBoxs/imamBoxs.js"],"names":["React","useCallback","LetterSection","ShikhNames","withRouter","connect","actions","imamBoxs","memo","props","boxes","search","letter","clicked","link","getData","imamName","name","getDataFunc","getServer","Server","history","push","allElementsInSection","allboxs","map","box","count","suras","rewaya","id","toLocaleLowerCase","includes","console","log","length","mapStateToprops","state","mapDispatchToProps","dispatch","data","server","getImamNameBeforeUpdate"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\r\nimport './imamBoxs.css';\r\nimport LetterSection from '../letters/letterSection';\r\nimport ShikhNames from '../shikhNames/shikhNames';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/action/getData';\r\n\r\n\r\nconst imamBoxs = React.memo(props => {\r\n    const {boxes, search, letter} = props;\r\n    const clicked = useCallback(link => {\r\n        props.getData && props.imamName(props.getData.name);\r\n        props.getDataFunc(link);\r\n        props.getServer(link.Server);\r\n        props.history.push('/imamPage')\r\n    }, []);\r\n\r\n    // const allboxs = props.boxes.map(box => <ShikhNames \r\n    //     clicked={() => clicked(box)}\r\n    //     key={box.id}\r\n    //     link={box.Server}\r\n    //     text={box.name}\r\n    //     title={+box.count === 114 ? 'All Quran' : `${+box.count} Sura`}\r\n    //     count={+box.count}\r\n    //     suras={box.suras}\r\n    //     rewaya={box.rewaya}\r\n    // />)\r\n    \r\n    let allElementsInSection = [];\r\n    const allboxs = boxes.map(box => {\r\n        if(search === '') {\r\n            allElementsInSection.push (\r\n                <ShikhNames \r\n                    clicked={() => clicked(box)}\r\n                    key={box.id}\r\n                    link={box.Server}\r\n                    text={box.name}\r\n                    title={+box.count === 114 ? 'All Quran' : `${+box.count} Sura`}\r\n                    count={+box.count}\r\n                    suras={box.suras}\r\n                    rewaya={box.rewaya}\r\n                />\r\n            );\r\n        } else if(box.name.toLocaleLowerCase().includes(search.toLocaleLowerCase())) {\r\n            allElementsInSection.push (\r\n                <ShikhNames \r\n                    clicked={() => clicked(box)}\r\n                    key={box.id}\r\n                    link={box.Server}\r\n                    text={box.name}\r\n                    title={+box.count === 114 ? 'All Quran' : `${+box.count} Sura`}\r\n                    count={+box.count}\r\n                    suras={box.suras}\r\n                    rewaya={box.rewaya}\r\n                />\r\n            );\r\n        }        \r\n    })\r\n\r\n    console.log(letter + ' ==>> ' + allElementsInSection.length);\r\n\r\n    return allElementsInSection.length > 0 ? (\r\n        <div className='emam-section' id={`letter_${letter}`}>\r\n            <LetterSection letter={letter} />\r\n            <div className='emams-boxes'>\r\n                {allElementsInSection}\r\n            </div>\r\n        </div>\r\n    ) : null;\r\n}, [boxes, search]);\r\n\r\nconst mapStateToprops = state => ({\r\n    getData: state.getData\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getDataFunc: (data) => dispatch(actions.getData(data)),\r\n        getServer: (server) => dispatch(actions.getServer(server)),\r\n        imamName: (name) => dispatch(actions.getImamNameBeforeUpdate(name))\r\n    }\r\n} \r\n\r\nexport default connect(mapStateToprops, mapDispatchToProps)(withRouter(imamBoxs));\r\n"]},"metadata":{},"sourceType":"module"}