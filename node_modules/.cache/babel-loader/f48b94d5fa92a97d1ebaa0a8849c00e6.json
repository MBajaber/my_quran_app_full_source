{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\HTML\\\\quran_project_2\\\\quran\\\\src\\\\components\\\\imamPage\\\\ImamPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer, useState } from 'react';\nimport './ImamPage.css';\nimport Form from 'react-bootstrap/Form';\nimport SurahBox from '../surahBox/surahBox';\nimport axios from '../../axiosBase/createAxios';\nimport ErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/action/getData';\nimport Loader from '../UI/Loader/loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  suraNumbers: [],\n  suraNames: [],\n  allSurasBoxs: []\n};\n\nconst myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'surahNumbers':\n      return { ...state,\n        suraNumbers: [...action.numbers]\n      };\n\n    case 'surahNames':\n      return { ...state,\n        suraNames: [...action.names]\n      };\n\n    case 'allSurasBoxs':\n      return { ...state,\n        allSurasBoxs: [...action.allSurasBoxes]\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst ImamPage = props => {\n  _s();\n\n  const [state, dispatch] = useReducer(myReducer, initialState);\n  const [search, setSearch] = useState('');\n  const [filterSearch, setFilterSearch] = useState();\n\n  const Items = async () => {\n    props.startRequest();\n    await axios.get('/translations?languages=en').then(res => {\n      console.log(res.data.en);\n      dispatch({\n        type: 'surahNumbers',\n        numbers: props.suras\n      });\n      props.successRequest();\n      let arrayNames = [];\n\n      if (props.suras) {\n        props.suras.map(num => arrayNames.push(res.data.en[`sura${num}`]));\n      }\n\n      dispatch({\n        type: 'surahNames',\n        names: arrayNames\n      });\n      props.allSuras(arrayNames);\n      console.log('Response');\n    }).catch(error => {\n      props.failRequest(error);\n    });\n  };\n\n  useEffect(() => {\n    Items();\n  }, []);\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  console.log('Immam Page ========>>>>>>'); // console.log(state.suraNames);\n\n  const clickedHandler = (index, suraName) => {\n    let fixNum = index.length === 1 ? `00${index}` : index.length === 2 ? `0${index}` : index;\n    props.getSurah_Number_Name(fixNum, suraName);\n    props.suraLink(`${props.server}/${fixNum}.mp3`);\n    props.imamName(props.getData.name);\n    props.playingFalse();\n    props.showPlayer();\n    props.isFromFavouritePlaylist(false);\n  };\n\n  const addFavFun = (data, num, suraName) => {\n    let setData = { ...data,\n      number: num\n    };\n    const collectData = {\n      allDataPlaylist: data,\n      isFavorite: setData.isFavorite,\n      server: `${setData.allData.Server}/${setData.number}.mp3`,\n      number: setData.number,\n      name: setData.allData.name,\n      rewaya: setData.allData.rewaya,\n      suraName: suraName\n    };\n    props.addToPlaylist(collectData);\n  };\n\n  let data = /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 16\n  }, this);\n\n  let arr = [];\n\n  const suraLoop = () => {\n    let sing = null;\n\n    if (props.server && state.suraNames && state.suraNumbers && state.suraNumbers.length > 0 && state.suraNumbers) {\n      console.log('XXX');\n\n      if (props.playlist && props.playlist.length > 0) {\n        for (let i = 0; i < state.suraNumbers.length; i++) {\n          let myNumber = null;\n          let successFav = false;\n          myNumber = state.suraNumbers[i].length === 1 ? `00${state.suraNumbers[i]}` : state.suraNumbers[i].length === 2 ? `0${state.suraNumbers[i]}` : state.suraNumbers[i];\n\n          for (let k = 0; k < props.playlist.length; k++) {\n            sing = props.getData.name === props.playlist[k].name && myNumber === props.playlist[k].number && `${props.getData.Server}/${myNumber}.mp3` === props.playlist[k].server && state.suraNames[i] === props.playlist[k].suraName;\n\n            if (sing) {\n              successFav = sing;\n            }\n          }\n\n          console.log('Long');\n          arr.push( /*#__PURE__*/_jsxDEV(SurahBox, {\n            name: state.suraNames[i],\n            server: props.getData.Server,\n            number: myNumber,\n            clicked: () => clickedHandler(state.suraNumbers[i], state.suraNames[i]),\n            addFav: data => addFavFun(data, myNumber, state.suraNames[i]),\n            isFavor: successFav,\n            allData: props.getData,\n            copyText: `${props.server}/${myNumber}.mp3`\n          }, `${props.server}/${state.suraNames[i]}/${myNumber}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this));\n        }\n      } else {\n        console.log('YYY');\n\n        for (let i = 0; i < state.suraNumbers.length; i++) {\n          let myNumbers = null;\n          let successFavs = false;\n          myNumbers = state.suraNumbers[i].length === 1 ? `00${state.suraNumbers[i]}` : state.suraNumbers[i].length === 2 ? `0${state.suraNumbers[i]}` : state.suraNumbers[i];\n          console.log('Short');\n          arr.push( /*#__PURE__*/_jsxDEV(SurahBox, {\n            name: state.suraNames[i],\n            server: props.getData.Server,\n            number: myNumbers,\n            clicked: () => clickedHandler(state.suraNumbers[i], state.suraNames[i]),\n            addFav: data => addFavFun(data, myNumbers, state.suraNames[i]),\n            isFavor: successFavs,\n            allData: props.getData,\n            copyText: `${props.server}/${myNumbers}.mp3`\n          }, `${props.server}/${state.suraNames[i]}/${myNumbers}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this));\n        }\n      }\n    }\n\n    setFilterSearch(arr);\n    dispatch({\n      type: 'allSurasBoxs',\n      allSurasBoxes: arr\n    });\n  };\n\n  useEffect(() => {\n    props.server && state.suraNames && state.suraNumbers && state.suraNumbers.length > 0 && state.suraNumbers && suraLoop();\n  }, [props.server, state.suraNames, state.suraNumbers, state.suraNumbers]);\n  useEffect(() => {\n    let array2 = [];\n    state.allSurasBoxs.filter(sura => {\n      if (search === '') {\n        // setAllboxes(filterSearch)\n        array2 = [state.allSurasBoxs];\n        setFilterSearch(array2);\n      } else if (sura.props.name.toLocaleLowerCase().includes(search.toLocaleLowerCase())) {\n        array2.push( /*#__PURE__*/_jsxDEV(SurahBox, {\n          name: sura.props.name,\n          server: sura.props.server,\n          number: sura.props.number,\n          clicked: () => clickedHandler(sura.props.number, sura.props.name),\n          addFav: data => addFavFun(data, sura.props.number, sura.props.name),\n          isFavor: sura.props.isFavor,\n          allData: sura.props.allData,\n          copyText: sura.props.copyText\n        }, `${props.server}/${sura.props.name}/${sura.props.number}/${sura.props.isFavor}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this));\n      }\n    });\n    setFilterSearch(array2);\n  }, [search, props.getData]);\n\n  if (!props.loading) {\n    data = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imam-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-search mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Search by Sura Name...\",\n            className: \"rounded-pill search-filed\",\n            onChange: e => setSearch(e.target.value),\n            dir: \"auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"all-surah-name\",\n        children: filterSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this);\n  }\n\n  return data;\n};\n\n_s(ImamPage, \"wRtC4bm4z2M6FO0mL04Eiay8w+4=\");\n\n_c = ImamPage;\n\nconst mapStateToprops = state => ({\n  getData: state.getData,\n  suras: state.suras,\n  imamPage: state.imamPage,\n  loading: state.loading,\n  server: state.server,\n  playlist: state.playlist,\n  suraNumber: state.suraNumber,\n  server: state.server\n});\n\nconst mapDispatchToprops = dispatch => ({\n  showPlayer: () => dispatch(actions.showPlayer()),\n  getSurah_Number_Name: (number, suraName) => dispatch(actions.getSurah_Number_Name(number, suraName)),\n  suraLink: link => dispatch(actions.suraLink(link)),\n  playingFalse: () => dispatch(actions.playingFalse()),\n  allSuras: names => dispatch(actions.allSurasNames(names)),\n  startRequest: () => dispatch(actions.startRequest()),\n  successRequest: () => dispatch(actions.successRequest()),\n  failRequest: error => dispatch(actions.failRequest(error)),\n  imamName: name => dispatch(actions.getImamNameBeforeUpdate(name)),\n  addToPlaylist: item => dispatch(actions.addToPlayList(item)),\n  isFromFavouritePlaylist: bool => dispatch(actions.isFromFavouritePlaylist(bool))\n});\n\nexport default connect(mapStateToprops, mapDispatchToprops)(ErrorHandler(ImamPage, axios));\n\nvar _c;\n\n$RefreshReg$(_c, \"ImamPage\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/HTML/quran_project_2/quran/src/components/imamPage/ImamPage.js"],"names":["React","useEffect","useReducer","useState","Form","SurahBox","axios","ErrorHandler","connect","actions","Loader","initialState","suraNumbers","suraNames","allSurasBoxs","myReducer","state","action","type","numbers","names","allSurasBoxes","ImamPage","props","dispatch","search","setSearch","filterSearch","setFilterSearch","Items","startRequest","get","then","res","console","log","data","en","suras","successRequest","arrayNames","map","num","push","allSuras","catch","error","failRequest","window","scrollTo","clickedHandler","index","suraName","fixNum","length","getSurah_Number_Name","suraLink","server","imamName","getData","name","playingFalse","showPlayer","isFromFavouritePlaylist","addFavFun","setData","number","collectData","allDataPlaylist","isFavorite","allData","Server","rewaya","addToPlaylist","arr","suraLoop","sing","playlist","i","myNumber","successFav","k","myNumbers","successFavs","array2","filter","sura","toLocaleLowerCase","includes","isFavor","copyText","loading","e","target","value","mapStateToprops","imamPage","suraNumber","mapDispatchToprops","link","allSurasNames","getImamNameBeforeUpdate","item","addToPlayList","bool"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer, useState} from 'react';\r\nimport './ImamPage.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport SurahBox from '../surahBox/surahBox';\r\nimport axios from '../../axiosBase/createAxios';\r\nimport ErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/action/getData';\r\nimport Loader from '../UI/Loader/loader';\r\n\r\nconst initialState = {\r\n    suraNumbers: [],\r\n    suraNames: [],\r\n    allSurasBoxs: []\r\n}\r\n\r\nconst myReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'surahNumbers':\r\n            return { ...state, suraNumbers: [...action.numbers] }\r\n        case 'surahNames':\r\n            return { ...state, suraNames: [...action.names] }\r\n        case 'allSurasBoxs':\r\n            return { ...state, allSurasBoxs: [...action.allSurasBoxes] }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst ImamPage = props => {\r\n    \r\n    const [state, dispatch] = useReducer(myReducer, initialState);\r\n    const [search, setSearch] = useState('');\r\n    const [filterSearch, setFilterSearch] = useState();\r\n\r\n    const Items = async () => {\r\n        props.startRequest();\r\n        await axios.get('/translations?languages=en')\r\n        .then(res => {\r\n            console.log(res.data.en);\r\n            dispatch({type: 'surahNumbers', numbers: props.suras});\r\n            props.successRequest();\r\n            let arrayNames = [];\r\n            if(props.suras) {\r\n                props.suras.map(num => arrayNames.push(res.data.en[`sura${num}`]));\r\n            }\r\n            dispatch({type: 'surahNames', names: arrayNames})\r\n            props.allSuras(arrayNames)\r\n            console.log('Response');\r\n        })\r\n        .catch(error => {\r\n            props.failRequest(error)\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        Items();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, []);\r\n\r\n    console.log('Immam Page ========>>>>>>');\r\n    // console.log(state.suraNames);\r\n\r\n    const clickedHandler = (index, suraName) => {\r\n        let fixNum = index.length === 1 ? `00${index}` : index.length === 2 ? `0${index}` : index;\r\n        props.getSurah_Number_Name(fixNum, suraName);\r\n        props.suraLink(`${props.server}/${fixNum}.mp3`);\r\n        props.imamName(props.getData.name);\r\n        props.playingFalse();\r\n        props.showPlayer();\r\n        props.isFromFavouritePlaylist(false);\r\n    }\r\n\r\n    const addFavFun = (data, num, suraName) => {\r\n        let setData = {...data, number: num};\r\n        const collectData = {allDataPlaylist: data, isFavorite: setData.isFavorite, server: `${setData.allData.Server}/${setData.number}.mp3`, number: setData.number, name: setData.allData.name, rewaya: setData.allData.rewaya, suraName: suraName};\r\n        props.addToPlaylist(collectData);\r\n    }\r\n\r\n    let data = <Loader />;\r\n\r\n    let arr = [];\r\n    const suraLoop = () => {\r\n        let sing= null;\r\n        if(props.server && state.suraNames && state.suraNumbers && state.suraNumbers.length > 0 && state.suraNumbers) {\r\n            console.log('XXX')\r\n            if(props.playlist && props.playlist.length > 0) {\r\n                for(let i=0; i < state.suraNumbers.length; i++) {\r\n                    let myNumber= null;\r\n                    let successFav = false;\r\n                    myNumber = state.suraNumbers[i].length === 1 ? `00${state.suraNumbers[i]}` : state.suraNumbers[i].length === 2 ? `0${state.suraNumbers[i]}` : state.suraNumbers[i];\r\n                    for (let k=0; k < props.playlist.length; k++) {\r\n                        sing= props.getData.name === props.playlist[k].name && myNumber === props.playlist[k].number && `${props.getData.Server}/${myNumber}.mp3` === props.playlist[k].server && state.suraNames[i] === props.playlist[k].suraName;\r\n                        if(sing){\r\n                            successFav = sing;\r\n                        }\r\n                    }\r\n                    console.log('Long');\r\n                    arr.push(\r\n                        <SurahBox\r\n                            key={`${props.server}/${state.suraNames[i]}/${myNumber}`}\r\n                            name={state.suraNames[i]}\r\n                            server={props.getData.Server}\r\n                            number={myNumber}\r\n                            clicked={() => clickedHandler(state.suraNumbers[i], state.suraNames[i])}\r\n                            addFav={(data) => addFavFun(data, myNumber, state.suraNames[i])}\r\n                            isFavor={successFav}\r\n                            allData={props.getData}\r\n                            copyText={`${props.server}/${myNumber}.mp3`}\r\n                        />\r\n                    )\r\n                }\r\n            } else {\r\n                console.log('YYY')\r\n                for(let i=0; i < state.suraNumbers.length; i++){\r\n                    let myNumbers= null;\r\n                    let successFavs = false;\r\n                    myNumbers = state.suraNumbers[i].length === 1 ? `00${state.suraNumbers[i]}` : state.suraNumbers[i].length === 2 ? `0${state.suraNumbers[i]}` : state.suraNumbers[i];\r\n                    console.log('Short')\r\n                    arr.push(\r\n                        <SurahBox\r\n                            key={`${props.server}/${state.suraNames[i]}/${myNumbers}`}\r\n                            name={state.suraNames[i]}\r\n                            server={props.getData.Server}\r\n                            number={myNumbers}\r\n                            clicked={() => clickedHandler(state.suraNumbers[i], state.suraNames[i])}\r\n                            addFav={(data) => addFavFun(data, myNumbers, state.suraNames[i])}\r\n                            isFavor={successFavs}\r\n                            allData={props.getData}\r\n                            copyText={`${props.server}/${myNumbers}.mp3`}\r\n                        />\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        setFilterSearch(arr);\r\n        dispatch({type: 'allSurasBoxs', allSurasBoxes: arr});\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.server && state.suraNames && state.suraNumbers && state.suraNumbers.length > 0 && state.suraNumbers && suraLoop();\r\n    }, [props.server, state.suraNames, state.suraNumbers, state.suraNumbers]);\r\n\r\n\r\n    useEffect(() => {\r\n        let array2 = [];\r\n        state.allSurasBoxs.filter(sura => {\r\n            if(search === '') {\r\n                // setAllboxes(filterSearch)\r\n                array2 = [state.allSurasBoxs];\r\n                setFilterSearch(array2);\r\n            } else if(sura.props.name.toLocaleLowerCase().includes(search.toLocaleLowerCase())) {\r\n                array2.push(\r\n                    <SurahBox\r\n                    key={`${props.server}/${sura.props.name}/${sura.props.number}/${sura.props.isFavor}`}\r\n                    name={sura.props.name}\r\n                    server={sura.props.server}\r\n                    number={sura.props.number}\r\n                    clicked={() => clickedHandler(sura.props.number, sura.props.name)}\r\n                    addFav={(data) => addFavFun(data, sura.props.number, sura.props.name)}\r\n                    isFavor={sura.props.isFavor}\r\n                    allData={sura.props.allData}\r\n                    copyText={sura.props.copyText}\r\n                />);\r\n            }\r\n        });\r\n        setFilterSearch(array2);\r\n    }, [search, props.getData]);\r\n\r\n    if(!props.loading) {\r\n        data = (\r\n            <div className='imam-page'>\r\n                <div className='top-search mb-4'>\r\n                    <Form>\r\n                        <Form.Control type='text' placeholder='Search by Sura Name...' className='rounded-pill search-filed' onChange={e => setSearch(e.target.value)} dir='auto' />\r\n                    </Form>\r\n                </div>\r\n                <ul className='all-surah-name'>\r\n                    {filterSearch}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return data;\r\n};\r\n\r\nconst mapStateToprops = state => ({\r\n    getData: state.getData,\r\n    suras: state.suras,\r\n    imamPage: state.imamPage,\r\n    loading: state.loading,\r\n    server: state.server,\r\n    playlist: state.playlist,\r\n    suraNumber: state.suraNumber,\r\n    server: state.server\r\n})\r\n\r\nconst mapDispatchToprops = dispatch => ({\r\n    showPlayer: () => dispatch(actions.showPlayer()),\r\n    getSurah_Number_Name: (number, suraName) => dispatch(actions.getSurah_Number_Name(number, suraName)),\r\n    suraLink: (link) => dispatch(actions.suraLink(link)),\r\n    playingFalse: () => dispatch(actions.playingFalse()),\r\n    allSuras: (names) => dispatch(actions.allSurasNames(names)),\r\n    startRequest: () => dispatch(actions.startRequest()),\r\n    successRequest: () => dispatch(actions.successRequest()),\r\n    failRequest: (error) => dispatch(actions.failRequest(error)),\r\n    imamName: (name) => dispatch(actions.getImamNameBeforeUpdate(name)),\r\n    addToPlaylist: (item) => dispatch(actions.addToPlayList(item)),\r\n    isFromFavouritePlaylist: (bool) => dispatch(actions.isFromFavouritePlaylist(bool))\r\n})\r\n\r\nexport default connect(mapStateToprops, mapDispatchToprops)(ErrorHandler(ImamPage, axios));"]},"metadata":{},"sourceType":"module"}