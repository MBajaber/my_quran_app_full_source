{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\HTML\\\\quran_project_2\\\\quran\\\\src\\\\components\\\\imamBoxs\\\\imamBoxs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport './imamBoxs.css';\nimport LetterSection from '../letters/letterSection';\nimport ShikhNames from '../shikhNames/shikhNames';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/action/getData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imamBoxs = /*#__PURE__*/React.memo(_s(props => {\n  _s();\n\n  const clicked = useCallback(link => {\n    props.getData && props.imamName(props.getData.name);\n    props.getDataFunc(link);\n    props.getServer(link.Server);\n    props.history.push('/imamPage');\n  }, []); // const allboxs = props.boxes.map(box => <ShikhNames \n  //     clicked={() => clicked(box)}\n  //     key={box.id}\n  //     link={box.Server}\n  //     text={box.name}\n  //     title={+box.count === 114 ? 'All Quran' : `${+box.count} Sura`}\n  //     count={+box.count}\n  //     suras={box.suras}\n  //     rewaya={box.rewaya}\n  // />)\n\n  let r = [];\n  const allboxs = props.boxes.map(box => {\n    console.log(box); //     if(props.search === '' || props.search === 'all') {\n    //         return (\n    //             <ShikhNames \n    //                 clicked={() => clicked(box)}\n    //                 key={box.id}\n    //                 link={box.Server}\n    //                 text={box.name}\n    //                 title={+box.count === 114 ? 'All Quran' : `${+box.count} Sura`}\n    //                 count={+box.count}\n    //                 suras={box.suras}\n    //                 rewaya={box.rewaya}\n    //             />\n    //         );    \n    //     } else {\n    //     }\n\n    return /*#__PURE__*/_jsxDEV(ShikhNames, {\n      clicked: () => clicked(box),\n      link: box.Server,\n      text: box.name,\n      title: +box.count === 114 ? 'All Quran' : `${+box.count} Sura`,\n      count: +box.count,\n      suras: box.suras,\n      rewaya: box.rewaya\n    }, box.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  });\n  console.log(props.search);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"emam-section\",\n    id: `letter_${props.letter}`,\n    children: [/*#__PURE__*/_jsxDEV(LetterSection, {\n      letter: props.letter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emams-boxes\",\n      children: allboxs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}, \"T+cdsskpQc74ZI5HU9rvFHw1GLY=\"));\n\nconst mapStateToprops = state => ({\n  getData: state.getData\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getDataFunc: data => dispatch(actions.getData(data)),\n    getServer: server => dispatch(actions.getServer(server)),\n    imamName: name => dispatch(actions.getImamNameBeforeUpdate(name))\n  };\n};\n\nexport default connect(mapStateToprops, mapDispatchToProps)(withRouter(imamBoxs));","map":{"version":3,"sources":["C:/Users/USER/Desktop/HTML/quran_project_2/quran/src/components/imamBoxs/imamBoxs.js"],"names":["React","useCallback","LetterSection","ShikhNames","withRouter","connect","actions","imamBoxs","memo","props","clicked","link","getData","imamName","name","getDataFunc","getServer","Server","history","push","r","allboxs","boxes","map","box","console","log","count","suras","rewaya","id","search","letter","mapStateToprops","state","mapDispatchToProps","dispatch","data","server","getImamNameBeforeUpdate"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAO,gBAAP;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,4BAAzB;;AAGA,MAAMC,QAAQ,gBAAGP,KAAK,CAACQ,IAAN,IAAWC,KAAK,IAAI;AAAA;;AACjC,QAAMC,OAAO,GAAGT,WAAW,CAACU,IAAI,IAAI;AAEhCF,IAAAA,KAAK,CAACG,OAAN,IAAiBH,KAAK,CAACI,QAAN,CAAeJ,KAAK,CAACG,OAAN,CAAcE,IAA7B,CAAjB;AACAL,IAAAA,KAAK,CAACM,WAAN,CAAkBJ,IAAlB;AACAF,IAAAA,KAAK,CAACO,SAAN,CAAgBL,IAAI,CAACM,MAArB;AACAR,IAAAA,KAAK,CAACS,OAAN,CAAcC,IAAd,CAAmB,WAAnB;AACH,GAN0B,EAMxB,EANwB,CAA3B,CADiC,CASjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAIC,CAAC,GAAG,EAAR;AACA,QAAMC,OAAO,GAAGZ,KAAK,CAACa,KAAN,CAAYC,GAAZ,CAAgBC,GAAG,IAAI;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EADmC,CAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACI,wBACI,QAAC,UAAD;AACI,MAAA,OAAO,EAAE,MAAMd,OAAO,CAACc,GAAD,CAD1B;AAGI,MAAA,IAAI,EAAEA,GAAG,CAACP,MAHd;AAII,MAAA,IAAI,EAAEO,GAAG,CAACV,IAJd;AAKI,MAAA,KAAK,EAAE,CAACU,GAAG,CAACG,KAAL,KAAe,GAAf,GAAqB,WAArB,GAAoC,GAAE,CAACH,GAAG,CAACG,KAAM,OAL5D;AAMI,MAAA,KAAK,EAAE,CAACH,GAAG,CAACG,KANhB;AAOI,MAAA,KAAK,EAAEH,GAAG,CAACI,KAPf;AAQI,MAAA,MAAM,EAAEJ,GAAG,CAACK;AARhB,OAESL,GAAG,CAACM,EAFb;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH,GA9Be,CAAhB;AAgCAL,EAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAK,CAACsB,MAAlB;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,EAAE,EAAG,UAAStB,KAAK,CAACuB,MAAO,EAAzD;AAAA,4BACI,QAAC,aAAD;AAAe,MAAA,MAAM,EAAEvB,KAAK,CAACuB;AAA7B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACKX;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA7DgB,kCAAjB;;AA+DA,MAAMY,eAAe,GAAGC,KAAK,KAAK;AAC9BtB,EAAAA,OAAO,EAAEsB,KAAK,CAACtB;AADe,CAAL,CAA7B;;AAIA,MAAMuB,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHrB,IAAAA,WAAW,EAAGsB,IAAD,IAAUD,QAAQ,CAAC9B,OAAO,CAACM,OAAR,CAAgByB,IAAhB,CAAD,CAD5B;AAEHrB,IAAAA,SAAS,EAAGsB,MAAD,IAAYF,QAAQ,CAAC9B,OAAO,CAACU,SAAR,CAAkBsB,MAAlB,CAAD,CAF5B;AAGHzB,IAAAA,QAAQ,EAAGC,IAAD,IAAUsB,QAAQ,CAAC9B,OAAO,CAACiC,uBAAR,CAAgCzB,IAAhC,CAAD;AAHzB,GAAP;AAKH,CAND;;AAQA,eAAeT,OAAO,CAAC4B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C/B,UAAU,CAACG,QAAD,CAAvD,CAAf","sourcesContent":["import React, { useCallback } from 'react';\r\nimport './imamBoxs.css';\r\nimport LetterSection from '../letters/letterSection';\r\nimport ShikhNames from '../shikhNames/shikhNames';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/action/getData';\r\n\r\n\r\nconst imamBoxs = React.memo(props => {\r\n    const clicked = useCallback(link => {\r\n\r\n        props.getData && props.imamName(props.getData.name);\r\n        props.getDataFunc(link);\r\n        props.getServer(link.Server);\r\n        props.history.push('/imamPage')\r\n    }, []);\r\n\r\n    // const allboxs = props.boxes.map(box => <ShikhNames \r\n    //     clicked={() => clicked(box)}\r\n    //     key={box.id}\r\n    //     link={box.Server}\r\n    //     text={box.name}\r\n    //     title={+box.count === 114 ? 'All Quran' : `${+box.count} Sura`}\r\n    //     count={+box.count}\r\n    //     suras={box.suras}\r\n    //     rewaya={box.rewaya}\r\n    // />)\r\n    let r = [];\r\n    const allboxs = props.boxes.map(box => {\r\n        console.log(box);\r\n    //     if(props.search === '' || props.search === 'all') {\r\n    //         return (\r\n    //             <ShikhNames \r\n    //                 clicked={() => clicked(box)}\r\n    //                 key={box.id}\r\n    //                 link={box.Server}\r\n    //                 text={box.name}\r\n    //                 title={+box.count === 114 ? 'All Quran' : `${+box.count} Sura`}\r\n    //                 count={+box.count}\r\n    //                 suras={box.suras}\r\n    //                 rewaya={box.rewaya}\r\n    //             />\r\n    //         );    \r\n    //     } else {\r\n\r\n    //     }\r\n        return (\r\n            <ShikhNames \r\n                clicked={() => clicked(box)}\r\n                key={box.id}\r\n                link={box.Server}\r\n                text={box.name}\r\n                title={+box.count === 114 ? 'All Quran' : `${+box.count} Sura`}\r\n                count={+box.count}\r\n                suras={box.suras}\r\n                rewaya={box.rewaya}\r\n            />\r\n        );\r\n    })\r\n\r\n    console.log(props.search);\r\n    return (\r\n        <div className='emam-section' id={`letter_${props.letter}`}>\r\n            <LetterSection letter={props.letter} />\r\n            <div className='emams-boxes'>\r\n                {allboxs}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst mapStateToprops = state => ({\r\n    getData: state.getData\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getDataFunc: (data) => dispatch(actions.getData(data)),\r\n        getServer: (server) => dispatch(actions.getServer(server)),\r\n        imamName: (name) => dispatch(actions.getImamNameBeforeUpdate(name))\r\n    }\r\n} \r\n\r\nexport default connect(mapStateToprops, mapDispatchToProps)(withRouter(imamBoxs));\r\n"]},"metadata":{},"sourceType":"module"}