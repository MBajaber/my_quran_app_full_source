{"ast":null,"code":"import * as actionType from './actionTypes'; // export const getData = (data) => {\n//     return dispatch => {\n//         dispatch({type: actionType.GET_IMAM_DATA, imamData: data, suras: data.suras.split(',')});\n//     }\n// }\n// export const getServer = (server) => {\n//     return dispatch => {\n//         dispatch({type: actionType.GET_SERVER, server: server});\n//     }\n// }\n// export const showPlayer = () => {\n//     return dispatch => {\n//         dispatch({type: actionType.SHOW_PLAYER})\n//     }\n// }\n// export const suraLink = (link) => {\n//     console.log(link)\n//     return dispatch => {\n//         dispatch({type: actionType.SURA_LINK, link: link})\n//     }\n// }\n// export const suraLink = (link) => {\n//     console.log(link)\n//     return dispatch => {\n//         dispatch({type: actionType.SURA_LINK, link: link});\n//     }\n// }\n// export const suraLinkRandom = (randomNumber) => {\n//     return dispatch => {\n//         dispatch({type: actionType.SURA_LINK_RANDOM, number: randomNumber})\n//     }\n// }\n// export const startRequest = () => {\n//     return dispatch => {\n//         dispatch({type: actionType.START_REQUEST});\n//     }\n// }\n// export const successRequest = () => {\n//     return dispatch => {\n//         dispatch({type: actionType.SUCCESS_REQUEST});\n//     }\n// }\n// export const failRequest = (error) => {\n//     return dispatch => {\n//         dispatch({type: actionType.FAIL_REQUEST, error: error})\n//     }\n// }\n// export const startMain = () => {\n//     return dispatch => {\n//         dispatch({type: actionType.START_MAIN});\n//     }\n// }\n// export const successMain = (letters, letterIndexs, allElements) => {\n//     return dispatch => {\n//         dispatch({type: actionType.SUCCESS_MAIN, letters: letters, letterIndexs: letterIndexs, allElements: allElements})\n//     }\n// }\n// export const closeAside = () => {\n//     return dispatch => {\n//         dispatch({type: actionType.CLOSE_ASIDE});\n//     }\n// }\n// export const openAside = () => {\n//     return {type: actionType.OPEN_ASIDE}\n// }\n\nexport const getData = data => ({\n  type: actionType.GET_IMAM_DATA,\n  imamData: data,\n  suras: data.suras.split(',')\n});\nexport const getServer = server => ({\n  type: actionType.GET_SERVER,\n  server: server\n});\nexport const showPlayer = () => ({\n  type: actionType.SHOW_PLAYER\n});\nexport const suraLink = link => ({\n  type: actionType.SURA_LINK,\n  link: link\n});\nexport const suraLinkRandom = randomNumber => ({\n  type: actionType.SURA_LINK_RANDOM,\n  number: randomNumber\n});\nexport const startRequest = () => ({\n  type: actionType.START_REQUEST\n});\nexport const successRequest = () => ({\n  type: actionType.SUCCESS_REQUEST\n});\nexport const failRequest = error => ({\n  type: actionType.FAIL_REQUEST,\n  error: error\n});\nexport const startMain = () => ({\n  type: actionType.START_MAIN\n});\nexport const successMain = (letters, letterIndexs, allElements) => ({\n  type: actionType.SUCCESS_MAIN,\n  letters: letters,\n  letterIndexs: letterIndexs,\n  allElements: allElements\n});\nexport const closeAside = () => ({\n  type: actionType.CLOSE_ASIDE\n});\nexport const openAside = () => ({\n  type: actionType.OPEN_ASIDE\n});\nexport const addToPlayList = item => {\n  return {\n    type: actionType.ADD_TO_PLAYLIST,\n    item: item\n  };\n};\nexport const playlistStorage = items => {\n  return {\n    type: actionType.PLAYLIST_STORAGE,\n    items: items\n  };\n};\nexport const removeItemFromPlayList = item => {\n  return {\n    type: actionType.REMOVE_ITEM_FROM_PLAYLIST,\n    item: item\n  };\n};\nexport const deleteFavFromSurabox = item => {\n  return {\n    type: actionType.DELETE_FAVOURITE_FROM_SURABOX,\n    item: item\n  };\n};\nexport const emptyFavFromSurabox = () => {\n  return {\n    type: actionType.EMPTY_FAVOURITE_FROM_SURABOX\n  };\n};\nexport const isFromFavouritePlaylist = bool => {\n  return {\n    type: actionType.IS_FROM_FAVOURITE_PLAYLIST,\n    booleanValue: bool\n  };\n};\nexport const getError = error => {\n  return {\n    type: actionType.GET_ERROR,\n    error: error\n  };\n};\nexport const changeTheme = () => {\n  return {\n    type: actionType.IS_THEME_IS_DARK\n  };\n};\nexport const toggleTheme = bool => {\n  return {\n    type: actionType.THEME_STORAGE,\n    value: bool\n  };\n};\nexport const changeLanguage = lang => {\n  let language = null;\n\n  if (lang === 'en') {\n    language = '_english.json';\n  } else if (lang === 'ar') {\n    language = '_arabic.json';\n  } else if (lang === 'fr') {\n    language = '_france.json';\n  } else if (lang === 'ru') {\n    language = '_russia.json';\n  } else if (lang === 'de') {\n    language = '_germany.json';\n  } else if (lang === 'es') {\n    language = '_spain.json';\n  } else if (lang === 'tr') {\n    language = '_turkey.json';\n  } else if (lang === 'cn') {\n    return {\n      type: actionType.CHOOSE_LANGUAGE,\n      selectLanguage: {\n        lang: 'en',\n        language: '_china.json'\n      }\n    };\n  } else if (lang === 'tl') {\n    return {\n      type: actionType.CHOOSE_LANGUAGE,\n      selectLanguage: {\n        lang: 'en',\n        language: '_tagalog.json'\n      }\n    };\n  } else if (lang === 'th') {\n    language = '_tahi.json';\n  } else if (lang === 'ur') {\n    language = '_urdu.json';\n  } else if (lang === 'bn') {\n    language = '_bengali.json';\n  } else if (lang === 'bs') {\n    language = '_bosnia.json';\n  } else if (lang === 'ug') {\n    language = '_uyghur.json';\n  } else if (lang === 'fa') {\n    language = '_farsi.json';\n  } else if (lang === 'tg') {\n    language = '_tagalog.json';\n  } else if (lang === 'ml') {\n    language = '_malbari.json';\n  } else if (lang === 'id') {\n    language = '_indonesia.json';\n  } else if (lang === 'pt') {\n    language = '_portuguese.json';\n  } else if (lang === 'ha') {\n    language = '_hausa.json';\n  } else if (lang === 'sw') {\n    language = '_swahili.json';\n  }\n\n  return {\n    type: actionType.CHOOSE_LANGUAGE,\n    selectLanguage: {\n      lang: lang,\n      language: language\n    }\n  };\n};\nexport const siteLanguage = lang => {\n  return {\n    type: actionType.SITE_LANGUAGE,\n    lang: lang\n  };\n};\nexport const isFavoritePage = value => {\n  return {\n    type: actionType.iS_FAVORITE_PAGE,\n    value: value\n  };\n};\nexport const isRadioPage = value => {\n  return {\n    type: actionType.iS_RADIO_PAGE,\n    value: value\n  };\n};","map":{"version":3,"sources":["C:/Users/USER/Desktop/HTML/quran_project_2/quran/src/store/action/getData.js"],"names":["actionType","getData","data","type","GET_IMAM_DATA","imamData","suras","split","getServer","server","GET_SERVER","showPlayer","SHOW_PLAYER","suraLink","link","SURA_LINK","suraLinkRandom","randomNumber","SURA_LINK_RANDOM","number","startRequest","START_REQUEST","successRequest","SUCCESS_REQUEST","failRequest","error","FAIL_REQUEST","startMain","START_MAIN","successMain","letters","letterIndexs","allElements","SUCCESS_MAIN","closeAside","CLOSE_ASIDE","openAside","OPEN_ASIDE","addToPlayList","item","ADD_TO_PLAYLIST","playlistStorage","items","PLAYLIST_STORAGE","removeItemFromPlayList","REMOVE_ITEM_FROM_PLAYLIST","deleteFavFromSurabox","DELETE_FAVOURITE_FROM_SURABOX","emptyFavFromSurabox","EMPTY_FAVOURITE_FROM_SURABOX","isFromFavouritePlaylist","bool","IS_FROM_FAVOURITE_PLAYLIST","booleanValue","getError","GET_ERROR","changeTheme","IS_THEME_IS_DARK","toggleTheme","THEME_STORAGE","value","changeLanguage","lang","language","CHOOSE_LANGUAGE","selectLanguage","siteLanguage","SITE_LANGUAGE","isFavoritePage","iS_FAVORITE_PAGE","isRadioPage","iS_RADIO_PAGE"],"mappings":"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","sourcesContent":["import * as actionType from './actionTypes';\r\n\r\n// export const getData = (data) => {\r\n//     return dispatch => {\r\n//         dispatch({type: actionType.GET_IMAM_DATA, imamData: data, suras: data.suras.split(',')});\r\n//     }\r\n// }\r\n\r\n// export const getServer = (server) => {\r\n//     return dispatch => {\r\n//         dispatch({type: actionType.GET_SERVER, server: server});\r\n//     }\r\n// }\r\n\r\n// export const showPlayer = () => {\r\n//     return dispatch => {\r\n//         dispatch({type: actionType.SHOW_PLAYER})\r\n//     }\r\n// }\r\n\r\n// export const suraLink = (link) => {\r\n//     console.log(link)\r\n//     return dispatch => {\r\n//         dispatch({type: actionType.SURA_LINK, link: link})\r\n//     }\r\n// }\r\n\r\n// export const suraLink = (link) => {\r\n//     console.log(link)\r\n//     return dispatch => {\r\n//         dispatch({type: actionType.SURA_LINK, link: link});\r\n//     }\r\n// }\r\n\r\n// export const suraLinkRandom = (randomNumber) => {\r\n//     return dispatch => {\r\n//         dispatch({type: actionType.SURA_LINK_RANDOM, number: randomNumber})\r\n//     }\r\n// }\r\n \r\n// export const startRequest = () => {\r\n//     return dispatch => {\r\n//         dispatch({type: actionType.START_REQUEST});\r\n//     }\r\n// }\r\n\r\n// export const successRequest = () => {\r\n//     return dispatch => {\r\n//         dispatch({type: actionType.SUCCESS_REQUEST});\r\n//     }\r\n// }\r\n\r\n// export const failRequest = (error) => {\r\n//     return dispatch => {\r\n//         dispatch({type: actionType.FAIL_REQUEST, error: error})\r\n//     }\r\n// }\r\n\r\n// export const startMain = () => {\r\n//     return dispatch => {\r\n//         dispatch({type: actionType.START_MAIN});\r\n//     }\r\n// }\r\n// export const successMain = (letters, letterIndexs, allElements) => {\r\n//     return dispatch => {\r\n//         dispatch({type: actionType.SUCCESS_MAIN, letters: letters, letterIndexs: letterIndexs, allElements: allElements})\r\n//     }\r\n// }\r\n\r\n// export const closeAside = () => {\r\n//     return dispatch => {\r\n//         dispatch({type: actionType.CLOSE_ASIDE});\r\n//     }\r\n// }\r\n\r\n// export const openAside = () => {\r\n//     return {type: actionType.OPEN_ASIDE}\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const getData = (data) => ({type: actionType.GET_IMAM_DATA, imamData: data, suras: data.suras.split(',')});\r\n\r\nexport const getServer = (server) => ({type: actionType.GET_SERVER, server: server});\r\n\r\nexport const showPlayer = () => ({type: actionType.SHOW_PLAYER});\r\n\r\nexport const suraLink = (link) => ({type: actionType.SURA_LINK, link: link});\r\n\r\nexport const suraLinkRandom = (randomNumber) => ({type: actionType.SURA_LINK_RANDOM, number: randomNumber});\r\n\r\nexport const startRequest = () => ({type: actionType.START_REQUEST});\r\n\r\nexport const successRequest = () => ({type: actionType.SUCCESS_REQUEST});\r\n\r\nexport const failRequest = (error) => ({type: actionType.FAIL_REQUEST, error: error});\r\n\r\nexport const startMain = () => ({type: actionType.START_MAIN});\r\n\r\nexport const successMain = (letters, letterIndexs, allElements) => ({type: actionType.SUCCESS_MAIN, letters: letters, letterIndexs: letterIndexs, allElements: allElements})\r\n\r\nexport const closeAside = () => ({type: actionType.CLOSE_ASIDE});\r\n\r\nexport const openAside = () => ({type: actionType.OPEN_ASIDE});\r\n\r\nexport const addToPlayList = (item) => {\r\n    return {type: actionType.ADD_TO_PLAYLIST, item: item}\r\n}\r\n\r\nexport const playlistStorage = (items) => {\r\n    return {type: actionType.PLAYLIST_STORAGE, items: items}\r\n}\r\n\r\nexport const removeItemFromPlayList = (item) => {\r\n    return {type: actionType.REMOVE_ITEM_FROM_PLAYLIST, item: item}\r\n}\r\n\r\nexport const deleteFavFromSurabox = (item) => {\r\n    return {type: actionType.DELETE_FAVOURITE_FROM_SURABOX, item: item}\r\n}\r\n\r\nexport const emptyFavFromSurabox = () => {\r\n    return {type: actionType.EMPTY_FAVOURITE_FROM_SURABOX}\r\n}\r\n\r\nexport const isFromFavouritePlaylist = (bool) => {\r\n    return {type: actionType.IS_FROM_FAVOURITE_PLAYLIST, booleanValue: bool }\r\n}\r\n\r\nexport const getError = (error) => {\r\n    return {type: actionType.GET_ERROR, error: error}\r\n}\r\n\r\nexport const changeTheme = () => {\r\n    return {type: actionType.IS_THEME_IS_DARK}\r\n}\r\n\r\nexport const toggleTheme = (bool) => {\r\n    return {type: actionType.THEME_STORAGE, value: bool}\r\n}\r\n\r\nexport const changeLanguage = (lang) => {\r\n    let language = null;\r\n    if (lang === 'en') {\r\n        language = '_english.json';\r\n    } else if(lang === 'ar') {\r\n        language = '_arabic.json';\r\n    } else if(lang === 'fr') {\r\n        language = '_france.json';\r\n    } else if(lang === 'ru') {\r\n        language = '_russia.json';\r\n    } else if(lang === 'de') {\r\n        language = '_germany.json';\r\n    } else if(lang === 'es') {\r\n        language = '_spain.json';\r\n    } else if(lang === 'tr') {\r\n        language = '_turkey.json';\r\n    } else if(lang === 'cn') {\r\n        return {type: actionType.CHOOSE_LANGUAGE, selectLanguage: {lang: 'en', language: '_china.json'}}\r\n    } else if(lang === 'tl') {\r\n        return {type: actionType.CHOOSE_LANGUAGE, selectLanguage: {lang: 'en', language: '_tagalog.json'}}\r\n    } else if(lang === 'th') {\r\n        language = '_tahi.json';\r\n    } else if(lang === 'ur') {\r\n        language = '_urdu.json';\r\n    } else if(lang === 'bn') {\r\n        language = '_bengali.json';\r\n    } else if(lang === 'bs') {\r\n        language = '_bosnia.json';\r\n    } else if(lang === 'ug') {\r\n        language = '_uyghur.json';\r\n    } else if(lang === 'fa') {\r\n        language = '_farsi.json';\r\n    } else if(lang === 'tg') {\r\n        language = '_tagalog.json';\r\n    } else if(lang === 'ml') {\r\n        language = '_malbari.json';\r\n    } else if(lang === 'id') {\r\n        language = '_indonesia.json';\r\n    } else if(lang === 'pt') {\r\n        language = '_portuguese.json';\r\n    } else if(lang === 'ha') {\r\n        language = '_hausa.json';\r\n    } else if(lang === 'sw') {\r\n        language = '_swahili.json';\r\n    }\r\n    return {type: actionType.CHOOSE_LANGUAGE, selectLanguage: {lang: lang, language: language}}\r\n}\r\n\r\nexport const siteLanguage = (lang) => {\r\n    return {type: actionType.SITE_LANGUAGE, lang: lang}\r\n}\r\n\r\nexport const isFavoritePage = (value) => {\r\n    return {type: actionType.iS_FAVORITE_PAGE, value: value}\r\n}\r\n\r\nexport const isRadioPage = (value) => {\r\n    return {type: actionType.iS_RADIO_PAGE, value: value}\r\n}"]},"metadata":{},"sourceType":"module"}