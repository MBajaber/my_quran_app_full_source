{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\HTML\\\\quran_project_2\\\\quran\\\\src\\\\App\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { lazy, Suspense, useEffect, useState } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Route, Switch } from 'react-router-dom';\nimport Layout from '../components/layout/layout';\nimport Loading from '../components/UI/Loader/loader';\nimport { connect } from 'react-redux';\nimport * as actions from '../store/action/getData';\nimport axios from '../axiosBase/createAxios';\nimport withErrorHandler from '../hoc/withErrorHandler/withErrorHandler';\nimport RedirectMain from '../redirectMain/redirectMain';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AsyncMain = /*#__PURE__*/lazy(_c = () => import('../containers/Home'));\n_c2 = AsyncMain;\nconst AsyncImamPage = /*#__PURE__*/lazy(_c3 = () => import('../components/imamPage/ImamPage'));\n_c4 = AsyncImamPage;\nconst AsyncFavorite = /*#__PURE__*/lazy(_c5 = () => import('../containers/Favorite/index'));\n_c6 = AsyncFavorite;\n\nconst App = props => {\n  _s();\n\n  const [playlistStorage, setPlaylistStorage] = useState(JSON.parse(localStorage.getItem('playlist')) || []);\n  const [themeStorageValue, setThemeStorageValue] = useState(JSON.parse(localStorage.getItem('isThemeIsDark')) || false);\n  const [storageLangauage, setStorageLangauage] = useState(JSON.parse(localStorage.getItem('language')) || 'en');\n  useEffect(() => {\n    axios.get(`translations?languages=${props.language.lang}`).then(res => {\n      props.siteLanguage(res.data[props.language.lang]);\n    }).catch(error => error);\n  }, [props.language.lang]);\n  useEffect(() => {\n    if (playlistStorage) {\n      props.playlistStorage(playlistStorage);\n    }\n\n    if (themeStorageValue) {\n      props.toggleTheme(themeStorageValue);\n    }\n\n    props.changeLanguage(storageLangauage);\n    document.getElementsByTagName('html')[0].setAttribute('lang', storageLangauage);\n\n    if (['ar', 'ur', 'ug', 'fa'].includes(storageLangauage)) {\n      document.getElementsByTagName('html')[0].setAttribute('dir', 'rtl'); // document.getElementsByTagName('body')[0].setAttribute('dir', 'rtl');\n    } else {\n      document.getElementsByTagName('html')[0].setAttribute('dir', 'ltr');\n    }\n  }, []);\n  useEffect(() => {\n    console.log(playlistStorage);\n    localStorage.setItem('playlist', JSON.stringify(props.playlist));\n  }, [props.playlist]); // let routes = (\n  //   <Switch>\n  //     <Route path='/'   render={props => <AsyncMain {...props} />} exact />\n  //     <Route path='/im' render={props => <AsyncImamPage {...props} />} />\n  //   </Switch>\n  // );\n  // let routes = (\n  //   <Switch>\n  // {/* <Route path='/' render={props => <RedirectMain {...props} />} exact /> */}\n  //     <Route path='/' render={props => <AsyncMain {...props} exact />} />\n  //     {/* <Route path='/:xx' render={props => <AsyncMain {...props} />} /> */}\n  //     {/* <Route path='/:xx/:immamPage' render={props => <AsyncImamPage {...props} />} /> */}\n  //     <Route path='/immamPage' render={props => <AsyncImamPage {...props} />} />\n  //     {/* <Route path='/:lang/:immamPage' render={props => <AsyncImamPage {...props} />} /> */}\n  //     {/* <Route path='/my_quran/favorite'  render={props => <AsyncFavorite {...props} />} /> */}\n  // {/* <Route path='/favorite'  render={props => <AsyncFavorite {...props} />} /> */}\n  //   </Switch>\n  // );\n\n  let routes = /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/xx\",\n      render: props => /*#__PURE__*/_jsxDEV(AsyncMain, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 42\n      }, this),\n      exact: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/xx/:immam_Name\",\n      render: props => /*#__PURE__*/_jsxDEV(AsyncImamPage, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 54\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/xx/:immam_Name/:favorite\",\n      render: props => /*#__PURE__*/_jsxDEV(AsyncFavorite, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 65\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n\n  return props.siteLanguage ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }, this),\n        children: routes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this) : null;\n};\n\n_s(App, \"3j/b2VDgShYnlhTZ4NxLoPTT3s8=\");\n\n_c7 = App;\n\nconst mapStateToProps = state => ({\n  playlist: state.playlist,\n  isThemeDark: state.isThemeDark,\n  language: state.language,\n  siteLanguage: state.siteLanguage\n});\n\nconst mapDispatchToProps = dispatch => ({\n  playlistStorage: items => dispatch(actions.playlistStorage(items)),\n  toggleTheme: items => dispatch(actions.toggleTheme(items)),\n  siteLanguage: lang => dispatch(actions.siteLanguage(lang)),\n  changeLanguage: lang => dispatch(actions.changeLanguage(lang))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(App, axios));\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"AsyncMain$lazy\");\n$RefreshReg$(_c2, \"AsyncMain\");\n$RefreshReg$(_c3, \"AsyncImamPage$lazy\");\n$RefreshReg$(_c4, \"AsyncImamPage\");\n$RefreshReg$(_c5, \"AsyncFavorite$lazy\");\n$RefreshReg$(_c6, \"AsyncFavorite\");\n$RefreshReg$(_c7, \"App\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/HTML/quran_project_2/quran/src/App/App.js"],"names":["React","lazy","Suspense","useEffect","useState","Route","Switch","Layout","Loading","connect","actions","axios","withErrorHandler","RedirectMain","AsyncMain","AsyncImamPage","AsyncFavorite","App","props","playlistStorage","setPlaylistStorage","JSON","parse","localStorage","getItem","themeStorageValue","setThemeStorageValue","storageLangauage","setStorageLangauage","get","language","lang","then","res","siteLanguage","data","catch","error","toggleTheme","changeLanguage","document","getElementsByTagName","setAttribute","includes","console","log","setItem","stringify","playlist","routes","mapStateToProps","state","isThemeDark","mapDispatchToProps","dispatch","items"],"mappings":"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","sourcesContent":["import React, { lazy, Suspense, useEffect, useState } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Route, Switch } from 'react-router-dom';\nimport Layout from '../components/layout/layout';\nimport Loading from '../components/UI/Loader/loader';\nimport {connect} from 'react-redux';\nimport * as actions from '../store/action/getData';\nimport axios from '../axiosBase/createAxios';\nimport withErrorHandler from '../hoc/withErrorHandler/withErrorHandler';\nimport RedirectMain from '../redirectMain/redirectMain';\n\nconst AsyncMain = lazy(() => import('../containers/Home'));\nconst AsyncImamPage = lazy(() => import('../components/imamPage/ImamPage'));\nconst AsyncFavorite = lazy(() => import('../containers/Favorite/index'));\n\nconst App = props => {\n\n  const [playlistStorage, setPlaylistStorage] = useState(JSON.parse(localStorage.getItem('playlist')) || []);\n  const [themeStorageValue, setThemeStorageValue] = useState(JSON.parse(localStorage.getItem('isThemeIsDark')) || false);\n  const [storageLangauage, setStorageLangauage] = useState(JSON.parse(localStorage.getItem('language')) || 'en');\n\n  useEffect(() => {\n    axios.get(`translations?languages=${props.language.lang}`)\n    .then(res => {\n      props.siteLanguage(res.data[props.language.lang]);\n    })\n    .catch(error => error);\n  }, [props.language.lang]);\n  \n  useEffect(() => {\n    if(playlistStorage) {\n      props.playlistStorage(playlistStorage);\n    }\n    if(themeStorageValue) {\n      props.toggleTheme(themeStorageValue);\n    }\n    props.changeLanguage(storageLangauage);\n    document.getElementsByTagName('html')[0].setAttribute('lang', storageLangauage);\n    if(['ar', 'ur', 'ug', 'fa'].includes(storageLangauage)) {\n      document.getElementsByTagName('html')[0].setAttribute('dir', 'rtl');\n      // document.getElementsByTagName('body')[0].setAttribute('dir', 'rtl');\n    } else {\n      document.getElementsByTagName('html')[0].setAttribute('dir', 'ltr');\n    }\n  }, []);\n\n  useEffect(() => {\n    console.log(playlistStorage)\n    localStorage.setItem('playlist', JSON.stringify(props.playlist));\n  }, [props.playlist]);\n\n  // let routes = (\n  //   <Switch>\n  //     <Route path='/'   render={props => <AsyncMain {...props} />} exact />\n  //     <Route path='/im' render={props => <AsyncImamPage {...props} />} />\n  //   </Switch>\n  // );\n\n  // let routes = (\n  //   <Switch>\n      // {/* <Route path='/' render={props => <RedirectMain {...props} />} exact /> */}\n  //     <Route path='/' render={props => <AsyncMain {...props} exact />} />\n  //     {/* <Route path='/:xx' render={props => <AsyncMain {...props} />} /> */}\n  //     {/* <Route path='/:xx/:immamPage' render={props => <AsyncImamPage {...props} />} /> */}\n  //     <Route path='/immamPage' render={props => <AsyncImamPage {...props} />} />\n  //     {/* <Route path='/:lang/:immamPage' render={props => <AsyncImamPage {...props} />} /> */}\n  //     {/* <Route path='/my_quran/favorite'  render={props => <AsyncFavorite {...props} />} /> */}\n      // {/* <Route path='/favorite'  render={props => <AsyncFavorite {...props} />} /> */}\n  //   </Switch>\n  // );\n\n\n  let routes = (\n    <Switch>\n      {/* <Route path='/' render={props => <RedirectMain {...props} />} exact /> */}\n      <Route path='/xx' render={props => <AsyncMain {...props} />} exact />\n      <Route path='/xx/:immam_Name' render={props => <AsyncImamPage {...props} />} />\n      <Route path='/xx/:immam_Name/:favorite'  render={props => <AsyncFavorite {...props} />} />\n    </Switch>\n  );\n\n  return props.siteLanguage ? (\n    <div className=\"App\">\n      <Layout>\n        <Suspense fallback={<Loading />}>{routes}</Suspense>\n      </Layout>\n    </div>\n  ) : null;\n};\n\nconst mapStateToProps = state => ({\n  playlist: state.playlist,\n  isThemeDark: state.isThemeDark,\n  language: state.language,\n  siteLanguage: state.siteLanguage\n});\n\nconst mapDispatchToProps = dispatch => ({\n  playlistStorage: (items) => dispatch(actions.playlistStorage(items)),\n  toggleTheme: (items) => dispatch(actions.toggleTheme(items)),\n  siteLanguage: (lang) => dispatch(actions.siteLanguage(lang)),\n  changeLanguage: (lang) => dispatch(actions.changeLanguage(lang))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(App, axios));\n"]},"metadata":{},"sourceType":"module"}