{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\HTML\\\\quran_project_2\\\\quran\\\\src\\\\components\\\\audioPlayer\\\\audioPlayer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { PlayerContent } from './audioPlayerStyled';\nimport { AiOutlinePlus, AiOutlineMinus, AiOutlineClose } from 'react-icons/ai';\nimport { FaRandom } from 'react-icons/fa';\nimport { BiPlay, BiPause } from 'react-icons/bi';\nimport { BsVolumeDown, BsVolumeMute, BsVolumeUp } from 'react-icons/bs';\nimport { CgTrashEmpty } from 'react-icons/cg';\nimport Container from 'react-bootstrap/Container';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/action/getData';\nimport Playlist from '../playlist/playlist';\nimport { AiFillHeart } from 'react-icons/ai';\nimport AudioPlayer from 'react-h5-audio-player';\nimport 'react-h5-audio-player/lib/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SongPlayer = props => {\n  _s();\n\n  const [value, setValue] = useState(1);\n  const [getDuration, setGetDuration] = useState('00');\n  const [getCurrentTime, setGetCurrentTime] = useState('00');\n  const myAudioRef = useRef();\n  const [showfavPlaylist, setShowfavPlaylist] = useState(false);\n  const favPlaylistclasses = showfavPlaylist ? ['playlist_list', 'show'] : ['playlist_list'];\n  const playFun = useCallback(() => {\n    if (myAudioRef.current.paused) {\n      myAudioRef.current.play().catch(error => console.log('myError'));\n      props.playingTrue();\n    }\n\n    console.log('PLay');\n  }, []);\n  const pauseFun = useCallback(() => {\n    if (!myAudioRef.current.paused) {\n      myAudioRef.current.pause();\n      props.playingFalse();\n    }\n\n    console.log('Pause');\n  }, []);\n  const toggleAudio = useCallback(() => {\n    console.log('*************************************************************************');\n    props.togglePlay();\n    myAudioRef.current.paused ? playFun() : pauseFun();\n  }, []);\n  const valueHanler = useCallback(event => {\n    setValue(+event.target.value);\n    myAudioRef.current.volume = event.target.value;\n  }, []); // useEffect(() => {\n  //     let isMount = false;\n  //     if(!isMount) {\n  //         var au = document.getElementById(\"my-audio\");\n  //         console.log('MNMNMN');\n  //         au.onloadedmetadata = function () {\n  //             let calcDuration = Math.floor(au.duration / 60) + ':' + ('0' + Math.floor(au.duration % 60)).slice(-2)\n  //             setGetDuration(calcDuration);\n  //             let calcCurreentTime = Math.floor(au.currentTime / 60) + ':' + ('0' + Math.floor(au.currentTime % 60)).slice(-2)\n  //             setGetCurrentTime(calcCurreentTime);\n  //         };\n  //         myAudioRef.current.addEventListener('timeupdate', () => {\n  //             let curTime = myAudioRef.current.currentTime;\n  //             let calCurTime = Math.floor(curTime / 60) + ':' + ('0' + Math.floor(curTime % 60)).slice(-2)\n  //             setGetCurrentTime(calCurTime);\n  //             let progress = document.getElementById('short-progress');\n  //             let percent = (curTime / myAudioRef.current.duration) * 100;\n  //             progress.style.flexBasis = `${percent}%`;\n  //             if(myAudioRef.current.currentTime === myAudioRef.current.duration) {\n  //                 console.log('Is Completed')\n  //                 props.playingTrue();\n  //             }\n  //         });\n  //         playFun();\n  //     }\n  //     return () => {\n  //         isMount = true;\n  //         myAudioRef.current.removeEventListener('ended', () => props.playingFalse());\n  //     };\n  // }, [setGetCurrentTime, props.suraLink]);\n\n  const skippedTime = useCallback(e => {\n    myAudioRef.current.currentTime += +e;\n  }, []);\n  const scrub = useCallback(e => {\n    let fullProgress = document.getElementById('full-progress');\n    const scrubTime = e.nativeEvent.offsetX / fullProgress.offsetWidth * myAudioRef.current.duration;\n\n    if (e.target.className !== 'short-progress-end') {\n      myAudioRef.current.currentTime = scrubTime;\n      console.log(e.nativeEvent.offsetX);\n    }\n  }, []);\n\n  const randomChoice = () => {\n    console.log('Random');\n\n    if (props.isRandom) {\n      const getRandom = Math.floor(Math.random() * props.suras.length).toString();\n      const num = props.suras[getRandom].length === 1 ? `00${props.suras[getRandom]}` : props.suras[getRandom].length === 2 ? `0${props.suras[getRandom]}` : props.suras[getRandom];\n      props.suraLinkRandom(num);\n      let getName = props.allSurasNames[getRandom];\n      props.changeName(getName);\n      props.isFromFavouritePlaylist(false);\n      props.imamNameFunc(props.imamName);\n      console.log('{{{{{{{{{{{{{{{{{{{{{{{}}}}}}}}}}}}}}}}}}}}}}}}}}}');\n    }\n  };\n\n  const calcTimes = useCallback(time => {\n    const timeInArr = time.split(':');\n    const firstElement = +timeInArr[0];\n    let myTime = '';\n\n    if (firstElement > 59) {\n      let hour = firstElement / 60;\n      let diviedMin = hour.toString().split('.');\n      let getMun = '0.' + diviedMin[1];\n      let calcMin = Math.round(getMun * 60);\n      myTime = `${diviedMin[0]}:${calcMin < 9 ? `0${calcMin}` : calcMin}:${timeInArr[1]}`;\n    } else {\n      let minutesInArr = time.split(':');\n      let firstElementInMin = +minutesInArr[0];\n      let caclfirstElementInMin = firstElementInMin < 9 ? `0${firstElementInMin}` : firstElementInMin;\n      let countFinal = getCurrentTime.split(':');\n      myTime = countFinal === 3 ? `00:${caclfirstElementInMin}:${minutesInArr[1]}` : `${caclfirstElementInMin}:${minutesInArr[1]}`;\n    }\n\n    return myTime;\n  }, []);\n  const fullTime = calcTimes(getDuration);\n  const currentTimeAudio = calcTimes(getCurrentTime);\n\n  const deleteItems = item => {\n    console.log(item.server);\n    props.deleteFavFromSurabox(item.server);\n    props.deleteItemFromPlaylist(item);\n  };\n\n  const cutSentance = immamName => immamName && immamName.length > 21 ? `${immamName.slice(0, 21)}...` : immamName;\n\n  const toggleValue = () => {\n    if (value > 0.5) {\n      setValue(0);\n      myAudioRef.current.volume = 0;\n    } else {\n      setValue(1);\n      myAudioRef.current.volume = 1;\n    }\n  };\n\n  const clickedPlaylist = (link, number, suraName, imamName) => {\n    props.playingFalse();\n    props.suraLinkFunc(link);\n    props.getSurah_Number_Name(number, suraName);\n    props.showPlayer();\n    props.imamNameFunc(imamName);\n    props.isFromFavouritePlaylist(true);\n    props.favouritePlaylistImmamName(imamName);\n    props.emptySuras();\n  };\n\n  console.log('SONG Player');\n\n  const zzz = () => {\n    console.log('zzz');\n  };\n\n  return /*#__PURE__*/_jsxDEV(PlayerContent, {\n    suras: props.suras,\n    theme: props.theme,\n    themeStyle: props.themeStyle,\n    isFavPlaylist: props.isFavPlaylist,\n    showfavPlaylist: showfavPlaylist,\n    children: [!props.isFavPlaylist && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"random d-none d-sm-block\",\n      onClick: randomChoice,\n      children: /*#__PURE__*/_jsxDEV(FaRandom, {\n        size: 22\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"favorite_box d-none d-sm-block\",\n      children: /*#__PURE__*/_jsxDEV(AiFillHeart, {\n        size: 24,\n        onClick: () => setShowfavPlaylist(!showfavPlaylist)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AudioPlayer, {\n      autoPlay: true,\n      src: props.suraLink\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlist_items d-none d-sm-block\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: favPlaylistclasses.join(' '),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header d-flex align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(AiOutlineClose, {\n              size: 20,\n              onClick: () => setShowfavPlaylist(!showfavPlaylist)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: props.site_language.favorite\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-unstyled sura_list\",\n            children: props.playlist && props.playlist.length > 0 ? props.playlist.map((e, i) => /*#__PURE__*/_jsxDEV(Playlist, {\n              server: e.server,\n              number: e.number,\n              name: e.name,\n              rewaya: e.rewaya,\n              index: i,\n              suraName: e.suraName,\n              deleteItem: item => deleteItems(item),\n              clicked: (link, number, suraName, name) => clickedPlaylist(link, number, suraName, name)\n            }, e.server, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 37\n            }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no_list text-center text-capitalize\",\n              children: [props.site_language.no_playlist_added, \" \", /*#__PURE__*/_jsxDEV(CgTrashEmpty, {\n                size: 26\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 128\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 9\n  }, this); // =============================================================================\n  // return (\n  //     <PlayerContent suras={props.suras} theme={props.theme} themeStyle={props.themeStyle}>\n  //         <Container>\n  //             <div className='player_content'>\n  //                 <div className='icons_controls_audio'>\n  //                     <ul className='mb-0 justify-content-center'>\n  //                         <li onClick={randomChoice} className='mr-2 ml-3 mr-sm-2 ml-sm-2'>\n  //                             <button className={props.suras.length === 0 ? 'disabled' : null} disabled={props.suras.length === 0 ? true : false}>\n  //                                 {<FaRandom size={14} />}\n  //                             </button>\n  //                         </li>\n  //                         <li onClick={(e) => skippedTime('-10')} className='mr-2 ml-3 mr-sm-2 ml-sm-2'>\n  //                             <button>\n  //                                 {<AiOutlineMinus size={20} />}\n  //                             </button>\n  //                         </li>\n  //                         <li onClick={toggleAudio} className='main-btn mr-2 ml-3 mr-sm-2 ml-sm-2'>\n  //                             <button>\n  //                                 {props.isPlaying ? <BiPause size={30} /> : <BiPlay size={30} style={{ paddingLeft: '3px' }} />}\n  //                             </button>\n  //                             </li>\n  //                         <li onClick={(e) => skippedTime('+10')} className='mr-2 ml-3 mr-sm-2 ml-sm-2'>\n  //                             <button>\n  //                                 {<AiOutlinePlus size={20} />}\n  //                             </button>\n  //                         </li>\n  //                     </ul>\n  //                 </div>\n  //                 <div className='progress_valume pl-2 pr-0 pr-md-2'>\n  //                     <div className='progress_bar_controls'>\n  //                         <span className='current-time'>{currentTimeAudio}</span>\n  //                         <div className='full-progress' id='full-progress' onClick={(e) => scrub(e)}>\n  //                             <audio id='my-audio' ref={myAudioRef} src={props.suraLink} preload=\"metadata\" />\n  //                             <div className='short-progress' id='short-progress'>\n  //                                 <span className='short-progress-end' onClick={(e) => scrub(e)}></span>\n  //                             </div>\n  //                         </div>\n  //                         <span className='full-time'>{fullTime}</span>\n  //                     </div>\n  //                     <div className='playlist_items d-none d-md-block'>\n  //                         <AiFillHeart size={25} onClick={() => setShowfavPlaylist(!showfavPlaylist)} />\n  //                         <div className={favPlaylistclasses.join(' ')}>\n  //                             <div className='header d-flex-align-items-center'>\n  //                                 <AiOutlineClose size={20} onClick={() => setShowfavPlaylist(!showfavPlaylist)} />\n  //                             </div>\n  //                             <ul className='list-unstyled sura_list'>\n  //                                 {\n  //                                 props.playlist && props.playlist.length > 0 \n  //                                 ?  props.playlist.map((e, i) => (\n  //                                     <Playlist\n  //                                         key={e.server}\n  //                                         server={e.server}\n  //                                         number={e.number}\n  //                                         name={e.name}\n  //                                         rewaya={e.rewaya}\n  //                                         index={i}\n  //                                         suraName={e.suraName}\n  //                                         deleteItem={(item) => deleteItems(item)}\n  //                                         clicked={(link, number, suraName, name) => clickedPlaylist(link, number, suraName, name)}\n  //                                     />\n  //                                 ))\n  //                                 : <div className='no_list text-center text-capitalize'>{props.site_language.no_playlist_added} <CgTrashEmpty size={26} /></div>\n  //                                 }\n  //                             </ul>\n  //                         </div>\n  //                     </div>\n  //                     <div className='volume-controll ml-1'>\n  //                         <span className='volume-icon' title={`${value * 100}%`} onClick={toggleValue}>\n  //                             {value > 0.70 && (<>\n  //                                 <BsVolumeUp size={27} />\n  //                             </>)}\n  //                             {value <= 0.70 && value > 0.01 && (<>\n  //                                 <BsVolumeDown size={27} />\n  //                             </>)}\n  //                             {value == 0.00 && (<>\n  //                                 <BsVolumeMute size={27} />\n  //                             </>)}\n  //                         </span>\n  //                         <div className='player-slider-parent'>\n  //                             <input type='range' name='value' min='0' max='1' value={value} onChange={(e) => valueHanler(e)} step='.05' title={`${value * 100}%`} className='player-slider' />\n  //                         </div>\n  //                     </div>\n  //                 </div>\n  //                 <div className='sura_description text-center d-none d-md-block' title={props.isFavPlaylist ? props.playlistImamName : props.imamNameBeforeUpdate}>\n  //                     <h6 className='text-capitalize mb-0 play_item_name'>{props.isFavPlaylist ? cutSentance(props.playlistImamName) : cutSentance(props.imamNameBeforeUpdate)}</h6>\n  //                     <span className='text-capitalize play_item_sura'>{props.suraName}</span>\n  //                 </div>\n  //             </div>\n  //         </Container>\n  //     </PlayerContent>\n  // )\n};\n\n_s(SongPlayer, \"y+REq6ITzuIsEopEWx9tPaP0bXI=\");\n\n_c = SongPlayer;\n\nconst mapStateToProps = state => {\n  return {\n    imamName: state.getData === null ? '' : state.getData.name,\n    suraName: state.suraName,\n    suraLink: state.suraLink,\n    isPlaying: state.isPlaying,\n    suras: state.suras,\n    allSurasNames: state.allSurasNames,\n    isImamPage: state.isImamPage,\n    imamNameBeforeUpdate: state.imamNameBeforeUpdate,\n    isRandom: state.isRandom,\n    playlist: state.playlist,\n    isFavPlaylist: state.isFavPlaylist,\n    playlistImamName: state.playlistImamName,\n    theme: state.theme,\n    themeStyle: state.themeStyle,\n    site_language: state.site_language\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  togglePlay: () => dispatch(actions.playingToggle()),\n  playingFalse: () => dispatch(actions.playingFalse()),\n  playingTrue: () => dispatch(actions.playingTrue()),\n  suraLinkRandom: data => dispatch(actions.suraLinkRandom(data)),\n  changeName: name => dispatch(actions.changeName(name)),\n  imamNameFunc: name => dispatch(actions.getImamNameBeforeUpdate(name)),\n  deleteItemFromPlaylist: item => dispatch(actions.removeItemFromPlayList(item)),\n  deleteFavFromSurabox: item => dispatch(actions.deleteFavFromSurabox(item)),\n  showPlayer: () => dispatch(actions.showPlayer()),\n  suraLinkFunc: link => dispatch(actions.suraLink(link)),\n  getSurah_Number_Name: (number, suraName) => dispatch(actions.getSurah_Number_Name(number, suraName)),\n  isFromFavouritePlaylist: bool => dispatch(actions.isFromFavouritePlaylist(bool)),\n  favouritePlaylistImmamName: name => dispatch(actions.favouritePlaylistImmamName(name)),\n  emptySuras: () => dispatch(actions.emptySuras())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SongPlayer);\n\nvar _c;\n\n$RefreshReg$(_c, \"SongPlayer\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/HTML/quran_project_2/quran/src/components/audioPlayer/audioPlayer.js"],"names":["React","useState","useRef","useEffect","useCallback","PlayerContent","AiOutlinePlus","AiOutlineMinus","AiOutlineClose","FaRandom","BiPlay","BiPause","BsVolumeDown","BsVolumeMute","BsVolumeUp","CgTrashEmpty","Container","connect","actions","Playlist","AiFillHeart","AudioPlayer","SongPlayer","props","value","setValue","getDuration","setGetDuration","getCurrentTime","setGetCurrentTime","myAudioRef","showfavPlaylist","setShowfavPlaylist","favPlaylistclasses","playFun","current","paused","play","catch","error","console","log","playingTrue","pauseFun","pause","playingFalse","toggleAudio","togglePlay","valueHanler","event","target","volume","skippedTime","e","currentTime","scrub","fullProgress","document","getElementById","scrubTime","nativeEvent","offsetX","offsetWidth","duration","className","randomChoice","isRandom","getRandom","Math","floor","random","suras","length","toString","num","suraLinkRandom","getName","allSurasNames","changeName","isFromFavouritePlaylist","imamNameFunc","imamName","calcTimes","time","timeInArr","split","firstElement","myTime","hour","diviedMin","getMun","calcMin","round","minutesInArr","firstElementInMin","caclfirstElementInMin","countFinal","fullTime","currentTimeAudio","deleteItems","item","server","deleteFavFromSurabox","deleteItemFromPlaylist","cutSentance","immamName","slice","toggleValue","clickedPlaylist","link","number","suraName","suraLinkFunc","getSurah_Number_Name","showPlayer","favouritePlaylistImmamName","emptySuras","zzz","theme","themeStyle","isFavPlaylist","suraLink","join","site_language","favorite","playlist","map","i","name","rewaya","no_playlist_added","mapStateToProps","state","getData","isPlaying","isImamPage","imamNameBeforeUpdate","playlistImamName","mapDispatchToProps","dispatch","playingToggle","data","getImamNameBeforeUpdate","removeItemFromPlayList","bool"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,EAA6CC,WAA7C,QAAgE,OAAhE;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,aAAT,EAAwBC,cAAxB,EAAwCC,cAAxC,QAA8D,gBAA9D;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,gBAAhC;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,UAArC,QAAuD,gBAAvD;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,4BAAzB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAO,sCAAP;;;AAGA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACyB,WAAD,EAAcC,cAAd,IAAgC1B,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAAC2B,cAAD,EAAiBC,iBAAjB,IAAsC5B,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM6B,UAAU,GAAG5B,MAAM,EAAzB;AACA,QAAM,CAAC6B,eAAD,EAAkBC,kBAAlB,IAAwC/B,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAMgC,kBAAkB,GAAGF,eAAe,GAAG,CAAC,eAAD,EAAkB,MAAlB,CAAH,GAA+B,CAAC,eAAD,CAAzE;AAGA,QAAMG,OAAO,GAAG9B,WAAW,CAAC,MAAM;AAC9B,QAAI0B,UAAU,CAACK,OAAX,CAAmBC,MAAvB,EAA+B;AAC3BN,MAAAA,UAAU,CAACK,OAAX,CAAmBE,IAAnB,GAA0BC,KAA1B,CAAgCC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAzC;AACAlB,MAAAA,KAAK,CAACmB,WAAN;AACH;;AACDF,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH,GAN0B,EAMxB,EANwB,CAA3B;AAQA,QAAME,QAAQ,GAAGvC,WAAW,CAAC,MAAM;AAC/B,QAAI,CAAC0B,UAAU,CAACK,OAAX,CAAmBC,MAAxB,EAAgC;AAC5BN,MAAAA,UAAU,CAACK,OAAX,CAAmBS,KAAnB;AACArB,MAAAA,KAAK,CAACsB,YAAN;AACH;;AAEDL,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,GAP2B,EAOzB,EAPyB,CAA5B;AASA,QAAMK,WAAW,GAAG1C,WAAW,CAAC,MAAM;AAClCoC,IAAAA,OAAO,CAACC,GAAR,CAAY,2EAAZ;AACAlB,IAAAA,KAAK,CAACwB,UAAN;AACAjB,IAAAA,UAAU,CAACK,OAAX,CAAmBC,MAAnB,GAA4BF,OAAO,EAAnC,GAAwCS,QAAQ,EAAhD;AACH,GAJ8B,EAI5B,EAJ4B,CAA/B;AAMA,QAAMK,WAAW,GAAG5C,WAAW,CAAE6C,KAAD,IAAW;AACvCxB,IAAAA,QAAQ,CAAC,CAACwB,KAAK,CAACC,MAAN,CAAa1B,KAAf,CAAR;AACAM,IAAAA,UAAU,CAACK,OAAX,CAAmBgB,MAAnB,GAA4BF,KAAK,CAACC,MAAN,CAAa1B,KAAzC;AACH,GAH8B,EAG5B,EAH4B,CAA/B,CAhCwB,CAqCxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEA,QAAM4B,WAAW,GAAGhD,WAAW,CAAEiD,CAAD,IAAO;AACnCvB,IAAAA,UAAU,CAACK,OAAX,CAAmBmB,WAAnB,IAAkC,CAACD,CAAnC;AACH,GAF8B,EAE5B,EAF4B,CAA/B;AAIA,QAAME,KAAK,GAAGnD,WAAW,CAAEiD,CAAD,IAAO;AAC7B,QAAIG,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAnB;AACA,UAAMC,SAAS,GAAIN,CAAC,CAACO,WAAF,CAAcC,OAAd,GAAwBL,YAAY,CAACM,WAAtC,GAAqDhC,UAAU,CAACK,OAAX,CAAmB4B,QAA1F;;AACA,QAAGV,CAAC,CAACH,MAAF,CAASc,SAAT,KAAuB,oBAA1B,EAAgD;AAC5ClC,MAAAA,UAAU,CAACK,OAAX,CAAmBmB,WAAnB,GAAiCK,SAAjC;AACAnB,MAAAA,OAAO,CAACC,GAAR,CAAYY,CAAC,CAACO,WAAF,CAAcC,OAA1B;AACH;AACJ,GAPwB,EAOtB,EAPsB,CAAzB;;AASA,QAAMI,YAAY,GAAG,MAAM;AACvBzB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,QAAGlB,KAAK,CAAC2C,QAAT,EAAmB;AACf,YAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB/C,KAAK,CAACgD,KAAN,CAAYC,MAAvC,EAA+CC,QAA/C,EAAlB;AACA,YAAMC,GAAG,GAAGnD,KAAK,CAACgD,KAAN,CAAYJ,SAAZ,EAAuBK,MAAvB,KAAkC,CAAlC,GAAuC,KAAIjD,KAAK,CAACgD,KAAN,CAAYJ,SAAZ,CAAuB,EAAlE,GAAsE5C,KAAK,CAACgD,KAAN,CAAYJ,SAAZ,EAAuBK,MAAvB,KAAkC,CAAlC,GAAuC,IAAGjD,KAAK,CAACgD,KAAN,CAAYJ,SAAZ,CAAuB,EAAjE,GAAqE5C,KAAK,CAACgD,KAAN,CAAYJ,SAAZ,CAAvJ;AACA5C,MAAAA,KAAK,CAACoD,cAAN,CAAqBD,GAArB;AACA,UAAIE,OAAO,GAAGrD,KAAK,CAACsD,aAAN,CAAoBV,SAApB,CAAd;AACA5C,MAAAA,KAAK,CAACuD,UAAN,CAAiBF,OAAjB;AACArD,MAAAA,KAAK,CAACwD,uBAAN,CAA8B,KAA9B;AACAxD,MAAAA,KAAK,CAACyD,YAAN,CAAmBzD,KAAK,CAAC0D,QAAzB;AACAzC,MAAAA,OAAO,CAACC,GAAR,CAAY,oDAAZ;AACH;AACJ,GAZD;;AAcA,QAAMyC,SAAS,GAAG9E,WAAW,CAAC+E,IAAI,IAAI;AAClC,UAAMC,SAAS,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAlB;AACA,UAAMC,YAAY,GAAG,CAACF,SAAS,CAAC,CAAD,CAA/B;AACA,QAAIG,MAAM,GAAG,EAAb;;AACA,QAAGD,YAAY,GAAG,EAAlB,EAAsB;AAClB,UAAIE,IAAI,GAAGF,YAAY,GAAC,EAAxB;AACA,UAAIG,SAAS,GAAGD,IAAI,CAACf,QAAL,GAAgBY,KAAhB,CAAsB,GAAtB,CAAhB;AACA,UAAIK,MAAM,GAAG,OAAOD,SAAS,CAAC,CAAD,CAA7B;AACA,UAAIE,OAAO,GAAGvB,IAAI,CAACwB,KAAL,CAAWF,MAAM,GAAG,EAApB,CAAd;AACAH,MAAAA,MAAM,GAAI,GAAEE,SAAS,CAAC,CAAD,CAAI,IAAGE,OAAO,GAAG,CAAV,GAAe,IAAGA,OAAQ,EAA1B,GAA4BA,OAAQ,IAAGP,SAAS,CAAC,CAAD,CAAI,EAAhF;AACH,KAND,MAMO;AACH,UAAIS,YAAY,GAAGV,IAAI,CAACE,KAAL,CAAW,GAAX,CAAnB;AACA,UAAIS,iBAAiB,GAAG,CAACD,YAAY,CAAC,CAAD,CAArC;AACA,UAAIE,qBAAqB,GAAGD,iBAAiB,GAAG,CAApB,GAAyB,IAAGA,iBAAkB,EAA9C,GAAkDA,iBAA9E;AACA,UAAIE,UAAU,GAAGpE,cAAc,CAACyD,KAAf,CAAqB,GAArB,CAAjB;AACAE,MAAAA,MAAM,GAAGS,UAAU,KAAK,CAAf,GAAoB,MAAKD,qBAAsB,IAAGF,YAAY,CAAC,CAAD,CAAI,EAAlE,GAAuE,GAAEE,qBAAsB,IAAGF,YAAY,CAAC,CAAD,CAAI,EAA3H;AACH;;AACD,WAAON,MAAP;AACH,GAlB4B,EAkB1B,EAlB0B,CAA7B;AAoBA,QAAMU,QAAQ,GAAGf,SAAS,CAACxD,WAAD,CAA1B;AACA,QAAMwE,gBAAgB,GAAGhB,SAAS,CAACtD,cAAD,CAAlC;;AAEA,QAAMuE,WAAW,GAAIC,IAAD,IAAU;AAC1B5D,IAAAA,OAAO,CAACC,GAAR,CAAY2D,IAAI,CAACC,MAAjB;AACA9E,IAAAA,KAAK,CAAC+E,oBAAN,CAA2BF,IAAI,CAACC,MAAhC;AACA9E,IAAAA,KAAK,CAACgF,sBAAN,CAA6BH,IAA7B;AACH,GAJD;;AAMA,QAAMI,WAAW,GAAGC,SAAS,IAAIA,SAAS,IAAIA,SAAS,CAACjC,MAAV,GAAmB,EAAhC,GAAsC,GAAEiC,SAAS,CAACC,KAAV,CAAgB,CAAhB,EAAmB,EAAnB,CAAuB,KAA/D,GAAsED,SAAvG;;AAEA,QAAME,WAAW,GAAG,MAAM;AACtB,QAAGnF,KAAK,GAAG,GAAX,EAAgB;AACZC,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACAK,MAAAA,UAAU,CAACK,OAAX,CAAmBgB,MAAnB,GAA4B,CAA5B;AACH,KAHD,MAGO;AACH1B,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACAK,MAAAA,UAAU,CAACK,OAAX,CAAmBgB,MAAnB,GAA4B,CAA5B;AACH;AACJ,GARD;;AAUA,QAAMyD,eAAe,GAAG,CAACC,IAAD,EAAOC,MAAP,EAAeC,QAAf,EAAyB9B,QAAzB,KAAsC;AAC1D1D,IAAAA,KAAK,CAACsB,YAAN;AACAtB,IAAAA,KAAK,CAACyF,YAAN,CAAmBH,IAAnB;AACAtF,IAAAA,KAAK,CAAC0F,oBAAN,CAA2BH,MAA3B,EAAmCC,QAAnC;AACAxF,IAAAA,KAAK,CAAC2F,UAAN;AACA3F,IAAAA,KAAK,CAACyD,YAAN,CAAmBC,QAAnB;AACA1D,IAAAA,KAAK,CAACwD,uBAAN,CAA8B,IAA9B;AACAxD,IAAAA,KAAK,CAAC4F,0BAAN,CAAiClC,QAAjC;AACA1D,IAAAA,KAAK,CAAC6F,UAAN;AACH,GATD;;AAWA5E,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AAEA,QAAM4E,GAAG,GAAG,MAAM;AACd7E,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACH,GAFD;;AAIA,sBACI,QAAC,aAAD;AAAe,IAAA,KAAK,EAAElB,KAAK,CAACgD,KAA5B;AAAmC,IAAA,KAAK,EAAEhD,KAAK,CAAC+F,KAAhD;AAAuD,IAAA,UAAU,EAAE/F,KAAK,CAACgG,UAAzE;AAAqF,IAAA,aAAa,EAAEhG,KAAK,CAACiG,aAA1G;AAAyH,IAAA,eAAe,EAAEzF,eAA1I;AAAA,eACK,CAACR,KAAK,CAACiG,aAAP,iBACG;AAAK,MAAA,SAAS,EAAC,0BAAf;AAA0C,MAAA,OAAO,EAAEvD,YAAnD;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,IAAI,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFR,eAMI;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA,6BACI,QAAC,WAAD;AAAa,QAAA,IAAI,EAAE,EAAnB;AAAwB,QAAA,OAAO,EAAE,MAAMjC,kBAAkB,CAAC,CAACD,eAAF;AAAzD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ,eASI,QAAC,WAAD;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,GAAG,EAAER,KAAK,CAACkG;AAFf;AAAA;AAAA;AAAA;AAAA,YATJ,eAaI,QAAC,SAAD;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,kCAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAExF,kBAAkB,CAACyF,IAAnB,CAAwB,GAAxB,CAAhB;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,kCAAf;AAAA,oCACI,QAAC,cAAD;AAAgB,cAAA,IAAI,EAAE,EAAtB;AAA0B,cAAA,OAAO,EAAE,MAAM1F,kBAAkB,CAAC,CAACD,eAAF;AAA3D;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAKR,KAAK,CAACoG,aAAN,CAAoBC;AAAzB;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAI,YAAA,SAAS,EAAC,yBAAd;AAAA,sBAEQrG,KAAK,CAACsG,QAAN,IAAkBtG,KAAK,CAACsG,QAAN,CAAerD,MAAf,GAAwB,CAA1C,GACGjD,KAAK,CAACsG,QAAN,CAAeC,GAAf,CAAmB,CAACzE,CAAD,EAAI0E,CAAJ,kBAClB,QAAC,QAAD;AAEI,cAAA,MAAM,EAAE1E,CAAC,CAACgD,MAFd;AAGI,cAAA,MAAM,EAAEhD,CAAC,CAACyD,MAHd;AAII,cAAA,IAAI,EAAEzD,CAAC,CAAC2E,IAJZ;AAKI,cAAA,MAAM,EAAE3E,CAAC,CAAC4E,MALd;AAMI,cAAA,KAAK,EAAEF,CANX;AAOI,cAAA,QAAQ,EAAE1E,CAAC,CAAC0D,QAPhB;AAQI,cAAA,UAAU,EAAGX,IAAD,IAAUD,WAAW,CAACC,IAAD,CARrC;AASI,cAAA,OAAO,EAAE,CAACS,IAAD,EAAOC,MAAP,EAAeC,QAAf,EAAyBiB,IAAzB,KAAkCpB,eAAe,CAACC,IAAD,EAAOC,MAAP,EAAeC,QAAf,EAAyBiB,IAAzB;AAT9D,eACS3E,CAAC,CAACgD,MADX;AAAA;AAAA;AAAA;AAAA,oBADD,CADH,gBAcE;AAAK,cAAA,SAAS,EAAC,qCAAf;AAAA,yBAAsD9E,KAAK,CAACoG,aAAN,CAAoBO,iBAA1E,oBAA6F,QAAC,YAAD;AAAc,gBAAA,IAAI,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA,sBAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBV;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAhKwB,CAmNxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CA/SD;;GAAM5G,U;;KAAAA,U;;AAiTN,MAAM6G,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHnD,IAAAA,QAAQ,EAAEmD,KAAK,CAACC,OAAN,KAAkB,IAAlB,GAAyB,EAAzB,GAA8BD,KAAK,CAACC,OAAN,CAAcL,IADnD;AAEHjB,IAAAA,QAAQ,EAAEqB,KAAK,CAACrB,QAFb;AAGHU,IAAAA,QAAQ,EAAEW,KAAK,CAACX,QAHb;AAIHa,IAAAA,SAAS,EAAEF,KAAK,CAACE,SAJd;AAKH/D,IAAAA,KAAK,EAAE6D,KAAK,CAAC7D,KALV;AAMHM,IAAAA,aAAa,EAAEuD,KAAK,CAACvD,aANlB;AAOH0D,IAAAA,UAAU,EAAEH,KAAK,CAACG,UAPf;AAQHC,IAAAA,oBAAoB,EAAEJ,KAAK,CAACI,oBARzB;AASHtE,IAAAA,QAAQ,EAAEkE,KAAK,CAAClE,QATb;AAUH2D,IAAAA,QAAQ,EAAEO,KAAK,CAACP,QAVb;AAWHL,IAAAA,aAAa,EAAEY,KAAK,CAACZ,aAXlB;AAYHiB,IAAAA,gBAAgB,EAAEL,KAAK,CAACK,gBAZrB;AAaHnB,IAAAA,KAAK,EAAEc,KAAK,CAACd,KAbV;AAcHC,IAAAA,UAAU,EAAEa,KAAK,CAACb,UAdf;AAeHI,IAAAA,aAAa,EAAES,KAAK,CAACT;AAflB,GAAP;AAiBH,CAlBD;;AAoBA,MAAMe,kBAAkB,GAAGC,QAAQ,KAAK;AACpC5F,EAAAA,UAAU,EAAE,MAAM4F,QAAQ,CAACzH,OAAO,CAAC0H,aAAR,EAAD,CADU;AAEpC/F,EAAAA,YAAY,EAAE,MAAM8F,QAAQ,CAACzH,OAAO,CAAC2B,YAAR,EAAD,CAFQ;AAGpCH,EAAAA,WAAW,EAAE,MAAMiG,QAAQ,CAACzH,OAAO,CAACwB,WAAR,EAAD,CAHS;AAIpCiC,EAAAA,cAAc,EAAGkE,IAAD,IAAUF,QAAQ,CAACzH,OAAO,CAACyD,cAAR,CAAuBkE,IAAvB,CAAD,CAJE;AAKpC/D,EAAAA,UAAU,EAAGkD,IAAD,IAAUW,QAAQ,CAACzH,OAAO,CAAC4D,UAAR,CAAmBkD,IAAnB,CAAD,CALM;AAMpChD,EAAAA,YAAY,EAAGgD,IAAD,IAAUW,QAAQ,CAACzH,OAAO,CAAC4H,uBAAR,CAAgCd,IAAhC,CAAD,CANI;AAOpCzB,EAAAA,sBAAsB,EAAGH,IAAD,IAAUuC,QAAQ,CAACzH,OAAO,CAAC6H,sBAAR,CAA+B3C,IAA/B,CAAD,CAPN;AAQpCE,EAAAA,oBAAoB,EAAGF,IAAD,IAAUuC,QAAQ,CAACzH,OAAO,CAACoF,oBAAR,CAA6BF,IAA7B,CAAD,CARJ;AASpCc,EAAAA,UAAU,EAAE,MAAMyB,QAAQ,CAACzH,OAAO,CAACgG,UAAR,EAAD,CATU;AAUpCF,EAAAA,YAAY,EAAGH,IAAD,IAAU8B,QAAQ,CAACzH,OAAO,CAACuG,QAAR,CAAiBZ,IAAjB,CAAD,CAVI;AAWpCI,EAAAA,oBAAoB,EAAE,CAACH,MAAD,EAASC,QAAT,KAAsB4B,QAAQ,CAACzH,OAAO,CAAC+F,oBAAR,CAA6BH,MAA7B,EAAqCC,QAArC,CAAD,CAXhB;AAYpChC,EAAAA,uBAAuB,EAAGiE,IAAD,IAAUL,QAAQ,CAACzH,OAAO,CAAC6D,uBAAR,CAAgCiE,IAAhC,CAAD,CAZP;AAapC7B,EAAAA,0BAA0B,EAAGa,IAAD,IAAUW,QAAQ,CAACzH,OAAO,CAACiG,0BAAR,CAAmCa,IAAnC,CAAD,CAbV;AAcpCZ,EAAAA,UAAU,EAAE,MAAMuB,QAAQ,CAACzH,OAAO,CAACkG,UAAR,EAAD;AAdU,CAAL,CAAnC;;AAiBA,eAAenG,OAAO,CAACkH,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CpH,UAA7C,CAAf","sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport { PlayerContent } from './audioPlayerStyled';\r\nimport { AiOutlinePlus, AiOutlineMinus, AiOutlineClose } from 'react-icons/ai';\r\nimport { FaRandom } from 'react-icons/fa';\r\nimport { BiPlay, BiPause } from 'react-icons/bi';\r\nimport { BsVolumeDown, BsVolumeMute, BsVolumeUp } from 'react-icons/bs';\r\nimport { CgTrashEmpty } from 'react-icons/cg';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/action/getData';\r\nimport Playlist from '../playlist/playlist';\r\nimport { AiFillHeart } from 'react-icons/ai';\r\n\r\nimport AudioPlayer from 'react-h5-audio-player';\r\nimport 'react-h5-audio-player/lib/styles.css';\r\n\r\n\r\nconst SongPlayer = props => {\r\n    const [value, setValue] = useState(1);\r\n    const [getDuration, setGetDuration] = useState('00');\r\n    const [getCurrentTime, setGetCurrentTime] = useState('00');\r\n    const myAudioRef = useRef();\r\n    const [showfavPlaylist, setShowfavPlaylist] = useState(false);\r\n    const favPlaylistclasses = showfavPlaylist ? ['playlist_list', 'show'] : ['playlist_list'];\r\n\r\n\r\n    const playFun = useCallback(() => {\r\n        if (myAudioRef.current.paused) {\r\n            myAudioRef.current.play().catch(error => console.log('myError'));\r\n            props.playingTrue();\r\n        }\r\n        console.log('PLay');\r\n    }, []);\r\n\r\n    const pauseFun = useCallback(() => {\r\n        if (!myAudioRef.current.paused) {\r\n            myAudioRef.current.pause();\r\n            props.playingFalse();\r\n        }\r\n\r\n        console.log('Pause');\r\n    }, []);\r\n\r\n    const toggleAudio = useCallback(() => {\r\n        console.log('*************************************************************************')\r\n        props.togglePlay();\r\n        myAudioRef.current.paused ? playFun() : pauseFun();\r\n    }, [])\r\n\r\n    const valueHanler = useCallback((event) => {\r\n        setValue(+event.target.value);\r\n        myAudioRef.current.volume = event.target.value;\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n    //     let isMount = false;\r\n    //     if(!isMount) {\r\n    //         var au = document.getElementById(\"my-audio\");\r\n    //         console.log('MNMNMN');\r\n    //         au.onloadedmetadata = function () {\r\n    //             let calcDuration = Math.floor(au.duration / 60) + ':' + ('0' + Math.floor(au.duration % 60)).slice(-2)\r\n    //             setGetDuration(calcDuration);\r\n    //             let calcCurreentTime = Math.floor(au.currentTime / 60) + ':' + ('0' + Math.floor(au.currentTime % 60)).slice(-2)\r\n    //             setGetCurrentTime(calcCurreentTime);\r\n    //         };\r\n\r\n    //         myAudioRef.current.addEventListener('timeupdate', () => {\r\n    //             let curTime = myAudioRef.current.currentTime;\r\n\r\n    //             let calCurTime = Math.floor(curTime / 60) + ':' + ('0' + Math.floor(curTime % 60)).slice(-2)\r\n    //             setGetCurrentTime(calCurTime);\r\n\r\n    //             let progress = document.getElementById('short-progress');\r\n    //             let percent = (curTime / myAudioRef.current.duration) * 100;\r\n    //             progress.style.flexBasis = `${percent}%`;\r\n\r\n    //             if(myAudioRef.current.currentTime === myAudioRef.current.duration) {\r\n    //                 console.log('Is Completed')\r\n    //                 props.playingTrue();\r\n    //             }\r\n    //         });\r\n\r\n    //         playFun();\r\n    //     }\r\n\r\n    //     return () => {\r\n    //         isMount = true;\r\n    //         myAudioRef.current.removeEventListener('ended', () => props.playingFalse());\r\n    //     };\r\n\r\n    // }, [setGetCurrentTime, props.suraLink]);\r\n\r\n    const skippedTime = useCallback((e) => {\r\n        myAudioRef.current.currentTime += +e\r\n    }, []);\r\n\r\n    const scrub = useCallback((e) => {\r\n        let fullProgress = document.getElementById('full-progress');\r\n        const scrubTime = (e.nativeEvent.offsetX / fullProgress.offsetWidth) * myAudioRef.current.duration;\r\n        if(e.target.className !== 'short-progress-end') {\r\n            myAudioRef.current.currentTime = scrubTime;\r\n            console.log(e.nativeEvent.offsetX);\r\n        }\r\n    }, []);\r\n\r\n    const randomChoice = () => {\r\n        console.log('Random');\r\n        if(props.isRandom) {\r\n            const getRandom = Math.floor(Math.random() * props.suras.length).toString()\r\n            const num = props.suras[getRandom].length === 1 ? `00${props.suras[getRandom]}` : props.suras[getRandom].length === 2 ? `0${props.suras[getRandom]}` : props.suras[getRandom];\r\n            props.suraLinkRandom(num);\r\n            let getName = props.allSurasNames[getRandom];\r\n            props.changeName(getName);\r\n            props.isFromFavouritePlaylist(false);\r\n            props.imamNameFunc(props.imamName);\r\n            console.log('{{{{{{{{{{{{{{{{{{{{{{{}}}}}}}}}}}}}}}}}}}}}}}}}}}')\r\n        }\r\n    }\r\n\r\n    const calcTimes = useCallback(time => {\r\n        const timeInArr = time.split(':');\r\n        const firstElement = +timeInArr[0]\r\n        let myTime = '';\r\n        if(firstElement > 59) {\r\n            let hour = firstElement/60;\r\n            let diviedMin = hour.toString().split('.');\r\n            let getMun = '0.' + diviedMin[1];\r\n            let calcMin = Math.round(getMun * 60);\r\n            myTime = `${diviedMin[0]}:${calcMin < 9 ? `0${calcMin}`:calcMin}:${timeInArr[1]}`;\r\n        } else {\r\n            let minutesInArr = time.split(':');\r\n            let firstElementInMin = +minutesInArr[0];\r\n            let caclfirstElementInMin = firstElementInMin < 9 ? `0${firstElementInMin}` : firstElementInMin;\r\n            let countFinal = getCurrentTime.split(':');\r\n            myTime = countFinal === 3 ? `00:${caclfirstElementInMin}:${minutesInArr[1]}` : `${caclfirstElementInMin}:${minutesInArr[1]}`;\r\n        }\r\n        return myTime;\r\n    }, []);\r\n\r\n    const fullTime = calcTimes(getDuration);\r\n    const currentTimeAudio = calcTimes(getCurrentTime);\r\n\r\n    const deleteItems = (item) => {\r\n        console.log(item.server);\r\n        props.deleteFavFromSurabox(item.server);\r\n        props.deleteItemFromPlaylist(item);\r\n    }\r\n\r\n    const cutSentance = immamName => immamName && immamName.length > 21 ? `${immamName.slice(0, 21)}...` : immamName;\r\n\r\n    const toggleValue = () => {\r\n        if(value > 0.5) {\r\n            setValue(0);\r\n            myAudioRef.current.volume = 0;\r\n        } else {\r\n            setValue(1);\r\n            myAudioRef.current.volume = 1;\r\n        }\r\n    }\r\n\r\n    const clickedPlaylist = (link, number, suraName, imamName) => {\r\n        props.playingFalse();\r\n        props.suraLinkFunc(link);\r\n        props.getSurah_Number_Name(number, suraName);\r\n        props.showPlayer();\r\n        props.imamNameFunc(imamName);\r\n        props.isFromFavouritePlaylist(true);\r\n        props.favouritePlaylistImmamName(imamName);\r\n        props.emptySuras();\r\n    }\r\n\r\n    console.log('SONG Player');\r\n\r\n    const zzz = () => {\r\n        console.log('zzz')\r\n    }\r\n\r\n    return (\r\n        <PlayerContent suras={props.suras} theme={props.theme} themeStyle={props.themeStyle} isFavPlaylist={props.isFavPlaylist} showfavPlaylist={showfavPlaylist}>\r\n            {!props.isFavPlaylist && (\r\n                <div className='random d-none d-sm-block' onClick={randomChoice}>\r\n                    <FaRandom size={22} />\r\n                </div>\r\n            )}\r\n            <div className='favorite_box d-none d-sm-block'>\r\n                <AiFillHeart size={24}  onClick={() => setShowfavPlaylist(!showfavPlaylist)} />\r\n            </div>\r\n            <AudioPlayer \r\n                autoPlay\r\n                src={props.suraLink}\r\n            />\r\n            <Container>\r\n                <div className='playlist_items d-none d-sm-block'>\r\n                    <div className={favPlaylistclasses.join(' ')}>\r\n                        <div className='header d-flex align-items-center'>\r\n                            <AiOutlineClose size={20} onClick={() => setShowfavPlaylist(!showfavPlaylist)} />\r\n                            <h5>{props.site_language.favorite}</h5>\r\n                        </div>\r\n                        <ul className='list-unstyled sura_list'>\r\n                            {\r\n                                props.playlist && props.playlist.length > 0 \r\n                                ?  props.playlist.map((e, i) => (\r\n                                    <Playlist\r\n                                        key={e.server}\r\n                                        server={e.server}\r\n                                        number={e.number}\r\n                                        name={e.name}\r\n                                        rewaya={e.rewaya}\r\n                                        index={i}\r\n                                        suraName={e.suraName}\r\n                                        deleteItem={(item) => deleteItems(item)}\r\n                                        clicked={(link, number, suraName, name) => clickedPlaylist(link, number, suraName, name)}\r\n                                    />\r\n                                ))\r\n                                : <div className='no_list text-center text-capitalize'>{props.site_language.no_playlist_added} <CgTrashEmpty size={26} /></div>\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </PlayerContent>\r\n    );\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // =============================================================================\r\n    // return (\r\n    //     <PlayerContent suras={props.suras} theme={props.theme} themeStyle={props.themeStyle}>\r\n    //         <Container>\r\n    //             <div className='player_content'>\r\n    //                 <div className='icons_controls_audio'>\r\n    //                     <ul className='mb-0 justify-content-center'>\r\n    //                         <li onClick={randomChoice} className='mr-2 ml-3 mr-sm-2 ml-sm-2'>\r\n    //                             <button className={props.suras.length === 0 ? 'disabled' : null} disabled={props.suras.length === 0 ? true : false}>\r\n    //                                 {<FaRandom size={14} />}\r\n    //                             </button>\r\n    //                         </li>\r\n    //                         <li onClick={(e) => skippedTime('-10')} className='mr-2 ml-3 mr-sm-2 ml-sm-2'>\r\n    //                             <button>\r\n    //                                 {<AiOutlineMinus size={20} />}\r\n    //                             </button>\r\n    //                         </li>\r\n    //                         <li onClick={toggleAudio} className='main-btn mr-2 ml-3 mr-sm-2 ml-sm-2'>\r\n    //                             <button>\r\n    //                                 {props.isPlaying ? <BiPause size={30} /> : <BiPlay size={30} style={{ paddingLeft: '3px' }} />}\r\n    //                             </button>\r\n    //                             </li>\r\n    //                         <li onClick={(e) => skippedTime('+10')} className='mr-2 ml-3 mr-sm-2 ml-sm-2'>\r\n    //                             <button>\r\n    //                                 {<AiOutlinePlus size={20} />}\r\n    //                             </button>\r\n    //                         </li>\r\n    //                     </ul>\r\n    //                 </div>\r\n    //                 <div className='progress_valume pl-2 pr-0 pr-md-2'>\r\n    //                     <div className='progress_bar_controls'>\r\n    //                         <span className='current-time'>{currentTimeAudio}</span>\r\n    //                         <div className='full-progress' id='full-progress' onClick={(e) => scrub(e)}>\r\n    //                             <audio id='my-audio' ref={myAudioRef} src={props.suraLink} preload=\"metadata\" />\r\n    //                             <div className='short-progress' id='short-progress'>\r\n    //                                 <span className='short-progress-end' onClick={(e) => scrub(e)}></span>\r\n    //                             </div>\r\n    //                         </div>\r\n    //                         <span className='full-time'>{fullTime}</span>\r\n    //                     </div>\r\n    //                     <div className='playlist_items d-none d-md-block'>\r\n    //                         <AiFillHeart size={25} onClick={() => setShowfavPlaylist(!showfavPlaylist)} />\r\n    //                         <div className={favPlaylistclasses.join(' ')}>\r\n    //                             <div className='header d-flex-align-items-center'>\r\n    //                                 <AiOutlineClose size={20} onClick={() => setShowfavPlaylist(!showfavPlaylist)} />\r\n    //                             </div>\r\n    //                             <ul className='list-unstyled sura_list'>\r\n    //                                 {\r\n    //                                 props.playlist && props.playlist.length > 0 \r\n    //                                 ?  props.playlist.map((e, i) => (\r\n    //                                     <Playlist\r\n    //                                         key={e.server}\r\n    //                                         server={e.server}\r\n    //                                         number={e.number}\r\n    //                                         name={e.name}\r\n    //                                         rewaya={e.rewaya}\r\n    //                                         index={i}\r\n    //                                         suraName={e.suraName}\r\n    //                                         deleteItem={(item) => deleteItems(item)}\r\n    //                                         clicked={(link, number, suraName, name) => clickedPlaylist(link, number, suraName, name)}\r\n    //                                     />\r\n    //                                 ))\r\n    //                                 : <div className='no_list text-center text-capitalize'>{props.site_language.no_playlist_added} <CgTrashEmpty size={26} /></div>\r\n    //                                 }\r\n    //                             </ul>\r\n    //                         </div>\r\n    //                     </div>\r\n    //                     <div className='volume-controll ml-1'>\r\n    //                         <span className='volume-icon' title={`${value * 100}%`} onClick={toggleValue}>\r\n    //                             {value > 0.70 && (<>\r\n    //                                 <BsVolumeUp size={27} />\r\n    //                             </>)}\r\n    //                             {value <= 0.70 && value > 0.01 && (<>\r\n    //                                 <BsVolumeDown size={27} />\r\n    //                             </>)}\r\n    //                             {value == 0.00 && (<>\r\n    //                                 <BsVolumeMute size={27} />\r\n    //                             </>)}\r\n    //                         </span>\r\n    //                         <div className='player-slider-parent'>\r\n    //                             <input type='range' name='value' min='0' max='1' value={value} onChange={(e) => valueHanler(e)} step='.05' title={`${value * 100}%`} className='player-slider' />\r\n    //                         </div>\r\n    //                     </div>\r\n    //                 </div>\r\n    //                 <div className='sura_description text-center d-none d-md-block' title={props.isFavPlaylist ? props.playlistImamName : props.imamNameBeforeUpdate}>\r\n    //                     <h6 className='text-capitalize mb-0 play_item_name'>{props.isFavPlaylist ? cutSentance(props.playlistImamName) : cutSentance(props.imamNameBeforeUpdate)}</h6>\r\n    //                     <span className='text-capitalize play_item_sura'>{props.suraName}</span>\r\n    //                 </div>\r\n    //             </div>\r\n    //         </Container>\r\n    //     </PlayerContent>\r\n    // )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        imamName: state.getData === null ? '' : state.getData.name,\r\n        suraName: state.suraName,\r\n        suraLink: state.suraLink,\r\n        isPlaying: state.isPlaying,\r\n        suras: state.suras,\r\n        allSurasNames: state.allSurasNames,\r\n        isImamPage: state.isImamPage,\r\n        imamNameBeforeUpdate: state.imamNameBeforeUpdate,\r\n        isRandom: state.isRandom,\r\n        playlist: state.playlist,\r\n        isFavPlaylist: state.isFavPlaylist,\r\n        playlistImamName: state.playlistImamName,\r\n        theme: state.theme,\r\n        themeStyle: state.themeStyle,\r\n        site_language: state.site_language\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    togglePlay: () => dispatch(actions.playingToggle()),\r\n    playingFalse: () => dispatch(actions.playingFalse()),\r\n    playingTrue: () => dispatch(actions.playingTrue()),\r\n    suraLinkRandom: (data) => dispatch(actions.suraLinkRandom(data)),\r\n    changeName: (name) => dispatch(actions.changeName(name)),\r\n    imamNameFunc: (name) => dispatch(actions.getImamNameBeforeUpdate(name)),\r\n    deleteItemFromPlaylist: (item) => dispatch(actions.removeItemFromPlayList(item)),\r\n    deleteFavFromSurabox: (item) => dispatch(actions.deleteFavFromSurabox(item)),\r\n    showPlayer: () => dispatch(actions.showPlayer()),\r\n    suraLinkFunc: (link) => dispatch(actions.suraLink(link)),\r\n    getSurah_Number_Name: (number, suraName) => dispatch(actions.getSurah_Number_Name(number, suraName)),\r\n    isFromFavouritePlaylist: (bool) => dispatch(actions.isFromFavouritePlaylist(bool)),\r\n    favouritePlaylistImmamName: (name) => dispatch(actions.favouritePlaylistImmamName(name)),\r\n    emptySuras: () => dispatch(actions.emptySuras())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SongPlayer);"]},"metadata":{},"sourceType":"module"}