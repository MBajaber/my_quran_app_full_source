{"ast":null,"code":"import * as actionType from './actionTypes';\nexport const getData = data => {\n  return dispatch => {\n    dispatch({\n      type: actionType.GET_IMAM_DATA,\n      imamData: data,\n      suras: data.suras.split(',')\n    });\n  };\n};\nexport const getServer = server => {\n  return dispatch => {\n    dispatch({\n      type: actionType.GET_SERVER,\n      server: server\n    });\n  };\n};\nexport const showPlayer = () => {\n  return dispatch => {\n    dispatch({\n      type: actionType.SHOW_PLAYER\n    });\n  };\n};\nexport const getSurah_Number_Name = (number, name) => {\n  return dispatch => {\n    dispatch({\n      type: actionType.SURA_NUMBER_NAME,\n      suraNumber: number,\n      suraName: name\n    });\n  };\n};\nexport const changeName = name => {\n  return dispatch => {\n    dispatch({\n      type: actionType.CHANGE_NAME,\n      name: name\n    });\n  };\n};\nexport const allSurasNames = names => {\n  return dispatch => {\n    dispatch({\n      type: actionType.ALL_SUARS_NAMES,\n      surasNames: names\n    });\n  };\n};\nexport const playingToggle = () => {\n  return dispatch => {\n    dispatch({\n      type: actionType.PLAYER_TOGGLE\n    });\n  };\n};\nexport const suraLink = () => {\n  return dispatch => {\n    dispatch({\n      type: actionType.SURA_LINK\n    });\n  };\n};\nexport const suraLinkRandom = randomNumber => {\n  return dispatch => {\n    dispatch({\n      type: actionType.SURA_LINK_RANDOM,\n      number: randomNumber\n    });\n  };\n};\nexport const playingFalse = () => {\n  console.log('False');\n  return dispatch => {\n    dispatch({\n      type: actionType.PLAYING_FALSE\n    });\n  };\n};\nexport const playingTrue = () => {\n  console.log('true');\n  return dispatch => {\n    dispatch({\n      type: actionType.PLAYING_TRUE\n    });\n  };\n};\nexport const startRequest = () => {\n  return dispatch => {\n    dispatch({\n      type: actionType.START_REQUEST\n    });\n  };\n};\nexport const successRequest = data => {\n  return dispatch => {\n    dispatch({\n      type: actionType.SUCCESS_REQUEST\n    });\n  };\n};\nexport const failRequest = error => {\n  return dispatch => {\n    dispatch({\n      type: actionType.FAIL_REQUEST,\n      error: error\n    });\n  };\n};\nexport const startMain = () => {\n  return dispatch => {\n    dispatch({\n      type: actionType.START_MAIN\n    });\n  };\n};\nexport const successMain = (letters, letterIndexs, allElements) => {\n  return dispatch => {\n    dispatch({\n      type: actionType.SUCCESS_MAIN,\n      letters: letters,\n      letterIndexs: letterIndexs,\n      allElements: allElements\n    });\n  };\n};\nexport const GetImamNameBeforeUpdate = name => {\n  return {\n    type: actionType.GET_IMAM_NAME_BEFORE_UPDATE,\n    name: name\n  };\n};\n_c = GetImamNameBeforeUpdate;\nexport const closeAside = () => {\n  return dispatch => {\n    dispatch({\n      type: actionType.CLOSE_ASIDE\n    });\n  };\n};\nexport const openAside = () => {\n  return {\n    type: actionType.OPEN_ASIDE\n  };\n};\nexport const addToPlayList = item => {\n  return {\n    type: actionType.ADD_TO_PLAYLIST,\n    item: item\n  };\n};\nexport const removeItemFromPlayList = item => {\n  return {\n    type: actionType.REMOVE_ITEM_FROM_PLAYLIST,\n    item: item\n  };\n};\nexport const playlistStorage = items => {\n  return {\n    type: actionType.PLAYLIST_STORAGE,\n    items: items\n  };\n};\nexport const deleteFavFromSurabox = item => {\n  return {\n    type: actionType.DELETE_FAVOURITE_FROM_SURABOX,\n    item: item\n  };\n};\nexport const emptyFavFromSurabox = () => {\n  return {\n    type: actionType.EMPTY_FAVOURITE_FROM_SURABOX\n  };\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"GetImamNameBeforeUpdate\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/HTML/quran_project_2/quran/src/store/action/getData.js"],"names":["actionType","getData","data","dispatch","type","GET_IMAM_DATA","imamData","suras","split","getServer","server","GET_SERVER","showPlayer","SHOW_PLAYER","getSurah_Number_Name","number","name","SURA_NUMBER_NAME","suraNumber","suraName","changeName","CHANGE_NAME","allSurasNames","names","ALL_SUARS_NAMES","surasNames","playingToggle","PLAYER_TOGGLE","suraLink","SURA_LINK","suraLinkRandom","randomNumber","SURA_LINK_RANDOM","playingFalse","console","log","PLAYING_FALSE","playingTrue","PLAYING_TRUE","startRequest","START_REQUEST","successRequest","SUCCESS_REQUEST","failRequest","error","FAIL_REQUEST","startMain","START_MAIN","successMain","letters","letterIndexs","allElements","SUCCESS_MAIN","GetImamNameBeforeUpdate","GET_IMAM_NAME_BEFORE_UPDATE","closeAside","CLOSE_ASIDE","openAside","OPEN_ASIDE","addToPlayList","item","ADD_TO_PLAYLIST","removeItemFromPlayList","REMOVE_ITEM_FROM_PLAYLIST","playlistStorage","items","PLAYLIST_STORAGE","deleteFavFromSurabox","DELETE_FAVOURITE_FROM_SURABOX","emptyFavFromSurabox","EMPTY_FAVOURITE_FROM_SURABOX"],"mappings":"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","sourcesContent":["import * as actionType from './actionTypes';\r\n\r\nexport const getData = (data) => {\r\n    return dispatch => {\r\n        dispatch({type: actionType.GET_IMAM_DATA, imamData: data, suras: data.suras.split(',')});\r\n    }\r\n}\r\n\r\nexport const getServer = (server) => {\r\n    return dispatch => {\r\n        dispatch({type: actionType.GET_SERVER, server: server});\r\n    }\r\n}\r\n\r\nexport const showPlayer = () => {\r\n    return dispatch => {\r\n        dispatch({type: actionType.SHOW_PLAYER})\r\n    }\r\n}\r\n\r\nexport const getSurah_Number_Name = (number, name) => {\r\n    return dispatch => {\r\n        dispatch({type: actionType.SURA_NUMBER_NAME, suraNumber: number, suraName: name})\r\n    }\r\n}\r\n\r\nexport const changeName = (name) => {\r\n    return dispatch => {\r\n        dispatch({type: actionType.CHANGE_NAME, name: name})\r\n    }\r\n}\r\n\r\nexport const allSurasNames = (names) => {\r\n    return dispatch => {\r\n       dispatch({type: actionType.ALL_SUARS_NAMES, surasNames: names})\r\n    }\r\n}\r\n\r\nexport const playingToggle = () => {\r\n    return dispatch => {\r\n        dispatch({type: actionType.PLAYER_TOGGLE})\r\n    }\r\n}\r\n\r\nexport const suraLink = () => {\r\n    return dispatch => {\r\n        dispatch({type: actionType.SURA_LINK})\r\n    }\r\n}\r\n\r\nexport const suraLinkRandom = (randomNumber) => {\r\n    return dispatch => {\r\n        dispatch({type: actionType.SURA_LINK_RANDOM, number: randomNumber})\r\n    }\r\n}\r\n\r\nexport const playingFalse = () => {\r\n    console.log('False')\r\n    return dispatch => {\r\n        dispatch({type: actionType.PLAYING_FALSE})\r\n    }\r\n}\r\n\r\nexport const playingTrue = () => {\r\n    console.log('true')\r\n    return dispatch => {\r\n        dispatch({type: actionType.PLAYING_TRUE})\r\n    }\r\n}\r\n\r\nexport const startRequest = () => {\r\n    return dispatch => {\r\n        dispatch({type: actionType.START_REQUEST})\r\n    }\r\n}\r\n\r\nexport const successRequest = (data) => {\r\n    return dispatch => {\r\n        dispatch({type: actionType.SUCCESS_REQUEST});\r\n    }\r\n}\r\n\r\nexport const failRequest = (error) => {\r\n    return dispatch => {\r\n        dispatch({type: actionType.FAIL_REQUEST, error: error})\r\n    }\r\n}\r\n\r\nexport const startMain = () => {\r\n    return dispatch => {\r\n        dispatch({type: actionType.START_MAIN});\r\n    }\r\n}\r\nexport const successMain = (letters, letterIndexs, allElements) => {\r\n    return dispatch => {\r\n        dispatch({type: actionType.SUCCESS_MAIN, letters: letters, letterIndexs: letterIndexs, allElements: allElements})\r\n    }\r\n}\r\n\r\nexport const GetImamNameBeforeUpdate = (name) => {\r\n    return {type: actionType.GET_IMAM_NAME_BEFORE_UPDATE, name: name}\r\n}\r\n\r\nexport const closeAside = () => {\r\n    return dispatch => {\r\n        dispatch({type: actionType.CLOSE_ASIDE});\r\n    }\r\n}\r\n\r\nexport const openAside = () => {\r\n    return {type: actionType.OPEN_ASIDE}\r\n}\r\n\r\nexport const addToPlayList = (item) => {\r\n    return {type: actionType.ADD_TO_PLAYLIST, item: item}\r\n}\r\n\r\nexport const removeItemFromPlayList = (item) => {\r\n    return {type: actionType.REMOVE_ITEM_FROM_PLAYLIST, item: item}\r\n}\r\n\r\nexport const playlistStorage = (items) => {\r\n    return {type: actionType.PLAYLIST_STORAGE, items: items}\r\n}\r\n\r\nexport const deleteFavFromSurabox = (item) => {\r\n    return {type: actionType.DELETE_FAVOURITE_FROM_SURABOX, item: item}\r\n}\r\n\r\nexport const emptyFavFromSurabox = () => {\r\n    return {type: actionType.EMPTY_FAVOURITE_FROM_SURABOX}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}