{"ast":null,"code":"import * as actionType from '../action/actionTypes';\nconst initialState = {\n  isAsideShow: false,\n  letters: null,\n  lettersIndex: null,\n  allElementsImams: null,\n  getData: null,\n  suras: [],\n  server: null,\n  showPlayer: false,\n  suraNumber: null,\n  suraName: null,\n  allSurasNames: [],\n  isPlaying: false,\n  suraLink: null,\n  loading: false,\n  error: null,\n  isRandom: false,\n  playlist: [],\n  deleteFav: '',\n  isFavPlaylist: false,\n  isFavoritePage: false,\n  isRadioPage: false,\n  imamNameBeforeUpdate: null,\n  playlistImamName: null,\n  isThemeDark: false,\n  theme: 'light',\n  themeStyle: {\n    all: {\n      mainColor: '#39c2c9',\n      secondaryColor: '#fa7e29',\n      whiteColor: '#FFF',\n      grayColor: '#636a6f',\n      blackColor: '#1d1f21',\n      redColor: '#dc3545',\n      yellowColor: '#f5b44b',\n      mutedColor: '#6c757d'\n    },\n    light: {\n      bg: '#ebedee',\n      secondaryColor: '#fff',\n      textNormal: '#1d1f21',\n      boxShadow: '0 2px 8px 0 hsl(0deg 0% 64% / 19%)'\n    },\n    dark: {\n      bg: '#282c35',\n      secondaryColor: '#363c48',\n      textNormal: '#fff',\n      boxShadow: '0 2px 15px 0 rgb(26 26 27 / 64%)'\n    }\n  },\n  language: {\n    lang: 'en',\n    language: '_english.json'\n  },\n  site_language: null\n};\n\nconst myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionType.START_MAIN:\n      return { ...state,\n        loading: true,\n        letters: null,\n        lettersIndex: null,\n        allElementsImams: null,\n        error: null,\n        server: null,\n        suras: [],\n        isRandom: false\n      };\n\n    case actionType.SUCCESS_MAIN:\n      return { ...state,\n        loading: false,\n        letters: action.letters,\n        lettersIndex: action.letterIndexs,\n        allElementsImams: action.allElements\n      };\n\n    case actionType.START_REQUEST:\n      return { ...state,\n        loading: true,\n        error: null\n      };\n\n    case actionType.SUCCESS_REQUEST:\n      return { ...state,\n        loading: false\n      };\n\n    case actionType.FAIL_REQUEST:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    case actionType.CLOSE_ASIDE:\n      return { ...state,\n        isAsideShow: false\n      };\n\n    case actionType.OPEN_ASIDE:\n      return { ...state,\n        isAsideShow: true\n      };\n\n    case actionType.PLAYLIST_STORAGE:\n      return { ...state,\n        playlist: action.items\n      };\n\n    case actionType.ADD_TO_PLAYLIST:\n      let allList = state.playlist && state.playlist.some(list => list.server === action.item.server);\n      let item = null;\n\n      if (action.item.isFavorite && !allList) {\n        item = { ...state,\n          playlist: state.playlist.concat(action.item)\n        };\n      } else {\n        item = { ...state\n        };\n      }\n\n      return item;\n\n    case actionType.REMOVE_ITEM_FROM_PLAYLIST:\n      let filterPlaylist = state.playlist.filter(list => list.server !== action.item.server);\n      return { ...state,\n        playlist: filterPlaylist\n      };\n\n    case actionType.DELETE_FAVOURITE_FROM_SURABOX:\n      return { ...state,\n        deleteFav: action.item\n      };\n\n    case actionType.EMPTY_FAVOURITE_FROM_SURABOX:\n      return { ...state,\n        deleteFav: ''\n      };\n\n    case actionType.IS_FROM_FAVOURITE_PLAYLIST:\n      return { ...state,\n        isFavPlaylist: action.booleanValue\n      };\n\n    case actionType.FAVOURITE_PLAYLIST_IMMAM_NAME:\n      return { ...state,\n        playlistImamName: action.name\n      };\n\n    case actionType.iS_FAVORITE_PAGE:\n      return { ...state,\n        isFavoritePage: action.value\n      };\n\n    case actionType.iS_RADIO_PAGE:\n      return { ...state,\n        isRadioPage: action.value\n      };\n\n    case actionType.GET_IMAM_DATA:\n      return { ...state,\n        getData: action.imamData,\n        suras: [...action.suras],\n        isRandom: true\n      };\n\n    case actionType.GET_SERVER:\n      return { ...state,\n        server: action.server\n      };\n\n    case actionType.SHOW_PLAYER:\n      return { ...state,\n        showPlayer: true\n      };\n\n    case actionType.SURA_NUMBER_NAME:\n      return { ...state,\n        suraNumber: action.suraNumber,\n        suraName: action.suraName\n      };\n\n    case actionType.CHANGE_NAME:\n      return { ...state,\n        suraName: action.name\n      };\n\n    case actionType.GET_IMAM_NAME_BEFORE_UPDATE:\n      return { ...state,\n        imamNameBeforeUpdate: action.name\n      };\n\n    case actionType.ALL_SUARS_NAMES:\n      return { ...state,\n        allSurasNames: action.surasNames\n      };\n\n    case actionType.SURA_LINK:\n      return { ...state,\n        suraLink: action.link\n      };\n\n    case actionType.SURA_LINK_RANDOM:\n      return { ...state,\n        suraNumber: action.number,\n        suraLink: `${state.server}/${action.number}.mp3`\n      };\n\n    case actionType.EMPTY_SURAS:\n      return { ...state,\n        suras: []\n      };\n\n    case actionType.GET_SURAS:\n      return { ...state,\n        suras: state.getData.suras.split(',')\n      };\n\n    case actionType.IS_THEME_IS_DARK:\n      return { ...state,\n        isThemeDark: !state.isThemeDark,\n        theme: state.isThemeDark ? 'light' : 'dark'\n      };\n\n    case actionType.THEME_STORAGE:\n      return { ...state,\n        isThemeDark: action.value,\n        theme: action.value ? 'dark' : 'light'\n      };\n\n    case actionType.CHOOSE_LANGUAGE:\n      return { ...state,\n        language: action.selectLanguage\n      };\n\n    case actionType.SITE_LANGUAGE:\n      return { ...state,\n        site_language: action.lang\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default myReducer;","map":{"version":3,"sources":["C:/Users/USER/Desktop/HTML/quran_project_2/quran/src/store/reducer/mainReducer.js"],"names":["actionType","initialState","isAsideShow","letters","lettersIndex","allElementsImams","getData","suras","server","showPlayer","suraNumber","suraName","allSurasNames","isPlaying","suraLink","loading","error","isRandom","playlist","deleteFav","isFavPlaylist","isFavoritePage","isRadioPage","imamNameBeforeUpdate","playlistImamName","isThemeDark","theme","themeStyle","all","mainColor","secondaryColor","whiteColor","grayColor","blackColor","redColor","yellowColor","mutedColor","light","bg","textNormal","boxShadow","dark","language","lang","site_language","myReducer","state","action","type","START_MAIN","SUCCESS_MAIN","letterIndexs","allElements","START_REQUEST","SUCCESS_REQUEST","FAIL_REQUEST","CLOSE_ASIDE","OPEN_ASIDE","PLAYLIST_STORAGE","items","ADD_TO_PLAYLIST","allList","some","list","item","isFavorite","concat","REMOVE_ITEM_FROM_PLAYLIST","filterPlaylist","filter","DELETE_FAVOURITE_FROM_SURABOX","EMPTY_FAVOURITE_FROM_SURABOX","IS_FROM_FAVOURITE_PLAYLIST","booleanValue","FAVOURITE_PLAYLIST_IMMAM_NAME","name","iS_FAVORITE_PAGE","value","iS_RADIO_PAGE","GET_IMAM_DATA","imamData","GET_SERVER","SHOW_PLAYER","SURA_NUMBER_NAME","CHANGE_NAME","GET_IMAM_NAME_BEFORE_UPDATE","ALL_SUARS_NAMES","surasNames","SURA_LINK","link","SURA_LINK_RANDOM","number","EMPTY_SURAS","GET_SURAS","split","IS_THEME_IS_DARK","THEME_STORAGE","CHOOSE_LANGUAGE","selectLanguage","SITE_LANGUAGE"],"mappings":"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","sourcesContent":["import * as actionType from '../action/actionTypes';\r\n\r\nconst initialState = {\r\n    isAsideShow: false,\r\n    letters: null,\r\n    lettersIndex: null,\r\n    allElementsImams: null,\r\n    getData: null,\r\n    suras: [],\r\n    server: null,\r\n    showPlayer: false,\r\n    suraNumber: null,\r\n    suraName: null,\r\n    allSurasNames: [],\r\n    isPlaying: false,\r\n    suraLink: null,\r\n    loading: false,\r\n    error: null,\r\n    isRandom: false,\r\n    playlist: [],\r\n    deleteFav: '',\r\n    isFavPlaylist: false,\r\n    isFavoritePage: false,\r\n    isRadioPage: false,\r\n    imamNameBeforeUpdate: null,\r\n    playlistImamName: null,\r\n    isThemeDark: false,\r\n    theme: 'light',\r\n    themeStyle: {\r\n        all: {\r\n            mainColor: '#39c2c9',\r\n            secondaryColor: '#fa7e29',\r\n            whiteColor: '#FFF',\r\n            grayColor: '#636a6f',\r\n            blackColor: '#1d1f21',\r\n            redColor: '#dc3545',\r\n            yellowColor: '#f5b44b',\r\n            mutedColor: '#6c757d'\r\n        },\r\n        light: {\r\n            bg: '#ebedee',\r\n            secondaryColor: '#fff',\r\n            textNormal: '#1d1f21',\r\n            boxShadow: '0 2px 8px 0 hsl(0deg 0% 64% / 19%)'\r\n        },\r\n        dark: {\r\n            bg: '#282c35',\r\n            secondaryColor: '#363c48',\r\n            textNormal: '#fff',\r\n            boxShadow: '0 2px 15px 0 rgb(26 26 27 / 64%)'\r\n        }\r\n    },\r\n    language: {lang: 'en', language: '_english.json'},\r\n    site_language: null\r\n}\r\n\r\nconst myReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionType.START_MAIN:\r\n            return {...state, loading: true, letters: null, lettersIndex: null, allElementsImams: null, error: null, server: null, suras: [], isRandom: false};\r\n        case actionType.SUCCESS_MAIN:\r\n            return {...state, loading: false, letters: action.letters, lettersIndex: action.letterIndexs, allElementsImams: action.allElements};\r\n\r\n        case actionType.START_REQUEST:\r\n            return {...state, loading: true, error: null};\r\n        case actionType.SUCCESS_REQUEST:\r\n            return {...state, loading: false};\r\n        case actionType.FAIL_REQUEST:\r\n            return {...state, loading: false, error: action.error};\r\n        \r\n        case actionType.CLOSE_ASIDE:\r\n            return {...state, isAsideShow: false};\r\n        case actionType.OPEN_ASIDE:\r\n            return {...state, isAsideShow: true};\r\n\r\n        case actionType.PLAYLIST_STORAGE:\r\n            return {...state, playlist: action.items}\r\n\r\n        case actionType.ADD_TO_PLAYLIST:\r\n            let allList = state.playlist && state.playlist.some(list => list.server === action.item.server);\r\n            let item = null;\r\n            if(action.item.isFavorite && !allList) {\r\n                item = {...state, playlist: state.playlist.concat(action.item)};\r\n            } else {\r\n                item = {...state};\r\n            }\r\n            return item;\r\n        case actionType.REMOVE_ITEM_FROM_PLAYLIST:\r\n            let filterPlaylist = state.playlist.filter(list => list.server !== action.item.server);\r\n            return {...state, playlist: filterPlaylist}\r\n        case actionType.DELETE_FAVOURITE_FROM_SURABOX:\r\n            return {...state, deleteFav: action.item}\r\n        case actionType.EMPTY_FAVOURITE_FROM_SURABOX:\r\n            return {...state, deleteFav: ''}\r\n        case actionType.IS_FROM_FAVOURITE_PLAYLIST:\r\n            return {...state, isFavPlaylist: action.booleanValue}\r\n        case actionType.FAVOURITE_PLAYLIST_IMMAM_NAME:\r\n            return {...state, playlistImamName: action.name}\r\n        case actionType.iS_FAVORITE_PAGE:\r\n            return {...state, isFavoritePage: action.value}\r\n        case actionType.iS_RADIO_PAGE:\r\n            return {...state, isRadioPage: action.value}\r\n\r\n        case actionType.GET_IMAM_DATA:\r\n            return {...state, getData: action.imamData, suras: [...action.suras], isRandom: true};\r\n        case actionType.GET_SERVER:\r\n            return {...state, server: action.server};\r\n        case actionType.SHOW_PLAYER:\r\n            return {...state, showPlayer: true};\r\n        case actionType.SURA_NUMBER_NAME:\r\n            return {...state, suraNumber: action.suraNumber, suraName: action.suraName};\r\n        case actionType.CHANGE_NAME:\r\n            return {...state, suraName: action.name};\r\n        case actionType.GET_IMAM_NAME_BEFORE_UPDATE:\r\n            return {...state, imamNameBeforeUpdate: action.name};\r\n        case actionType.ALL_SUARS_NAMES:\r\n            return {...state, allSurasNames: action.surasNames};\r\n        case actionType.SURA_LINK:\r\n            return {...state, suraLink: action.link};\r\n        case actionType.SURA_LINK_RANDOM:\r\n            return {...state, suraNumber: action.number, suraLink: `${state.server}/${action.number}.mp3`};\r\n        case actionType.EMPTY_SURAS:\r\n            return {...state, suras: []};\r\n        case actionType.GET_SURAS:\r\n            return {...state, suras: state.getData.suras.split(',')}\r\n        case actionType.IS_THEME_IS_DARK:\r\n            return {...state, isThemeDark: !state.isThemeDark, theme: state.isThemeDark ? 'light' : 'dark'}\r\n        case actionType.THEME_STORAGE:\r\n            return {...state, isThemeDark: action.value, theme: action.value ? 'dark' : 'light'}\r\n        \r\n            case actionType.CHOOSE_LANGUAGE:\r\n            return {...state, language: action.selectLanguage}\r\n            case actionType.SITE_LANGUAGE:\r\n            return {...state, site_language: action.lang}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}