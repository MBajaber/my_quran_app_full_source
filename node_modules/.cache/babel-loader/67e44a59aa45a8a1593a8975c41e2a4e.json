{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\HTML\\\\quran_project_2\\\\quran\\\\src\\\\App\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { lazy, Suspense, useEffect, useState } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Route, Switch } from 'react-router-dom';\nimport Layout from '../components/layout/layout';\nimport Loading from '../components/UI/Loader/loader';\nimport { connect } from 'react-redux';\nimport * as actions from '../store/action/getData';\nimport axios from '../axiosBase/createAxios';\nimport withErrorHandler from '../hoc/withErrorHandler/withErrorHandler';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AsyncMain = /*#__PURE__*/lazy(_c = () => import('../containers/Home'));\n_c2 = AsyncMain;\nconst AsyncImamPage = /*#__PURE__*/lazy(_c3 = () => import('../components/imamPage/ImamPage'));\n_c4 = AsyncImamPage;\nconst AsyncFavorite = /*#__PURE__*/lazy(_c5 = () => import('../containers/Favorite/index'));\n_c6 = AsyncFavorite;\nconst AsyncRadios = /*#__PURE__*/lazy(_c7 = () => import('../containers/Radios/index'));\n_c8 = AsyncRadios;\n\nconst App = props => {\n  _s();\n\n  // const [playlistStorage, setPlaylistStorage] = useState(JSON.parse(localStorage.getItem('playlist')) || []);\n  // const [themeStorageValue, setThemeStorageValue] = useState(JSON.parse(localStorage.getItem('isThemeIsDark')) || false);\n  // const [storageLangauage, setStorageLangauage] = useState(JSON.parse(localStorage.getItem('language')) || 'en');\n  const playlistStorage = useState(JSON.parse(localStorage.getItem('playlist')) || [])[0];\n  const themeStorageValue = useState(JSON.parse(localStorage.getItem('isThemeIsDark')) || false)[0];\n  const storageLangauage = useState(JSON.parse(localStorage.getItem('language')) || 'en')[0];\n  useEffect(() => {\n    axios.get(`translations?languages=${props.language.lang}`).then(res => {\n      props.siteLanguage(res.data[props.language.lang]);\n    }).catch(error => error);\n  }, [props.language.lang]);\n  useEffect(() => {\n    if (playlistStorage) {\n      props.playlistStorage(playlistStorage);\n    }\n\n    if (themeStorageValue) {\n      props.toggleTheme(themeStorageValue);\n    }\n\n    props.changeLanguage(storageLangauage);\n    document.getElementsByTagName('html')[0].setAttribute('lang', storageLangauage);\n\n    if (['ar', 'ur', 'ug', 'fa'].includes(storageLangauage)) {\n      document.getElementsByTagName('html')[0].setAttribute('dir', 'rtl');\n    } else {\n      document.getElementsByTagName('html')[0].setAttribute('dir', 'ltr');\n    }\n  }, [playlistStorage, themeStorageValue, storageLangauage]);\n  useEffect(() => {\n    localStorage.setItem('playlist', JSON.stringify(props.playlist));\n  }, [props.playlist]);\n\n  let routes = /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      render: props => /*#__PURE__*/_jsxDEV(AsyncMain, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 40\n      }, this),\n      exact: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/reciter/:immam_Name\",\n      render: props => /*#__PURE__*/_jsxDEV(AsyncImamPage, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 59\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/favorite\",\n      render: props => /*#__PURE__*/_jsxDEV(AsyncFavorite, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 49\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/radios\",\n      render: props => /*#__PURE__*/_jsxDEV(AsyncRadios, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 46\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n\n  return props.siteLanguage ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this),\n        children: routes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this) : null;\n};\n\n_s(App, \"j7oIdbdbTw7F1GqOzsFnkby13fw=\");\n\n_c9 = App;\n\nconst mapStateToProps = state => ({\n  playlist: state.playlist,\n  isThemeDark: state.isThemeDark,\n  language: state.language,\n  siteLanguage: state.siteLanguage\n});\n\nconst mapDispatchToProps = dispatch => ({\n  playlistStorage: items => dispatch(actions.playlistStorage(items)),\n  toggleTheme: items => dispatch(actions.toggleTheme(items)),\n  siteLanguage: lang => dispatch(actions.siteLanguage(lang)),\n  changeLanguage: lang => dispatch(actions.changeLanguage(lang))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(App, axios));\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"AsyncMain$lazy\");\n$RefreshReg$(_c2, \"AsyncMain\");\n$RefreshReg$(_c3, \"AsyncImamPage$lazy\");\n$RefreshReg$(_c4, \"AsyncImamPage\");\n$RefreshReg$(_c5, \"AsyncFavorite$lazy\");\n$RefreshReg$(_c6, \"AsyncFavorite\");\n$RefreshReg$(_c7, \"AsyncRadios$lazy\");\n$RefreshReg$(_c8, \"AsyncRadios\");\n$RefreshReg$(_c9, \"App\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/HTML/quran_project_2/quran/src/App/App.js"],"names":["React","lazy","Suspense","useEffect","useState","Route","Switch","Layout","Loading","connect","actions","axios","withErrorHandler","AsyncMain","AsyncImamPage","AsyncFavorite","AsyncRadios","App","props","playlistStorage","JSON","parse","localStorage","getItem","themeStorageValue","storageLangauage","get","language","lang","then","res","siteLanguage","data","catch","error","toggleTheme","changeLanguage","document","getElementsByTagName","setAttribute","includes","setItem","stringify","playlist","routes","mapStateToProps","state","isThemeDark","mapDispatchToProps","dispatch","items"],"mappings":"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","sourcesContent":["import React, { lazy, Suspense, useEffect, useState } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Route, Switch } from 'react-router-dom';\nimport Layout from '../components/layout/layout';\nimport Loading from '../components/UI/Loader/loader';\nimport {connect} from 'react-redux';\nimport * as actions from '../store/action/getData';\nimport axios from '../axiosBase/createAxios';\nimport withErrorHandler from '../hoc/withErrorHandler/withErrorHandler';\n\nconst AsyncMain = lazy(() => import('../containers/Home'));\nconst AsyncImamPage = lazy(() => import('../components/imamPage/ImamPage'));\nconst AsyncFavorite = lazy(() => import('../containers/Favorite/index'));\nconst AsyncRadios = lazy(() => import('../containers/Radios/index'));\n\nconst App = props => {\n\n  // const [playlistStorage, setPlaylistStorage] = useState(JSON.parse(localStorage.getItem('playlist')) || []);\n  // const [themeStorageValue, setThemeStorageValue] = useState(JSON.parse(localStorage.getItem('isThemeIsDark')) || false);\n  // const [storageLangauage, setStorageLangauage] = useState(JSON.parse(localStorage.getItem('language')) || 'en');\n  \n  const playlistStorage = useState(JSON.parse(localStorage.getItem('playlist')) || [])[0];\n  const themeStorageValue = useState(JSON.parse(localStorage.getItem('isThemeIsDark')) || false)[0];\n  const storageLangauage = useState(JSON.parse(localStorage.getItem('language')) || 'en')[0];\n\n  useEffect(() => {\n    axios.get(`translations?languages=${props.language.lang}`)\n    .then(res => {\n      props.siteLanguage(res.data[props.language.lang]);\n    })\n    .catch(error => error);\n  }, [props.language.lang]);\n  \n  useEffect(() => {\n    if(playlistStorage) {\n      props.playlistStorage(playlistStorage);\n    }\n    if(themeStorageValue) {\n      props.toggleTheme(themeStorageValue);\n    }\n    \n    props.changeLanguage(storageLangauage);\n    \n    document.getElementsByTagName('html')[0].setAttribute('lang', storageLangauage);\n    \n    if(['ar', 'ur', 'ug', 'fa'].includes(storageLangauage)) {\n      document.getElementsByTagName('html')[0].setAttribute('dir', 'rtl');\n    } else {\n      document.getElementsByTagName('html')[0].setAttribute('dir', 'ltr');\n    }\n  }, [playlistStorage, themeStorageValue, storageLangauage]);\n\n  useEffect(() => {\n    localStorage.setItem('playlist', JSON.stringify(props.playlist));\n  }, [props.playlist]);\n\n  let routes = (\n    <Switch>\n      <Route path='/' render={props => <AsyncMain {...props} />} exact />\n      <Route path='/reciter/:immam_Name' render={props => <AsyncImamPage {...props} />} />\n      <Route path='/favorite'  render={props => <AsyncFavorite {...props} />} />\n      <Route path='/radios' render={props => <AsyncRadios {...props} />} />\n    </Switch>\n  );\n\n  return props.siteLanguage ? (\n    <div className=\"App\">\n      <Layout>\n        <Suspense fallback={<Loading />}>{routes}</Suspense>\n      </Layout>\n    </div>\n  ) : null;\n};\n\nconst mapStateToProps = state => ({\n  playlist: state.playlist,\n  isThemeDark: state.isThemeDark,\n  language: state.language,\n  siteLanguage: state.siteLanguage\n});\n\nconst mapDispatchToProps = dispatch => ({\n  playlistStorage: (items) => dispatch(actions.playlistStorage(items)),\n  toggleTheme: (items) => dispatch(actions.toggleTheme(items)),\n  siteLanguage: (lang) => dispatch(actions.siteLanguage(lang)),\n  changeLanguage: (lang) => dispatch(actions.changeLanguage(lang))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(App, axios));"]},"metadata":{},"sourceType":"module"}