{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\HTML\\\\quran_project_2\\\\quran\\\\src\\\\components\\\\imamPage\\\\ImamPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer, useState } from 'react';\nimport { ImamPageStyled } from './imamPageStyled';\nimport Form from 'react-bootstrap/Form';\nimport SurahBox from '../surahBox/surahBox';\nimport axios from '../../axiosBase/createAxios';\nimport ErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport { connect } from 'react-redux';\nimport Loader from '../UI/Loader/loader';\nimport { Redirect } from 'react-router-dom';\nimport * as favoriteActions from '../../store/action/favoriteActions';\nimport * as settingActions from '../../store/action/settingActions';\nimport * as getDataActions from '../../store/action/getDataActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  suraNumbers: [],\n  suraNames: [],\n  allSurasBoxs: []\n};\n\nconst myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'surahNumbers':\n      return { ...state,\n        suraNumbers: [...action.numbers]\n      };\n\n    case 'surahNames':\n      return { ...state,\n        suraNames: [...action.names]\n      };\n\n    case 'allSurasBoxs':\n      return { ...state,\n        allSurasBoxs: [...action.allSurasBoxes]\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst ImamPage = ({\n  startRequest,\n  language,\n  suras,\n  successRequest,\n  failRequest,\n  server,\n  getData,\n  suraLink,\n  isFromFavouritePlaylist,\n  showPlayer,\n  addToPlaylist,\n  playlist,\n  loading,\n  site_language,\n  theme,\n  themeStyle\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(myReducer, initialState);\n  const [search, setSearch] = useState('');\n  const [filterSearch, setFilterSearch] = useState();\n  useEffect(() => {\n    startRequest();\n    axios.get(`/translations?languages=${language.lang}`).then(res => {\n      dispatch({\n        type: 'surahNumbers',\n        numbers: suras\n      });\n      successRequest();\n      let arrayNames = [];\n\n      if (suras) {\n        suras.map(num => arrayNames.push(res.data[language.lang][`sura${num}`]));\n      }\n\n      dispatch({\n        type: 'surahNames',\n        names: arrayNames\n      });\n    }).catch(error => {\n      failRequest(error);\n    });\n  }, [language.lang, startRequest, successRequest, failRequest]);\n\n  const clickedHandler = index => {\n    let fixNum = index.length === 1 ? `00${index}` : index.length === 2 ? `0${index}` : index;\n    suraLink(`${server}/${fixNum}.mp3`);\n    isFromFavouritePlaylist(false);\n    showPlayer();\n  };\n\n  const addFavFun = (data, num, suraName) => {\n    let setData = { ...data,\n      number: num\n    };\n    const collectData = {\n      allDataPlaylist: data,\n      isFavorite: setData.isFavorite,\n      server: `${setData.allData.Server}/${setData.number}.mp3`,\n      number: setData.number,\n      name: setData.allData.name,\n      rewaya: setData.allData.rewaya,\n      suraName: suraName\n    };\n    addToPlaylist(collectData);\n  };\n\n  useEffect(() => {\n    let array2 = [];\n    state.allSurasBoxs.filter(sura => {\n      if (search === '') {\n        array2 = [state.allSurasBoxs];\n        setFilterSearch(array2);\n      } else if (sura.props.name.toLocaleLowerCase().includes(search.toLocaleLowerCase())) {\n        array2.push( /*#__PURE__*/_jsxDEV(SurahBox, {\n          name: sura.props.name,\n          server: sura.props.server,\n          number: sura.props.number,\n          clicked: () => clickedHandler(sura.props.number),\n          addFav: data => addFavFun(data, sura.props.number, sura.props.name),\n          isFavor: sura.props.isFavor,\n          allData: sura.props.allData,\n          copyText: sura.props.copyText\n        }, `${server}/${sura.props.name}/${sura.props.number}/${sura.props.isFavor}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this));\n      }\n\n      return array2;\n    });\n    setFilterSearch(array2);\n  }, [search]);\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  let data = /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 16\n  }, this);\n\n  let arr = [];\n\n  const suraLoop = () => {\n    let sing = null;\n\n    if (server && state.suraNames && state.suraNumbers && state.suraNumbers.length > 0 && state.suraNumbers) {\n      if (playlist && playlist.length > 0) {\n        for (let i = 0; i < state.suraNumbers.length; i++) {\n          let myNumber = null;\n          let successFav = false;\n          myNumber = state.suraNumbers[i].length === 1 ? `00${state.suraNumbers[i]}` : state.suraNumbers[i].length === 2 ? `0${state.suraNumbers[i]}` : state.suraNumbers[i];\n\n          for (let k = 0; k < playlist.length; k++) {\n            sing = getData.name === playlist[k].name && myNumber === playlist[k].number && `${getData.Server}/${myNumber}.mp3` === playlist[k].server && state.suraNames[i] === playlist[k].suraName;\n\n            if (sing) {\n              successFav = sing;\n            }\n          }\n\n          arr.push( /*#__PURE__*/_jsxDEV(SurahBox, {\n            name: state.suraNames[i],\n            server: getData.Server,\n            number: myNumber,\n            clicked: () => clickedHandler(state.suraNumbers[i]),\n            addFav: data => addFavFun(data, myNumber, state.suraNames[i]),\n            isFavor: successFav,\n            allData: getData,\n            copyText: `${server}/${myNumber}.mp3`\n          }, `${server}/${state.suraNames[i]}/${myNumber}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this));\n        }\n      } else {\n        for (let i = 0; i < state.suraNumbers.length; i++) {\n          let myNumbers = null;\n          let successFavs = false;\n          myNumbers = state.suraNumbers[i].length === 1 ? `00${state.suraNumbers[i]}` : state.suraNumbers[i].length === 2 ? `0${state.suraNumbers[i]}` : state.suraNumbers[i];\n          arr.push( /*#__PURE__*/_jsxDEV(SurahBox, {\n            name: state.suraNames[i],\n            server: getData.Server,\n            number: myNumbers,\n            clicked: () => clickedHandler(state.suraNumbers[i]),\n            addFav: data => addFavFun(data, myNumbers, state.suraNames[i]),\n            isFavor: successFavs,\n            allData: getData,\n            copyText: `${server}/${myNumbers}.mp3`\n          }, `${server}/${state.suraNames[i]}/${myNumbers}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this));\n        }\n      }\n    }\n\n    setFilterSearch(arr);\n    dispatch({\n      type: 'allSurasBoxs',\n      allSurasBoxes: arr\n    });\n  };\n\n  useEffect(() => {\n    server && state.suraNames && state.suraNumbers && state.suraNumbers.length > 0 && state.suraNumbers && suraLoop();\n  }, [server, state.suraNames, state.suraNumbers, state.suraNumbers]);\n\n  if (!loading && site_language) {\n    data = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [getData === null ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 37\n      }, this) : null, /*#__PURE__*/_jsxDEV(ImamPageStyled, {\n        theme: theme,\n        themeStyle: themeStyle,\n        site_lang: language.lang,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"top-search-rewaya mb-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"top-search mb-2 mb-md-0\",\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: `${language.lang === 'ar' ? '...' + site_language.search + ' ' + site_language.surah_name : site_language.search + ' ' + site_language.surah_name + '...'}`,\n                className: \"rounded-pill search-filed\",\n                onChange: e => setSearch(e.target.value),\n                dir: \"auto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"all-surah-name\",\n          children: filterSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  return data;\n};\n\n_s(ImamPage, \"wRtC4bm4z2M6FO0mL04Eiay8w+4=\");\n\n_c = ImamPage;\n\nconst mapStateToprops = state => ({\n  getData: state.getData.getData,\n  suras: state.getData.suras,\n  loading: state.getData.loading,\n  server: state.getData.server,\n  playlist: state.fav.playlist,\n  theme: state.theme.theme,\n  themeStyle: state.theme.themeStyle,\n  language: state.lang.language,\n  site_language: state.lang.site_language\n});\n\nconst mapDispatchToprops = dispatch => ({\n  showPlayer: () => dispatch(settingActions.showPlayer()),\n  suraLink: link => dispatch(getDataActions.suraLink(link)),\n  startRequest: () => dispatch(getDataActions.startRequest()),\n  successRequest: () => dispatch(getDataActions.successRequest()),\n  failRequest: error => dispatch(getDataActions.failRequest(error)),\n  addToPlaylist: item => dispatch(favoriteActions.addToPlayList(item)),\n  isFromFavouritePlaylist: bool => dispatch(favoriteActions.isFromFavouritePlaylist(bool))\n});\n\nexport default connect(mapStateToprops, mapDispatchToprops)(ErrorHandler(ImamPage, axios));\n\nvar _c;\n\n$RefreshReg$(_c, \"ImamPage\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/HTML/quran_project_2/quran/src/components/imamPage/ImamPage.js"],"names":["React","useEffect","useReducer","useState","ImamPageStyled","Form","SurahBox","axios","ErrorHandler","connect","Loader","Redirect","favoriteActions","settingActions","getDataActions","initialState","suraNumbers","suraNames","allSurasBoxs","myReducer","state","action","type","numbers","names","allSurasBoxes","ImamPage","startRequest","language","suras","successRequest","failRequest","server","getData","suraLink","isFromFavouritePlaylist","showPlayer","addToPlaylist","playlist","loading","site_language","theme","themeStyle","dispatch","search","setSearch","filterSearch","setFilterSearch","get","lang","then","res","arrayNames","map","num","push","data","catch","error","clickedHandler","index","fixNum","length","addFavFun","suraName","setData","number","collectData","allDataPlaylist","isFavorite","allData","Server","name","rewaya","array2","filter","sura","props","toLocaleLowerCase","includes","isFavor","copyText","window","scrollTo","arr","suraLoop","sing","i","myNumber","successFav","k","myNumbers","successFavs","surah_name","e","target","value","mapStateToprops","fav","mapDispatchToprops","link","item","addToPlayList","bool"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAsD,OAAtD;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,YAAP,MAAyB,6CAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,QAAT,QAA0B,kBAA1B;AACA,OAAO,KAAKC,eAAZ,MAAiC,oCAAjC;AACA,OAAO,KAAKC,cAAZ,MAAgC,mCAAhC;AACA,OAAO,KAAKC,cAAZ,MAAgC,mCAAhC;;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,EADI;AAEjBC,EAAAA,SAAS,EAAE,EAFM;AAGjBC,EAAAA,YAAY,EAAE;AAHG,CAArB;;AAMA,MAAMC,SAAS,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAChD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,cAAL;AACI,aAAO,EAAE,GAAGF,KAAL;AAAYJ,QAAAA,WAAW,EAAE,CAAC,GAAGK,MAAM,CAACE,OAAX;AAAzB,OAAP;;AACJ,SAAK,YAAL;AACI,aAAO,EAAE,GAAGH,KAAL;AAAYH,QAAAA,SAAS,EAAE,CAAC,GAAGI,MAAM,CAACG,KAAX;AAAvB,OAAP;;AACJ,SAAK,cAAL;AACI,aAAO,EAAE,GAAGJ,KAAL;AAAYF,QAAAA,YAAY,EAAE,CAAC,GAAGG,MAAM,CAACI,aAAX;AAA1B,OAAP;;AACJ;AACI,aAAOL,KAAP;AARR;AAUH,CAXD;;AAaA,MAAMM,QAAQ,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,QAAhB;AAA0BC,EAAAA,KAA1B;AAAiCC,EAAAA,cAAjC;AAAiDC,EAAAA,WAAjD;AAA8DC,EAAAA,MAA9D;AAAsEC,EAAAA,OAAtE;AAA+EC,EAAAA,QAA/E;AAAyFC,EAAAA,uBAAzF;AAAkHC,EAAAA,UAAlH;AAA8HC,EAAAA,aAA9H;AAA6IC,EAAAA,QAA7I;AAAuJC,EAAAA,OAAvJ;AAAgKC,EAAAA,aAAhK;AAA+KC,EAAAA,KAA/K;AAAsLC,EAAAA;AAAtL,CAAD,KAAuM;AAAA;;AAEpN,QAAM,CAACtB,KAAD,EAAQuB,QAAR,IAAoBzC,UAAU,CAACiB,SAAD,EAAYJ,YAAZ,CAApC;AACA,QAAM,CAAC6B,MAAD,EAASC,SAAT,IAAsB1C,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAC2C,YAAD,EAAeC,eAAf,IAAkC5C,QAAQ,EAAhD;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ0B,IAAAA,YAAY;AACZpB,IAAAA,KAAK,CAACyC,GAAN,CAAW,2BAA0BpB,QAAQ,CAACqB,IAAK,EAAnD,EACCC,IADD,CACMC,GAAG,IAAI;AACTR,MAAAA,QAAQ,CAAC;AAACrB,QAAAA,IAAI,EAAE,cAAP;AAAuBC,QAAAA,OAAO,EAAEM;AAAhC,OAAD,CAAR;AACAC,MAAAA,cAAc;AACd,UAAIsB,UAAU,GAAG,EAAjB;;AACA,UAAGvB,KAAH,EAAU;AACNA,QAAAA,KAAK,CAACwB,GAAN,CAAUC,GAAG,IAAIF,UAAU,CAACG,IAAX,CAAgBJ,GAAG,CAACK,IAAJ,CAAS5B,QAAQ,CAACqB,IAAlB,EAAyB,OAAMK,GAAI,EAAnC,CAAhB,CAAjB;AACH;;AACDX,MAAAA,QAAQ,CAAC;AAACrB,QAAAA,IAAI,EAAE,YAAP;AAAqBE,QAAAA,KAAK,EAAE4B;AAA5B,OAAD,CAAR;AACH,KATD,EAUCK,KAVD,CAUOC,KAAK,IAAI;AACZ3B,MAAAA,WAAW,CAAC2B,KAAD,CAAX;AACH,KAZD;AAaH,GAfQ,EAeN,CAAC9B,QAAQ,CAACqB,IAAV,EAAgBtB,YAAhB,EAA8BG,cAA9B,EAA8CC,WAA9C,CAfM,CAAT;;AAiBA,QAAM4B,cAAc,GAAIC,KAAD,IAAW;AAC9B,QAAIC,MAAM,GAAGD,KAAK,CAACE,MAAN,KAAiB,CAAjB,GAAsB,KAAIF,KAAM,EAAhC,GAAoCA,KAAK,CAACE,MAAN,KAAiB,CAAjB,GAAsB,IAAGF,KAAM,EAA/B,GAAmCA,KAApF;AACA1B,IAAAA,QAAQ,CAAE,GAAEF,MAAO,IAAG6B,MAAO,MAArB,CAAR;AACA1B,IAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACAC,IAAAA,UAAU;AACb,GALD;;AAOA,QAAM2B,SAAS,GAAG,CAACP,IAAD,EAAOF,GAAP,EAAYU,QAAZ,KAAyB;AACvC,QAAIC,OAAO,GAAG,EAAC,GAAGT,IAAJ;AAAUU,MAAAA,MAAM,EAAEZ;AAAlB,KAAd;AACA,UAAMa,WAAW,GAAG;AAACC,MAAAA,eAAe,EAAEZ,IAAlB;AAAwBa,MAAAA,UAAU,EAAEJ,OAAO,CAACI,UAA5C;AAAwDrC,MAAAA,MAAM,EAAG,GAAEiC,OAAO,CAACK,OAAR,CAAgBC,MAAO,IAAGN,OAAO,CAACC,MAAO,MAA5G;AAAmHA,MAAAA,MAAM,EAAED,OAAO,CAACC,MAAnI;AAA2IM,MAAAA,IAAI,EAAEP,OAAO,CAACK,OAAR,CAAgBE,IAAjK;AAAuKC,MAAAA,MAAM,EAAER,OAAO,CAACK,OAAR,CAAgBG,MAA/L;AAAuMT,MAAAA,QAAQ,EAAEA;AAAjN,KAApB;AACA3B,IAAAA,aAAa,CAAC8B,WAAD,CAAb;AACH,GAJD;;AAMAlE,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIyE,MAAM,GAAG,EAAb;AACAtD,IAAAA,KAAK,CAACF,YAAN,CAAmByD,MAAnB,CAA0BC,IAAI,IAAI;AAC9B,UAAGhC,MAAM,KAAK,EAAd,EAAkB;AACd8B,QAAAA,MAAM,GAAG,CAACtD,KAAK,CAACF,YAAP,CAAT;AACA6B,QAAAA,eAAe,CAAC2B,MAAD,CAAf;AACH,OAHD,MAGO,IAAGE,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAgBM,iBAAhB,GAAoCC,QAApC,CAA6CnC,MAAM,CAACkC,iBAAP,EAA7C,CAAH,EAA6E;AAChFJ,QAAAA,MAAM,CAACnB,IAAP,eACI,QAAC,QAAD;AAEA,UAAA,IAAI,EAAEqB,IAAI,CAACC,KAAL,CAAWL,IAFjB;AAGA,UAAA,MAAM,EAAEI,IAAI,CAACC,KAAL,CAAW7C,MAHnB;AAIA,UAAA,MAAM,EAAE4C,IAAI,CAACC,KAAL,CAAWX,MAJnB;AAKA,UAAA,OAAO,EAAE,MAAMP,cAAc,CAACiB,IAAI,CAACC,KAAL,CAAWX,MAAZ,CAL7B;AAMA,UAAA,MAAM,EAAGV,IAAD,IAAUO,SAAS,CAACP,IAAD,EAAOoB,IAAI,CAACC,KAAL,CAAWX,MAAlB,EAA0BU,IAAI,CAACC,KAAL,CAAWL,IAArC,CAN3B;AAOA,UAAA,OAAO,EAAEI,IAAI,CAACC,KAAL,CAAWG,OAPpB;AAQA,UAAA,OAAO,EAAEJ,IAAI,CAACC,KAAL,CAAWP,OARpB;AASA,UAAA,QAAQ,EAAEM,IAAI,CAACC,KAAL,CAAWI;AATrB,WACM,GAAEjD,MAAO,IAAG4C,IAAI,CAACC,KAAL,CAAWL,IAAK,IAAGI,IAAI,CAACC,KAAL,CAAWX,MAAO,IAAGU,IAAI,CAACC,KAAL,CAAWG,OAAQ,EAD7E;AAAA;AAAA;AAAA;AAAA,gBADJ;AAYH;;AACD,aAAON,MAAP;AACH,KAnBD;AAoBA3B,IAAAA,eAAe,CAAC2B,MAAD,CAAf;AACH,GAvBQ,EAuBN,CAAC9B,MAAD,CAvBM,CAAT;AAyBA3C,EAAAA,SAAS,CAAC,MAAM;AACZiF,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAI3B,IAAI,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAAX;;AAEA,MAAI4B,GAAG,GAAG,EAAV;;AACA,QAAMC,QAAQ,GAAG,MAAM;AACnB,QAAIC,IAAI,GAAE,IAAV;;AACA,QAAGtD,MAAM,IAAIZ,KAAK,CAACH,SAAhB,IAA6BG,KAAK,CAACJ,WAAnC,IAAkDI,KAAK,CAACJ,WAAN,CAAkB8C,MAAlB,GAA2B,CAA7E,IAAkF1C,KAAK,CAACJ,WAA3F,EAAwG;AACpG,UAAGsB,QAAQ,IAAIA,QAAQ,CAACwB,MAAT,GAAkB,CAAjC,EAAoC;AAChC,aAAI,IAAIyB,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAGnE,KAAK,CAACJ,WAAN,CAAkB8C,MAAnC,EAA2CyB,CAAC,EAA5C,EAAgD;AAC5C,cAAIC,QAAQ,GAAE,IAAd;AACA,cAAIC,UAAU,GAAG,KAAjB;AACAD,UAAAA,QAAQ,GAAGpE,KAAK,CAACJ,WAAN,CAAkBuE,CAAlB,EAAqBzB,MAArB,KAAgC,CAAhC,GAAqC,KAAI1C,KAAK,CAACJ,WAAN,CAAkBuE,CAAlB,CAAqB,EAA9D,GAAkEnE,KAAK,CAACJ,WAAN,CAAkBuE,CAAlB,EAAqBzB,MAArB,KAAgC,CAAhC,GAAqC,IAAG1C,KAAK,CAACJ,WAAN,CAAkBuE,CAAlB,CAAqB,EAA7D,GAAiEnE,KAAK,CAACJ,WAAN,CAAkBuE,CAAlB,CAA9I;;AACA,eAAK,IAAIG,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGpD,QAAQ,CAACwB,MAA3B,EAAmC4B,CAAC,EAApC,EAAwC;AACpCJ,YAAAA,IAAI,GAAErD,OAAO,CAACuC,IAAR,KAAiBlC,QAAQ,CAACoD,CAAD,CAAR,CAAYlB,IAA7B,IAAqCgB,QAAQ,KAAKlD,QAAQ,CAACoD,CAAD,CAAR,CAAYxB,MAA9D,IAAyE,GAAEjC,OAAO,CAACsC,MAAO,IAAGiB,QAAS,MAA9B,KAAwClD,QAAQ,CAACoD,CAAD,CAAR,CAAY1D,MAA5H,IAAsIZ,KAAK,CAACH,SAAN,CAAgBsE,CAAhB,MAAuBjD,QAAQ,CAACoD,CAAD,CAAR,CAAY1B,QAA/K;;AACA,gBAAGsB,IAAH,EAAQ;AACJG,cAAAA,UAAU,GAAGH,IAAb;AACH;AACJ;;AAEDF,UAAAA,GAAG,CAAC7B,IAAJ,eACI,QAAC,QAAD;AAEI,YAAA,IAAI,EAAEnC,KAAK,CAACH,SAAN,CAAgBsE,CAAhB,CAFV;AAGI,YAAA,MAAM,EAAEtD,OAAO,CAACsC,MAHpB;AAII,YAAA,MAAM,EAAEiB,QAJZ;AAKI,YAAA,OAAO,EAAE,MAAM7B,cAAc,CAACvC,KAAK,CAACJ,WAAN,CAAkBuE,CAAlB,CAAD,CALjC;AAMI,YAAA,MAAM,EAAG/B,IAAD,IAAUO,SAAS,CAACP,IAAD,EAAOgC,QAAP,EAAiBpE,KAAK,CAACH,SAAN,CAAgBsE,CAAhB,CAAjB,CAN/B;AAOI,YAAA,OAAO,EAAEE,UAPb;AAQI,YAAA,OAAO,EAAExD,OARb;AASI,YAAA,QAAQ,EAAG,GAAED,MAAO,IAAGwD,QAAS;AATpC,aACU,GAAExD,MAAO,IAAGZ,KAAK,CAACH,SAAN,CAAgBsE,CAAhB,CAAmB,IAAGC,QAAS,EADrD;AAAA;AAAA;AAAA;AAAA,kBADJ;AAaH;AACJ,OA1BD,MA0BO;AACH,aAAI,IAAID,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAGnE,KAAK,CAACJ,WAAN,CAAkB8C,MAAnC,EAA2CyB,CAAC,EAA5C,EAA+C;AAC3C,cAAII,SAAS,GAAE,IAAf;AACA,cAAIC,WAAW,GAAG,KAAlB;AACAD,UAAAA,SAAS,GAAGvE,KAAK,CAACJ,WAAN,CAAkBuE,CAAlB,EAAqBzB,MAArB,KAAgC,CAAhC,GAAqC,KAAI1C,KAAK,CAACJ,WAAN,CAAkBuE,CAAlB,CAAqB,EAA9D,GAAkEnE,KAAK,CAACJ,WAAN,CAAkBuE,CAAlB,EAAqBzB,MAArB,KAAgC,CAAhC,GAAqC,IAAG1C,KAAK,CAACJ,WAAN,CAAkBuE,CAAlB,CAAqB,EAA7D,GAAiEnE,KAAK,CAACJ,WAAN,CAAkBuE,CAAlB,CAA/I;AACAH,UAAAA,GAAG,CAAC7B,IAAJ,eACI,QAAC,QAAD;AAEI,YAAA,IAAI,EAAEnC,KAAK,CAACH,SAAN,CAAgBsE,CAAhB,CAFV;AAGI,YAAA,MAAM,EAAEtD,OAAO,CAACsC,MAHpB;AAII,YAAA,MAAM,EAAEoB,SAJZ;AAKI,YAAA,OAAO,EAAE,MAAMhC,cAAc,CAACvC,KAAK,CAACJ,WAAN,CAAkBuE,CAAlB,CAAD,CALjC;AAMI,YAAA,MAAM,EAAG/B,IAAD,IAAUO,SAAS,CAACP,IAAD,EAAOmC,SAAP,EAAkBvE,KAAK,CAACH,SAAN,CAAgBsE,CAAhB,CAAlB,CAN/B;AAOI,YAAA,OAAO,EAAEK,WAPb;AAQI,YAAA,OAAO,EAAE3D,OARb;AASI,YAAA,QAAQ,EAAG,GAAED,MAAO,IAAG2D,SAAU;AATrC,aACU,GAAE3D,MAAO,IAAGZ,KAAK,CAACH,SAAN,CAAgBsE,CAAhB,CAAmB,IAAGI,SAAU,EADtD;AAAA;AAAA;AAAA;AAAA,kBADJ;AAaH;AACJ;AACJ;;AACD5C,IAAAA,eAAe,CAACqC,GAAD,CAAf;AACAzC,IAAAA,QAAQ,CAAC;AAACrB,MAAAA,IAAI,EAAE,cAAP;AAAuBG,MAAAA,aAAa,EAAE2D;AAAtC,KAAD,CAAR;AACH,GApDD;;AAsDAnF,EAAAA,SAAS,CAAC,MAAM;AACZ+B,IAAAA,MAAM,IAAIZ,KAAK,CAACH,SAAhB,IAA6BG,KAAK,CAACJ,WAAnC,IAAkDI,KAAK,CAACJ,WAAN,CAAkB8C,MAAlB,GAA2B,CAA7E,IAAkF1C,KAAK,CAACJ,WAAxF,IAAuGqE,QAAQ,EAA/G;AACH,GAFQ,EAEN,CAACrD,MAAD,EAASZ,KAAK,CAACH,SAAf,EAA0BG,KAAK,CAACJ,WAAhC,EAA6CI,KAAK,CAACJ,WAAnD,CAFM,CAAT;;AAIA,MAAG,CAACuB,OAAD,IAAYC,aAAf,EAA8B;AAC1BgB,IAAAA,IAAI,gBACA;AAAA,iBACKvB,OAAO,KAAK,IAAZ,gBAAmB,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAnB,GAAyC,IAD9C,eAEI,QAAC,cAAD;AAAgB,QAAA,KAAK,EAAEQ,KAAvB;AAA8B,QAAA,UAAU,EAAEC,UAA1C;AAAsD,QAAA,SAAS,EAAEd,QAAQ,CAACqB,IAA1E;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA,mCACI,QAAC,IAAD;AAAA,qCACI,QAAC,IAAD,CAAM,OAAN;AAAc,gBAAA,IAAI,EAAC,MAAnB;AAA0B,gBAAA,WAAW,EAAG,GAAErB,QAAQ,CAACqB,IAAT,KAAkB,IAAlB,GAAyB,QAAQT,aAAa,CAACI,MAAtB,GAA+B,GAA/B,GAAqCJ,aAAa,CAACqD,UAA5E,GAAyFrD,aAAa,CAACI,MAAd,GAAuB,GAAvB,GAA6BJ,aAAa,CAACqD,UAA3C,GAAwD,KAAM,EAAjM;AAAoM,gBAAA,SAAS,EAAC,2BAA9M;AAA0O,gBAAA,QAAQ,EAAEC,CAAC,IAAIjD,SAAS,CAACiD,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlQ;AAAoR,gBAAA,GAAG,EAAC;AAAxR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI;AAAI,UAAA,SAAS,EAAC,gBAAd;AAAA,oBACKlD;AADL;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,oBADJ;AAiBH;;AACD,SAAOU,IAAP;AACH,CAlJD;;GAAM9B,Q;;KAAAA,Q;;AAoJN,MAAMuE,eAAe,GAAG7E,KAAK,KAAK;AAC9Ba,EAAAA,OAAO,EAAEb,KAAK,CAACa,OAAN,CAAcA,OADO;AAE9BJ,EAAAA,KAAK,EAAET,KAAK,CAACa,OAAN,CAAcJ,KAFS;AAG9BU,EAAAA,OAAO,EAAEnB,KAAK,CAACa,OAAN,CAAcM,OAHO;AAI9BP,EAAAA,MAAM,EAAEZ,KAAK,CAACa,OAAN,CAAcD,MAJQ;AAK9BM,EAAAA,QAAQ,EAAElB,KAAK,CAAC8E,GAAN,CAAU5D,QALU;AAM9BG,EAAAA,KAAK,EAAErB,KAAK,CAACqB,KAAN,CAAYA,KANW;AAO9BC,EAAAA,UAAU,EAAEtB,KAAK,CAACqB,KAAN,CAAYC,UAPM;AAQ9Bd,EAAAA,QAAQ,EAAER,KAAK,CAAC6B,IAAN,CAAWrB,QARS;AAS9BY,EAAAA,aAAa,EAAEpB,KAAK,CAAC6B,IAAN,CAAWT;AATI,CAAL,CAA7B;;AAYA,MAAM2D,kBAAkB,GAAGxD,QAAQ,KAAK;AACpCP,EAAAA,UAAU,EAAE,MAAMO,QAAQ,CAAC9B,cAAc,CAACuB,UAAf,EAAD,CADU;AAEpCF,EAAAA,QAAQ,EAAGkE,IAAD,IAAUzD,QAAQ,CAAC7B,cAAc,CAACoB,QAAf,CAAwBkE,IAAxB,CAAD,CAFQ;AAGpCzE,EAAAA,YAAY,EAAE,MAAMgB,QAAQ,CAAC7B,cAAc,CAACa,YAAf,EAAD,CAHQ;AAIpCG,EAAAA,cAAc,EAAE,MAAMa,QAAQ,CAAC7B,cAAc,CAACgB,cAAf,EAAD,CAJM;AAKpCC,EAAAA,WAAW,EAAG2B,KAAD,IAAWf,QAAQ,CAAC7B,cAAc,CAACiB,WAAf,CAA2B2B,KAA3B,CAAD,CALI;AAMpCrB,EAAAA,aAAa,EAAGgE,IAAD,IAAU1D,QAAQ,CAAC/B,eAAe,CAAC0F,aAAhB,CAA8BD,IAA9B,CAAD,CANG;AAOpClE,EAAAA,uBAAuB,EAAGoE,IAAD,IAAU5D,QAAQ,CAAC/B,eAAe,CAACuB,uBAAhB,CAAwCoE,IAAxC,CAAD;AAPP,CAAL,CAAnC;;AAUA,eAAe9F,OAAO,CAACwF,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C3F,YAAY,CAACkB,QAAD,EAAWnB,KAAX,CAAzD,CAAf","sourcesContent":["import React, { useEffect, useReducer, useState} from 'react';\r\nimport { ImamPageStyled } from './imamPageStyled';\r\nimport Form from 'react-bootstrap/Form';\r\nimport SurahBox from '../surahBox/surahBox';\r\nimport axios from '../../axiosBase/createAxios';\r\nimport ErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport { connect } from 'react-redux';\r\nimport Loader from '../UI/Loader/loader';\r\nimport { Redirect  } from 'react-router-dom';\r\nimport * as favoriteActions from '../../store/action/favoriteActions';\r\nimport * as settingActions from '../../store/action/settingActions';\r\nimport * as getDataActions from '../../store/action/getDataActions';\r\n\r\nconst initialState = {\r\n    suraNumbers: [],\r\n    suraNames: [],\r\n    allSurasBoxs: []\r\n}\r\n\r\nconst myReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'surahNumbers':\r\n            return { ...state, suraNumbers: [...action.numbers] }\r\n        case 'surahNames':\r\n            return { ...state, suraNames: [...action.names] }\r\n        case 'allSurasBoxs':\r\n            return { ...state, allSurasBoxs: [...action.allSurasBoxes] }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst ImamPage = ({ startRequest, language, suras, successRequest, failRequest, server, getData, suraLink, isFromFavouritePlaylist, showPlayer, addToPlaylist, playlist, loading, site_language, theme, themeStyle}) => {\r\n        \r\n    const [state, dispatch] = useReducer(myReducer, initialState);\r\n    const [search, setSearch] = useState('');\r\n    const [filterSearch, setFilterSearch] = useState();\r\n\r\n    useEffect(() => {\r\n        startRequest();\r\n        axios.get(`/translations?languages=${language.lang}`)\r\n        .then(res => {\r\n            dispatch({type: 'surahNumbers', numbers: suras});\r\n            successRequest();\r\n            let arrayNames = [];\r\n            if(suras) {\r\n                suras.map(num => arrayNames.push(res.data[language.lang][`sura${num}`]));\r\n            }\r\n            dispatch({type: 'surahNames', names: arrayNames})\r\n        })\r\n        .catch(error => {\r\n            failRequest(error)\r\n        });\r\n    }, [language.lang, startRequest, successRequest, failRequest]);\r\n\r\n    const clickedHandler = (index) => {\r\n        let fixNum = index.length === 1 ? `00${index}` : index.length === 2 ? `0${index}` : index;\r\n        suraLink(`${server}/${fixNum}.mp3`);\r\n        isFromFavouritePlaylist(false);\r\n        showPlayer();\r\n    }\r\n\r\n    const addFavFun = (data, num, suraName) => {\r\n        let setData = {...data, number: num};\r\n        const collectData = {allDataPlaylist: data, isFavorite: setData.isFavorite, server: `${setData.allData.Server}/${setData.number}.mp3`, number: setData.number, name: setData.allData.name, rewaya: setData.allData.rewaya, suraName: suraName};\r\n        addToPlaylist(collectData);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let array2 = [];\r\n        state.allSurasBoxs.filter(sura => {\r\n            if(search === '') {\r\n                array2 = [state.allSurasBoxs];\r\n                setFilterSearch(array2);\r\n            } else if(sura.props.name.toLocaleLowerCase().includes(search.toLocaleLowerCase())) {\r\n                array2.push(\r\n                    <SurahBox\r\n                    key={`${server}/${sura.props.name}/${sura.props.number}/${sura.props.isFavor}`}\r\n                    name={sura.props.name}\r\n                    server={sura.props.server}\r\n                    number={sura.props.number}\r\n                    clicked={() => clickedHandler(sura.props.number)}\r\n                    addFav={(data) => addFavFun(data, sura.props.number, sura.props.name)}\r\n                    isFavor={sura.props.isFavor}\r\n                    allData={sura.props.allData}\r\n                    copyText={sura.props.copyText}\r\n                />);\r\n            }\r\n            return array2;\r\n        });\r\n        setFilterSearch(array2);\r\n    }, [search]);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, []);\r\n\r\n    let data = <Loader />;\r\n\r\n    let arr = [];\r\n    const suraLoop = () => {\r\n        let sing= null;\r\n        if(server && state.suraNames && state.suraNumbers && state.suraNumbers.length > 0 && state.suraNumbers) {\r\n            if(playlist && playlist.length > 0) {\r\n                for(let i=0; i < state.suraNumbers.length; i++) {\r\n                    let myNumber= null;\r\n                    let successFav = false;\r\n                    myNumber = state.suraNumbers[i].length === 1 ? `00${state.suraNumbers[i]}` : state.suraNumbers[i].length === 2 ? `0${state.suraNumbers[i]}` : state.suraNumbers[i];\r\n                    for (let k=0; k < playlist.length; k++) {\r\n                        sing= getData.name === playlist[k].name && myNumber === playlist[k].number && `${getData.Server}/${myNumber}.mp3` === playlist[k].server && state.suraNames[i] === playlist[k].suraName;\r\n                        if(sing){\r\n                            successFav = sing;\r\n                        }\r\n                    }\r\n\r\n                    arr.push(\r\n                        <SurahBox\r\n                            key={`${server}/${state.suraNames[i]}/${myNumber}`}\r\n                            name={state.suraNames[i]}\r\n                            server={getData.Server}\r\n                            number={myNumber}\r\n                            clicked={() => clickedHandler(state.suraNumbers[i])}\r\n                            addFav={(data) => addFavFun(data, myNumber, state.suraNames[i])}\r\n                            isFavor={successFav}\r\n                            allData={getData}\r\n                            copyText={`${server}/${myNumber}.mp3`}\r\n                        />\r\n                    )\r\n                }\r\n            } else {\r\n                for(let i=0; i < state.suraNumbers.length; i++){\r\n                    let myNumbers= null;\r\n                    let successFavs = false;\r\n                    myNumbers = state.suraNumbers[i].length === 1 ? `00${state.suraNumbers[i]}` : state.suraNumbers[i].length === 2 ? `0${state.suraNumbers[i]}` : state.suraNumbers[i];\r\n                    arr.push(\r\n                        <SurahBox\r\n                            key={`${server}/${state.suraNames[i]}/${myNumbers}`}\r\n                            name={state.suraNames[i]}\r\n                            server={getData.Server}\r\n                            number={myNumbers}\r\n                            clicked={() => clickedHandler(state.suraNumbers[i])}\r\n                            addFav={(data) => addFavFun(data, myNumbers, state.suraNames[i])}\r\n                            isFavor={successFavs}\r\n                            allData={getData}\r\n                            copyText={`${server}/${myNumbers}.mp3`}\r\n                        />\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        setFilterSearch(arr);\r\n        dispatch({type: 'allSurasBoxs', allSurasBoxes: arr});\r\n    }\r\n    \r\n    useEffect(() => {\r\n        server && state.suraNames && state.suraNumbers && state.suraNumbers.length > 0 && state.suraNumbers && suraLoop();\r\n    }, [server, state.suraNames, state.suraNumbers, state.suraNumbers]);\r\n\r\n    if(!loading && site_language) {\r\n        data = (\r\n            <>\r\n                {getData === null ? <Redirect to='/' /> : null}\r\n                <ImamPageStyled theme={theme} themeStyle={themeStyle} site_lang={language.lang}>\r\n                    <div className='top-search-rewaya mb-5'>\r\n                        <div className='top-search mb-2 mb-md-0'>\r\n                            <Form>\r\n                                <Form.Control type='text' placeholder={`${language.lang === 'ar' ? '...' + site_language.search + ' ' + site_language.surah_name : site_language.search + ' ' + site_language.surah_name + '...'}`} className='rounded-pill search-filed' onChange={e => setSearch(e.target.value)} dir='auto' />\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                    <ul className='all-surah-name'>\r\n                        {filterSearch}\r\n                    </ul>\r\n                </ImamPageStyled>\r\n            </>\r\n        )\r\n    }\r\n    return data;\r\n};\r\n\r\nconst mapStateToprops = state => ({\r\n    getData: state.getData.getData,\r\n    suras: state.getData.suras,\r\n    loading: state.getData.loading,\r\n    server: state.getData.server,\r\n    playlist: state.fav.playlist,\r\n    theme: state.theme.theme,\r\n    themeStyle: state.theme.themeStyle,\r\n    language: state.lang.language,\r\n    site_language: state.lang.site_language\r\n})\r\n\r\nconst mapDispatchToprops = dispatch => ({\r\n    showPlayer: () => dispatch(settingActions.showPlayer()),\r\n    suraLink: (link) => dispatch(getDataActions.suraLink(link)),\r\n    startRequest: () => dispatch(getDataActions.startRequest()),\r\n    successRequest: () => dispatch(getDataActions.successRequest()),\r\n    failRequest: (error) => dispatch(getDataActions.failRequest(error)),\r\n    addToPlaylist: (item) => dispatch(favoriteActions.addToPlayList(item)),\r\n    isFromFavouritePlaylist: (bool) => dispatch(favoriteActions.isFromFavouritePlaylist(bool)),\r\n})\r\n\r\nexport default connect(mapStateToprops, mapDispatchToprops)(ErrorHandler(ImamPage, axios));"]},"metadata":{},"sourceType":"module"}