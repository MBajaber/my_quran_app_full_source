{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\HTML\\\\quran_project_2\\\\quran\\\\src\\\\components\\\\MainContent\\\\main.js\";\nimport React, { useEffect, useState } from 'react';\nimport Letter from '../letters/letters';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport axios from 'axios';\nimport ImamBoxs from '../imamBoxs/imamBoxs';\nimport './main.css';\nimport * as actions from '../../store/action/getData';\nimport { connect } from 'react-redux';\nimport Loader from '../UI/Loader/loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = props => {\n  // const [url, SetUrl] = useState('http://mp3quran.net/api/_english.json');\n  console.log('main'); // useEffect(() => {\n  //     let isMounted = true;\n  //     const source = axios.CancelToken.source();\n  //     const myAPI = () => {\n  //         props.startMain();\n  //         axios.get('http://mp3quran.net/api/_english.json', {\n  //             cancelToken: source.token\n  //         })\n  //         .then(res => {\n  //             if(isMounted) {\n  //                 const arrayOfLetters = [];\n  //                 const allElementsArrays = [];\n  //                 const arrayOfLettersIndex = [];\n  //                 const allArraysElements = res.data.reciters;\n  //                 const myData = allArraysElements.map(letter => letter.letter);\n  //                 myData.filter((element, index) => element !== myData[index + 1] && arrayOfLetters.push(element));\n  //                 myData.filter((element, index) => element !== myData[index + 1] && arrayOfLettersIndex.push(index));\n  //                 allArraysElements.map(element => allElementsArrays.push(element));\n  //                 props.successMain(arrayOfLetters, arrayOfLettersIndex, allElementsArrays);\n  //             }\n  //         })\n  //         .catch(error => {\n  //             if(isMounted) {\n  //                 return props.failRequest(error)\n  //             }\n  //         });\n  //     };\n  //     myAPI();\n  //     return () => {\n  //         isMounted = false;\n  //         source.cancel();\n  //     }\n  // }, []);\n\n  let fullElementSections = [];\n  let curentIndex = 0;\n\n  if (props.letters && props.allElementsImams && props.lettersIndex) {\n    for (let i = 0; i < props.letters.length; i++) {\n      let speElement = props.allElementsImams.slice(curentIndex, props.lettersIndex[i] + 1);\n      curentIndex = props.lettersIndex[i] + 1;\n      fullElementSections.push({\n        letterSection: props.letters[i],\n        sectionElements: speElement\n      });\n    }\n  }\n\n  let show = /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 16\n  }, this);\n\n  if (!props.loading) {\n    show = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"show-names-letter\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content-show\",\n        children: props.letters && props.letters.map(letter => /*#__PURE__*/_jsxDEV(Letter, {\n          text: letter,\n          id: `#letter_${letter}`\n        }, letter, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 67\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"show-all-names\",\n        children: props.allElementsImams && props.allElementsImams.length > 0 && fullElementSections.map((element, index) => {\n          // console.log(element)\n          return /*#__PURE__*/_jsxDEV(ImamBoxs, {\n            letter: element.letterSection,\n            boxes: element.sectionElements,\n            myIndex: index\n          }, element.letterSection + element.letterSection, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n  return show;\n};\n\n_c = Main;\n\nconst mapStateToProps = state => ({\n  loading: state.loading,\n  letters: state.letters,\n  lettersIndex: state.lettersIndex,\n  allElementsImams: state.allElementsImams\n});\n\nconst mapDispatchToProps = dispatch => ({\n  startMain: () => dispatch(actions.startMain()),\n  successMain: (letters, lettersIndex, allEllemnt) => dispatch(actions.successMain(letters, lettersIndex, allEllemnt)),\n  failRequest: () => dispatch(actions.failRequest())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Main, axios));\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/HTML/quran_project_2/quran/src/components/MainContent/main.js"],"names":["React","useEffect","useState","Letter","withErrorHandler","axios","ImamBoxs","actions","connect","Loader","Main","props","console","log","fullElementSections","curentIndex","letters","allElementsImams","lettersIndex","i","length","speElement","slice","push","letterSection","sectionElements","show","loading","map","letter","element","index","mapStateToProps","state","mapDispatchToProps","dispatch","startMain","successMain","allEllemnt","failRequest"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Letter from '../letters/letters';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport axios from 'axios';\r\nimport ImamBoxs from '../imamBoxs/imamBoxs';\r\nimport './main.css';\r\nimport * as actions from '../../store/action/getData';\r\nimport { connect } from 'react-redux';\r\nimport Loader from '../UI/Loader/loader';\r\n\r\nconst Main = props => {\r\n    // const [url, SetUrl] = useState('http://mp3quran.net/api/_english.json');\r\n    console.log('main')\r\n\r\n    // useEffect(() => {\r\n    //     let isMounted = true;\r\n    //     const source = axios.CancelToken.source();\r\n        \r\n    //     const myAPI = () => {\r\n    //         props.startMain();\r\n    //         axios.get('http://mp3quran.net/api/_english.json', {\r\n    //             cancelToken: source.token\r\n    //         })\r\n    //         .then(res => {\r\n    //             if(isMounted) {\r\n    //                 const arrayOfLetters = [];\r\n    //                 const allElementsArrays = [];\r\n    //                 const arrayOfLettersIndex = [];\r\n    //                 const allArraysElements = res.data.reciters;\r\n    //                 const myData = allArraysElements.map(letter => letter.letter);\r\n    //                 myData.filter((element, index) => element !== myData[index + 1] && arrayOfLetters.push(element));\r\n    //                 myData.filter((element, index) => element !== myData[index + 1] && arrayOfLettersIndex.push(index));\r\n    //                 allArraysElements.map(element => allElementsArrays.push(element));\r\n                    \r\n    //                 props.successMain(arrayOfLetters, arrayOfLettersIndex, allElementsArrays);\r\n    //             }\r\n    //         })\r\n    //         .catch(error => {\r\n    //             if(isMounted) {\r\n    //                 return props.failRequest(error)\r\n    //             }\r\n    //         });\r\n    //     };\r\n    //     myAPI();\r\n    //     return () => {\r\n    //         isMounted = false;\r\n    //         source.cancel();\r\n    //     }\r\n    // }, []);\r\n    \r\n    let fullElementSections = [];\r\n    let curentIndex = 0;\r\n\r\n    if(props.letters && props.allElementsImams && props.lettersIndex) {\r\n        for(let i = 0; i < props.letters.length; i++) {\r\n            let speElement = props.allElementsImams.slice(curentIndex , props.lettersIndex[i] + 1);\r\n            curentIndex= props.lettersIndex[i] + 1;\r\n            fullElementSections.push({\r\n                letterSection: props.letters[i],\r\n                sectionElements: speElement\r\n            });\r\n        }\r\n    }\r\n\r\n    let show = <Loader />;\r\n\r\n    if(!props.loading) {\r\n        show = (\r\n            <div className='show-names-letter'>\r\n                <div className='main-content-show'>\r\n                    {props.letters && props.letters.map(letter => <Letter text={letter} id={`#letter_${letter}`} key={letter} />) }\r\n                </div>\r\n                <div className='show-all-names'>\r\n                    {\r\n                        props.allElementsImams && props.allElementsImams.length > 0 && fullElementSections.map((element, index) => {\r\n                            // console.log(element)\r\n                            return (   \r\n                                <ImamBoxs\r\n                                    key={element.letterSection + element.letterSection}\r\n                                    letter={element.letterSection}\r\n                                    boxes={element.sectionElements}\r\n                                    myIndex={index}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return show;\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    loading: state.loading,\r\n    letters: state.letters,\r\n    lettersIndex: state.lettersIndex,\r\n    allElementsImams: state.allElementsImams\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    startMain: () => dispatch(actions.startMain()),\r\n    successMain: (letters, lettersIndex, allEllemnt) => dispatch(actions.successMain(letters, lettersIndex, allEllemnt)),\r\n    failRequest: () => dispatch(actions.failRequest()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Main, axios));"]},"metadata":{},"sourceType":"module"}