{"ast":null,"code":"import * as actionType from '../action/actionTypes';\nconst initialState = {\n  playlist: [],\n  deleteFav: '',\n  isFavPlaylist: false,\n  isFavoritePage: false\n};\n\nconst favoriteReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionType.PLAYLIST_STORAGE:\n      return { ...state,\n        playlist: action.items\n      };\n\n    case actionType.ADD_TO_PLAYLIST:\n      let allList = state.playlist && state.playlist.some(list => list.server === action.item.server);\n      let item = null;\n\n      if (action.item.isFavorite && !allList) {\n        item = { ...state,\n          playlist: state.playlist.concat(action.item)\n        };\n      } else {\n        item = { ...state\n        };\n      }\n\n      return item;\n\n    case actionType.REMOVE_ITEM_FROM_PLAYLIST:\n      let filterPlaylist = state.playlist.filter(list => list.server !== action.item.server);\n      return { ...state,\n        playlist: filterPlaylist\n      };\n\n    case actionType.DELETE_FAVOURITE_FROM_SURABOX:\n      return { ...state,\n        deleteFav: action.item\n      };\n\n    case actionType.EMPTY_FAVOURITE_FROM_SURABOX:\n      return { ...state,\n        deleteFav: ''\n      };\n\n    case actionType.IS_FROM_FAVOURITE_PLAYLIST:\n      return { ...state,\n        isFavPlaylist: action.booleanValue\n      };\n\n    case actionType.iS_FAVORITE_PAGE:\n      return { ...state,\n        isFavoritePage: action.value\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default favoriteReducer;","map":{"version":3,"sources":["C:/Users/USER/Desktop/HTML/quran_project_2/quran/src/store/reducer/favorite.js"],"names":["actionType","initialState","playlist","deleteFav","isFavPlaylist","isFavoritePage","favoriteReducer","state","action","type","PLAYLIST_STORAGE","items","ADD_TO_PLAYLIST","allList","some","list","server","item","isFavorite","concat","REMOVE_ITEM_FROM_PLAYLIST","filterPlaylist","filter","DELETE_FAVOURITE_FROM_SURABOX","EMPTY_FAVOURITE_FROM_SURABOX","IS_FROM_FAVOURITE_PLAYLIST","booleanValue","iS_FAVORITE_PAGE","value"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,uBAA5B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,SAAS,EAAE,EAFM;AAGjBC,EAAAA,aAAa,EAAE,KAHE;AAIjBC,EAAAA,cAAc,EAAE;AAJC,CAArB;;AAOA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACtD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,UAAU,CAACU,gBAAhB;AACI,aAAO,EAAC,GAAGH,KAAJ;AAAWL,QAAAA,QAAQ,EAAEM,MAAM,CAACG;AAA5B,OAAP;;AACJ,SAAKX,UAAU,CAACY,eAAhB;AACI,UAAIC,OAAO,GAAGN,KAAK,CAACL,QAAN,IAAkBK,KAAK,CAACL,QAAN,CAAeY,IAAf,CAAoBC,IAAI,IAAIA,IAAI,CAACC,MAAL,KAAgBR,MAAM,CAACS,IAAP,CAAYD,MAAxD,CAAhC;AACA,UAAIC,IAAI,GAAG,IAAX;;AACA,UAAGT,MAAM,CAACS,IAAP,CAAYC,UAAZ,IAA0B,CAACL,OAA9B,EAAuC;AACnCI,QAAAA,IAAI,GAAG,EAAC,GAAGV,KAAJ;AAAWL,UAAAA,QAAQ,EAAEK,KAAK,CAACL,QAAN,CAAeiB,MAAf,CAAsBX,MAAM,CAACS,IAA7B;AAArB,SAAP;AACH,OAFD,MAEO;AACHA,QAAAA,IAAI,GAAG,EAAC,GAAGV;AAAJ,SAAP;AACH;;AACD,aAAOU,IAAP;;AACJ,SAAKjB,UAAU,CAACoB,yBAAhB;AACI,UAAIC,cAAc,GAAGd,KAAK,CAACL,QAAN,CAAeoB,MAAf,CAAsBP,IAAI,IAAIA,IAAI,CAACC,MAAL,KAAgBR,MAAM,CAACS,IAAP,CAAYD,MAA1D,CAArB;AACA,aAAO,EAAC,GAAGT,KAAJ;AAAWL,QAAAA,QAAQ,EAAEmB;AAArB,OAAP;;AACJ,SAAKrB,UAAU,CAACuB,6BAAhB;AACI,aAAO,EAAC,GAAGhB,KAAJ;AAAWJ,QAAAA,SAAS,EAAEK,MAAM,CAACS;AAA7B,OAAP;;AACJ,SAAKjB,UAAU,CAACwB,4BAAhB;AACI,aAAO,EAAC,GAAGjB,KAAJ;AAAWJ,QAAAA,SAAS,EAAE;AAAtB,OAAP;;AACJ,SAAKH,UAAU,CAACyB,0BAAhB;AACI,aAAO,EAAC,GAAGlB,KAAJ;AAAWH,QAAAA,aAAa,EAAEI,MAAM,CAACkB;AAAjC,OAAP;;AACJ,SAAK1B,UAAU,CAAC2B,gBAAhB;AACI,aAAO,EAAC,GAAGpB,KAAJ;AAAWF,QAAAA,cAAc,EAAEG,MAAM,CAACoB;AAAlC,OAAP;;AACJ;AACI,aAAOrB,KAAP;AAxBR;AA0BH,CA3BD;;AA6BA,eAAeD,eAAf","sourcesContent":["import * as actionType from '../action/actionTypes';\r\n\r\nconst initialState = {\r\n    playlist: [],\r\n    deleteFav: '',\r\n    isFavPlaylist: false,\r\n    isFavoritePage: false\r\n}\r\n\r\nconst favoriteReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionType.PLAYLIST_STORAGE:\r\n            return {...state, playlist: action.items}\r\n        case actionType.ADD_TO_PLAYLIST:\r\n            let allList = state.playlist && state.playlist.some(list => list.server === action.item.server);\r\n            let item = null;\r\n            if(action.item.isFavorite && !allList) {\r\n                item = {...state, playlist: state.playlist.concat(action.item)};\r\n            } else {\r\n                item = {...state};\r\n            }\r\n            return item;\r\n        case actionType.REMOVE_ITEM_FROM_PLAYLIST:\r\n            let filterPlaylist = state.playlist.filter(list => list.server !== action.item.server);\r\n            return {...state, playlist: filterPlaylist}\r\n        case actionType.DELETE_FAVOURITE_FROM_SURABOX:\r\n            return {...state, deleteFav: action.item}\r\n        case actionType.EMPTY_FAVOURITE_FROM_SURABOX:\r\n            return {...state, deleteFav: ''}\r\n        case actionType.IS_FROM_FAVOURITE_PLAYLIST:\r\n            return {...state, isFavPlaylist: action.booleanValue}\r\n        case actionType.iS_FAVORITE_PAGE:\r\n            return {...state, isFavoritePage: action.value}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default favoriteReducer;"]},"metadata":{},"sourceType":"module"}