{"ast":null,"code":"import * as actionType from './actionTypes'; // export const getData = (data) => {\n//     return dispatch => {\n//         dispatch({type: actionType.GET_IMAM_DATA, imamData: data, suras: data.suras.split(',')});\n//     }\n// }\n// export const getServer = (server) => {\n//     return dispatch => {\n//         dispatch({type: actionType.GET_SERVER, server: server});\n//     }\n// }\n// export const showPlayer = () => {\n//     return dispatch => {\n//         dispatch({type: actionType.SHOW_PLAYER})\n//     }\n// }\n// export const suraLink = (link) => {\n//     console.log(link)\n//     return dispatch => {\n//         dispatch({type: actionType.SURA_LINK, link: link})\n//     }\n// }\n// export const suraLink = (link) => {\n//     console.log(link)\n//     return dispatch => {\n//         dispatch({type: actionType.SURA_LINK, link: link});\n//     }\n// }\n// export const suraLinkRandom = (randomNumber) => {\n//     return dispatch => {\n//         dispatch({type: actionType.SURA_LINK_RANDOM, number: randomNumber})\n//     }\n// }\n// export const startRequest = () => {\n//     return dispatch => {\n//         dispatch({type: actionType.START_REQUEST});\n//     }\n// }\n// export const successRequest = () => {\n//     return dispatch => {\n//         dispatch({type: actionType.SUCCESS_REQUEST});\n//     }\n// }\n// export const failRequest = (error) => {\n//     return dispatch => {\n//         dispatch({type: actionType.FAIL_REQUEST, error: error})\n//     }\n// }\n// export const startMain = () => {\n//     return dispatch => {\n//         dispatch({type: actionType.START_MAIN});\n//     }\n// }\n// export const successMain = (letters, letterIndexs, allElements) => {\n//     return dispatch => {\n//         dispatch({type: actionType.SUCCESS_MAIN, letters: letters, letterIndexs: letterIndexs, allElements: allElements})\n//     }\n// }\n// export const closeAside = () => {\n//     return dispatch => {\n//         dispatch({type: actionType.CLOSE_ASIDE});\n//     }\n// }\n// export const openAside = () => {\n//     return {type: actionType.OPEN_ASIDE}\n// }\n// export const addToPlayList = (item) => {\n//     return {type: actionType.ADD_TO_PLAYLIST, item: item}\n// }\n// export const playlistStorage = (items) => {\n//     return {type: actionType.PLAYLIST_STORAGE, items: items}\n// }\n// export const removeItemFromPlayList = (item) => {\n//     return {type: actionType.REMOVE_ITEM_FROM_PLAYLIST, item: item}\n// }\n// export const deleteFavFromSurabox = (item) => {\n//     return {type: actionType.DELETE_FAVOURITE_FROM_SURABOX, item: item}\n// }\n// export const emptyFavFromSurabox = () => {\n//     return {type: actionType.EMPTY_FAVOURITE_FROM_SURABOX}\n// }\n// export const isFromFavouritePlaylist = (bool) => {\n//     return {type: actionType.IS_FROM_FAVOURITE_PLAYLIST, booleanValue: bool }\n// }\n// export const changeTheme = () => {\n//     return {type: actionType.IS_THEME_IS_DARK}\n// }\n// export const toggleTheme = (bool) => {\n//     return {type: actionType.THEME_STORAGE, value: bool}\n// }\n// export const siteLanguage = (lang) => {\n//     return {type: actionType.SITE_LANGUAGE, lang: lang}\n// }\n// export const isFavoritePage = (value) => {\n//     return {type: actionType.iS_FAVORITE_PAGE, value: value}\n// }\n// export const isRadioPage = (value) => {\n//     return {type: actionType.iS_RADIO_PAGE, value: value}\n// }\n// export const siteLanguage = (lang) => {\n//     return {type: actionType.SITE_LANGUAGE, lang: lang}\n// }\n// export const isFavoritePage = (value) => {\n//     return {type: actionType.iS_FAVORITE_PAGE, value: value}\n// }\n// export const isRadioPage = (value) => {\n//     return {type: actionType.iS_RADIO_PAGE, value: value}\n// }\n// Setting\n\nexport const closeAside = () => ({\n  type: actionType.CLOSE_ASIDE\n});\nexport const openAside = () => ({\n  type: actionType.OPEN_ASIDE\n});\nexport const showPlayer = () => ({\n  type: actionType.SHOW_PLAYER\n}); //  Radio\n\nexport const isRadioPage = value => ({\n  type: actionType.iS_RADIO_PAGE,\n  value: value\n});\nexport const startRadioPage = value => ({\n  type: actionType.START_RADIO_REQUEST\n});\nexport const stopRadioPage = value => ({\n  type: actionType.STOP_RADIO_REQUEST\n}); // Favorite\n\nexport const addToPlayList = item => ({\n  type: actionType.ADD_TO_PLAYLIST,\n  item: item\n});\nexport const playlistStorage = items => ({\n  type: actionType.PLAYLIST_STORAGE,\n  items: items\n});\nexport const removeItemFromPlayList = item => ({\n  type: actionType.REMOVE_ITEM_FROM_PLAYLIST,\n  item: item\n});\nexport const deleteFavFromSurabox = item => ({\n  type: actionType.DELETE_FAVOURITE_FROM_SURABOX,\n  item: item\n});\nexport const emptyFavFromSurabox = () => ({\n  type: actionType.EMPTY_FAVOURITE_FROM_SURABOX\n});\nexport const isFromFavouritePlaylist = bool => ({\n  type: actionType.IS_FROM_FAVOURITE_PLAYLIST,\n  booleanValue: bool\n});\nexport const isFavoritePage = value => ({\n  type: actionType.iS_FAVORITE_PAGE,\n  value: value\n}); //  Request\n\nexport const startRequest = () => ({\n  type: actionType.START_REQUEST\n});\nexport const successRequest = () => ({\n  type: actionType.SUCCESS_REQUEST\n});\nexport const failRequest = error => ({\n  type: actionType.FAIL_REQUEST,\n  error: error\n});\nexport const startMain = () => ({\n  type: actionType.START_MAIN\n});\nexport const successMain = (letters, letterIndexs, allElements) => ({\n  type: actionType.SUCCESS_MAIN,\n  letters: letters,\n  letterIndexs: letterIndexs,\n  allElements: allElements\n}); //  Get Data\n\nexport const getData = data => ({\n  type: actionType.GET_IMAM_DATA,\n  imamData: data,\n  suras: data.suras.split(',')\n});\nexport const getServer = server => ({\n  type: actionType.GET_SERVER,\n  server: server\n});\nexport const suraLink = link => ({\n  type: actionType.SURA_LINK,\n  link: link\n});\nexport const suraLinkRandom = randomNumber => ({\n  type: actionType.SURA_LINK_RANDOM,\n  number: randomNumber\n}); //  Theme\n\nexport const changeTheme = () => ({\n  type: actionType.IS_THEME_IS_DARK\n});\nexport const toggleTheme = bool => ({\n  type: actionType.THEME_STORAGE,\n  value: bool\n}); //  Language\n\nexport const changeLanguage = lang => {\n  let language = null;\n\n  if (lang === 'en') {\n    language = '_english.json';\n  } else if (lang === 'ar') {\n    language = '_arabic.json';\n  } else if (lang === 'fr') {\n    language = '_france.json';\n  } else if (lang === 'ru') {\n    language = '_russia.json';\n  } else if (lang === 'de') {\n    language = '_germany.json';\n  } else if (lang === 'es') {\n    language = '_spain.json';\n  } else if (lang === 'tr') {\n    language = '_turkey.json';\n  } else if (lang === 'cn') {\n    return {\n      type: actionType.CHOOSE_LANGUAGE,\n      selectLanguage: {\n        lang: 'en',\n        language: '_china.json'\n      }\n    };\n  } else if (lang === 'tl') {\n    return {\n      type: actionType.CHOOSE_LANGUAGE,\n      selectLanguage: {\n        lang: 'en',\n        language: '_tagalog.json'\n      }\n    };\n  } else if (lang === 'th') {\n    language = '_tahi.json';\n  } else if (lang === 'ur') {\n    language = '_urdu.json';\n  } else if (lang === 'bn') {\n    language = '_bengali.json';\n  } else if (lang === 'bs') {\n    language = '_bosnia.json';\n  } else if (lang === 'ug') {\n    language = '_uyghur.json';\n  } else if (lang === 'fa') {\n    language = '_farsi.json';\n  } else if (lang === 'tg') {\n    language = '_tagalog.json';\n  } else if (lang === 'ml') {\n    language = '_malbari.json';\n  } else if (lang === 'id') {\n    language = '_indonesia.json';\n  } else if (lang === 'pt') {\n    language = '_portuguese.json';\n  } else if (lang === 'ha') {\n    language = '_hausa.json';\n  } else if (lang === 'sw') {\n    language = '_swahili.json';\n  }\n\n  return {\n    type: actionType.CHOOSE_LANGUAGE,\n    selectLanguage: {\n      lang: lang,\n      language: language\n    }\n  };\n};\nexport const siteLanguage = lang => ({\n  type: actionType.SITE_LANGUAGE,\n  lang: lang\n}); //  ===================================================","map":{"version":3,"sources":["C:/Users/USER/Desktop/HTML/quran_project_2/quran/src/store/action/getData.js"],"names":["actionType","closeAside","type","CLOSE_ASIDE","openAside","OPEN_ASIDE","showPlayer","SHOW_PLAYER","isRadioPage","value","iS_RADIO_PAGE","startRadioPage","START_RADIO_REQUEST","stopRadioPage","STOP_RADIO_REQUEST","addToPlayList","item","ADD_TO_PLAYLIST","playlistStorage","items","PLAYLIST_STORAGE","removeItemFromPlayList","REMOVE_ITEM_FROM_PLAYLIST","deleteFavFromSurabox","DELETE_FAVOURITE_FROM_SURABOX","emptyFavFromSurabox","EMPTY_FAVOURITE_FROM_SURABOX","isFromFavouritePlaylist","bool","IS_FROM_FAVOURITE_PLAYLIST","booleanValue","isFavoritePage","iS_FAVORITE_PAGE","startRequest","START_REQUEST","successRequest","SUCCESS_REQUEST","failRequest","error","FAIL_REQUEST","startMain","START_MAIN","successMain","letters","letterIndexs","allElements","SUCCESS_MAIN","getData","data","GET_IMAM_DATA","imamData","suras","split","getServer","server","GET_SERVER","suraLink","link","SURA_LINK","suraLinkRandom","randomNumber","SURA_LINK_RANDOM","number","changeTheme","IS_THEME_IS_DARK","toggleTheme","THEME_STORAGE","changeLanguage","lang","language","CHOOSE_LANGUAGE","selectLanguage","siteLanguage","SITE_LANGUAGE"],"mappings":"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","sourcesContent":["import * as actionType from './actionTypes';\r\n\r\n// export const getData = (data) => {\r\n//     return dispatch => {\r\n//         dispatch({type: actionType.GET_IMAM_DATA, imamData: data, suras: data.suras.split(',')});\r\n//     }\r\n// }\r\n\r\n// export const getServer = (server) => {\r\n//     return dispatch => {\r\n//         dispatch({type: actionType.GET_SERVER, server: server});\r\n//     }\r\n// }\r\n\r\n// export const showPlayer = () => {\r\n//     return dispatch => {\r\n//         dispatch({type: actionType.SHOW_PLAYER})\r\n//     }\r\n// }\r\n\r\n// export const suraLink = (link) => {\r\n//     console.log(link)\r\n//     return dispatch => {\r\n//         dispatch({type: actionType.SURA_LINK, link: link})\r\n//     }\r\n// }\r\n\r\n// export const suraLink = (link) => {\r\n//     console.log(link)\r\n//     return dispatch => {\r\n//         dispatch({type: actionType.SURA_LINK, link: link});\r\n//     }\r\n// }\r\n\r\n// export const suraLinkRandom = (randomNumber) => {\r\n//     return dispatch => {\r\n//         dispatch({type: actionType.SURA_LINK_RANDOM, number: randomNumber})\r\n//     }\r\n// }\r\n \r\n// export const startRequest = () => {\r\n//     return dispatch => {\r\n//         dispatch({type: actionType.START_REQUEST});\r\n//     }\r\n// }\r\n\r\n// export const successRequest = () => {\r\n//     return dispatch => {\r\n//         dispatch({type: actionType.SUCCESS_REQUEST});\r\n//     }\r\n// }\r\n\r\n// export const failRequest = (error) => {\r\n//     return dispatch => {\r\n//         dispatch({type: actionType.FAIL_REQUEST, error: error})\r\n//     }\r\n// }\r\n\r\n// export const startMain = () => {\r\n//     return dispatch => {\r\n//         dispatch({type: actionType.START_MAIN});\r\n//     }\r\n// }\r\n// export const successMain = (letters, letterIndexs, allElements) => {\r\n//     return dispatch => {\r\n//         dispatch({type: actionType.SUCCESS_MAIN, letters: letters, letterIndexs: letterIndexs, allElements: allElements})\r\n//     }\r\n// }\r\n\r\n// export const closeAside = () => {\r\n//     return dispatch => {\r\n//         dispatch({type: actionType.CLOSE_ASIDE});\r\n//     }\r\n// }\r\n\r\n// export const openAside = () => {\r\n//     return {type: actionType.OPEN_ASIDE}\r\n// }\r\n\r\n// export const addToPlayList = (item) => {\r\n//     return {type: actionType.ADD_TO_PLAYLIST, item: item}\r\n// }\r\n\r\n// export const playlistStorage = (items) => {\r\n//     return {type: actionType.PLAYLIST_STORAGE, items: items}\r\n// }\r\n\r\n// export const removeItemFromPlayList = (item) => {\r\n//     return {type: actionType.REMOVE_ITEM_FROM_PLAYLIST, item: item}\r\n// }\r\n\r\n// export const deleteFavFromSurabox = (item) => {\r\n//     return {type: actionType.DELETE_FAVOURITE_FROM_SURABOX, item: item}\r\n// }\r\n\r\n// export const emptyFavFromSurabox = () => {\r\n//     return {type: actionType.EMPTY_FAVOURITE_FROM_SURABOX}\r\n// }\r\n\r\n// export const isFromFavouritePlaylist = (bool) => {\r\n//     return {type: actionType.IS_FROM_FAVOURITE_PLAYLIST, booleanValue: bool }\r\n// }\r\n\r\n// export const changeTheme = () => {\r\n//     return {type: actionType.IS_THEME_IS_DARK}\r\n// }\r\n\r\n// export const toggleTheme = (bool) => {\r\n//     return {type: actionType.THEME_STORAGE, value: bool}\r\n// }\r\n\r\n// export const siteLanguage = (lang) => {\r\n//     return {type: actionType.SITE_LANGUAGE, lang: lang}\r\n// }\r\n\r\n// export const isFavoritePage = (value) => {\r\n//     return {type: actionType.iS_FAVORITE_PAGE, value: value}\r\n// }\r\n\r\n// export const isRadioPage = (value) => {\r\n//     return {type: actionType.iS_RADIO_PAGE, value: value}\r\n// }\r\n\r\n// export const siteLanguage = (lang) => {\r\n//     return {type: actionType.SITE_LANGUAGE, lang: lang}\r\n// }\r\n\r\n// export const isFavoritePage = (value) => {\r\n//     return {type: actionType.iS_FAVORITE_PAGE, value: value}\r\n// }\r\n\r\n// export const isRadioPage = (value) => {\r\n//     return {type: actionType.iS_RADIO_PAGE, value: value}\r\n// }\r\n\r\n\r\n// Setting\r\n\r\nexport const closeAside = () => ({type: actionType.CLOSE_ASIDE});\r\n\r\nexport const openAside = () => ({type: actionType.OPEN_ASIDE});\r\n\r\nexport const showPlayer = () => ({type: actionType.SHOW_PLAYER});\r\n\r\n\r\n//  Radio\r\nexport const isRadioPage = (value) => ({type: actionType.iS_RADIO_PAGE, value: value});\r\nexport const startRadioPage = (value) => ({type: actionType.START_RADIO_REQUEST});\r\nexport const stopRadioPage = (value) => ({type: actionType.STOP_RADIO_REQUEST});\r\n\r\n// Favorite\r\n\r\nexport const addToPlayList = (item) => ({type: actionType.ADD_TO_PLAYLIST, item: item});\r\n\r\nexport const playlistStorage = (items) => ({type: actionType.PLAYLIST_STORAGE, items: items});\r\n\r\nexport const removeItemFromPlayList = (item) => ({type: actionType.REMOVE_ITEM_FROM_PLAYLIST, item: item});\r\n\r\nexport const deleteFavFromSurabox = (item) => ({type: actionType.DELETE_FAVOURITE_FROM_SURABOX, item: item});\r\n\r\nexport const emptyFavFromSurabox = () => ({type: actionType.EMPTY_FAVOURITE_FROM_SURABOX});\r\n\r\nexport const isFromFavouritePlaylist = (bool) => ({type: actionType.IS_FROM_FAVOURITE_PLAYLIST, booleanValue: bool });\r\n\r\nexport const isFavoritePage = (value) => ({type: actionType.iS_FAVORITE_PAGE, value: value});\r\n\r\n//  Request\r\n\r\nexport const startRequest = () => ({type: actionType.START_REQUEST});\r\n\r\nexport const successRequest = () => ({type: actionType.SUCCESS_REQUEST});\r\n\r\nexport const failRequest = (error) => ({type: actionType.FAIL_REQUEST, error: error});\r\n\r\nexport const startMain = () => ({type: actionType.START_MAIN});\r\n\r\nexport const successMain = (letters, letterIndexs, allElements) => ({type: actionType.SUCCESS_MAIN, letters: letters, letterIndexs: letterIndexs, allElements: allElements})\r\n\r\n//  Get Data\r\n\r\nexport const getData = (data) => ({type: actionType.GET_IMAM_DATA, imamData: data, suras: data.suras.split(',')});\r\n\r\nexport const getServer = (server) => ({type: actionType.GET_SERVER, server: server});\r\n\r\nexport const suraLink = (link) => ({type: actionType.SURA_LINK, link: link});\r\n\r\nexport const suraLinkRandom = (randomNumber) => ({type: actionType.SURA_LINK_RANDOM, number: randomNumber});\r\n\r\n//  Theme\r\n\r\nexport const changeTheme = () => ({type: actionType.IS_THEME_IS_DARK});\r\n\r\nexport const toggleTheme = (bool) => ({type: actionType.THEME_STORAGE, value: bool});\r\n\r\n//  Language\r\n\r\nexport const changeLanguage = (lang) => {\r\n    let language = null;\r\n    if (lang === 'en') {\r\n        language = '_english.json';\r\n    } else if(lang === 'ar') {\r\n        language = '_arabic.json';\r\n    } else if(lang === 'fr') {\r\n        language = '_france.json';\r\n    } else if(lang === 'ru') {\r\n        language = '_russia.json';\r\n    } else if(lang === 'de') {\r\n        language = '_germany.json';\r\n    } else if(lang === 'es') {\r\n        language = '_spain.json';\r\n    } else if(lang === 'tr') {\r\n        language = '_turkey.json';\r\n    } else if(lang === 'cn') {\r\n        return {type: actionType.CHOOSE_LANGUAGE, selectLanguage: {lang: 'en', language: '_china.json'}}\r\n    } else if(lang === 'tl') {\r\n        return {type: actionType.CHOOSE_LANGUAGE, selectLanguage: {lang: 'en', language: '_tagalog.json'}}\r\n    } else if(lang === 'th') {\r\n        language = '_tahi.json';\r\n    } else if(lang === 'ur') {\r\n        language = '_urdu.json';\r\n    } else if(lang === 'bn') {\r\n        language = '_bengali.json';\r\n    } else if(lang === 'bs') {\r\n        language = '_bosnia.json';\r\n    } else if(lang === 'ug') {\r\n        language = '_uyghur.json';\r\n    } else if(lang === 'fa') {\r\n        language = '_farsi.json';\r\n    } else if(lang === 'tg') {\r\n        language = '_tagalog.json';\r\n    } else if(lang === 'ml') {\r\n        language = '_malbari.json';\r\n    } else if(lang === 'id') {\r\n        language = '_indonesia.json';\r\n    } else if(lang === 'pt') {\r\n        language = '_portuguese.json';\r\n    } else if(lang === 'ha') {\r\n        language = '_hausa.json';\r\n    } else if(lang === 'sw') {\r\n        language = '_swahili.json';\r\n    }\r\n    return {type: actionType.CHOOSE_LANGUAGE, selectLanguage: {lang: lang, language: language}}\r\n}\r\n\r\nexport const siteLanguage = (lang) => ({type: actionType.SITE_LANGUAGE, lang: lang});\r\n\r\n//  ===================================================\r\n"]},"metadata":{},"sourceType":"module"}