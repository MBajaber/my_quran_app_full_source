{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\HTML\\\\quran_project_2\\\\quran\\\\src\\\\components\\\\downloadBtn\\\\downloadBtn.js\";\nimport React from 'react';\nimport { BiDownload } from 'react-icons/bi';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst downloadBtn = props => {\n  const downloadSura = () => {\n    axios.get(props.url, {\n      responseType: 'arraybuffer',\n      headers: {\n        'Content-Type': 'audio/mpeg'\n      }\n    }).then(response => {\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', `${props.suraName}.mp3`); //or any other extension\n\n      document.body.appendChild(link);\n      link.click();\n    }).catch(error => console.log(error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"btn\",\n    onClick: downloadSura,\n    title: props.site_language && props.site_language.download,\n    children: /*#__PURE__*/_jsxDEV(BiDownload, {\n      size: props.size\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\nconst mapStateToProps = state => ({\n  site_language: state.lang.site_language\n});\n\nexport default connect(mapStateToProps)(downloadBtn);","map":{"version":3,"sources":["C:/Users/USER/Desktop/HTML/quran_project_2/quran/src/components/downloadBtn/downloadBtn.js"],"names":["React","BiDownload","axios","connect","downloadBtn","props","downloadSura","get","url","responseType","headers","then","response","window","URL","createObjectURL","Blob","data","link","document","createElement","href","setAttribute","suraName","body","appendChild","click","catch","error","console","log","site_language","download","size","mapStateToProps","state","lang"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAEzB,QAAMC,YAAY,GAAG,MAAM;AACvBJ,IAAAA,KAAK,CAACK,GAAN,CAAUF,KAAK,CAACG,GAAhB,EAAqB;AACjBC,MAAAA,YAAY,EAAE,aADG;AAEjBC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAFQ,KAArB,EAKGC,IALH,CAKQC,QAAQ,IAAI;AAChB,YAAMJ,GAAG,GAAGK,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2B,IAAIC,IAAJ,CAAS,CAACJ,QAAQ,CAACK,IAAV,CAAT,CAA3B,CAAZ;AACA,YAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAb;AACAF,MAAAA,IAAI,CAACG,IAAL,GAAYb,GAAZ;AACAU,MAAAA,IAAI,CAACI,YAAL,CAAkB,UAAlB,EAA+B,GAAEjB,KAAK,CAACkB,QAAS,MAAhD,EAJgB,CAIwC;;AACxDJ,MAAAA,QAAQ,CAACK,IAAT,CAAcC,WAAd,CAA0BP,IAA1B;AACAA,MAAAA,IAAI,CAACQ,KAAL;AAEH,KAbD,EAaGC,KAbH,CAaSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAblB;AAcH,GAfD;;AAiBA,sBACI;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAwB,IAAA,OAAO,EAAEtB,YAAjC;AAA+C,IAAA,KAAK,EAAED,KAAK,CAAC0B,aAAN,IAAuB1B,KAAK,CAAC0B,aAAN,CAAoBC,QAAjG;AAAA,2BACI,QAAC,UAAD;AAAY,MAAA,IAAI,EAAE3B,KAAK,CAAC4B;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAxBD;;AA0BA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BJ,EAAAA,aAAa,EAAEI,KAAK,CAACC,IAAN,CAAWL;AADI,CAAL,CAA7B;;AAIA,eAAe5B,OAAO,CAAC+B,eAAD,CAAP,CAAyB9B,WAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport { BiDownload } from 'react-icons/bi';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\n\r\nconst downloadBtn = props => {\r\n    \r\n    const downloadSura = () => {\r\n        axios.get(props.url, {\r\n            responseType: 'arraybuffer',\r\n            headers: {\r\n                'Content-Type': 'audio/mpeg'\r\n            }\r\n        }).then(response => {\r\n            const url = window.URL.createObjectURL(new Blob([response.data]));\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.setAttribute('download', `${props.suraName}.mp3`); //or any other extension\r\n            document.body.appendChild(link);\r\n            link.click();\r\n\r\n        }).catch(error => console.log(error));\r\n    }\r\n\r\n    return (\r\n        <button className='btn' onClick={downloadSura} title={props.site_language && props.site_language.download}>\r\n            <BiDownload size={props.size} />\r\n        </button>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    site_language: state.lang.site_language\r\n});\r\n\r\nexport default connect(mapStateToProps)(downloadBtn);"]},"metadata":{},"sourceType":"module"}