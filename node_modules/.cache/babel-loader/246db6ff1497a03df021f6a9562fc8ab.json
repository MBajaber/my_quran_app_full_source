{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\HTML\\\\quran_project_2\\\\quran\\\\src\\\\components\\\\imamPage\\\\ImamPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer, useState } from 'react';\nimport { ImamPageStyled } from './imamPageStyled';\nimport Form from 'react-bootstrap/Form';\nimport SurahBox from '../surahBox/surahBox';\nimport axios from '../../axiosBase/createAxios';\nimport ErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/action/getData';\nimport Loader from '../UI/Loader/loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  suraNumbers: [],\n  suraNames: [],\n  allSurasBoxs: []\n};\n\nconst myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'surahNumbers':\n      return { ...state,\n        suraNumbers: [...action.numbers]\n      };\n\n    case 'surahNames':\n      return { ...state,\n        suraNames: [...action.names]\n      };\n\n    case 'allSurasBoxs':\n      return { ...state,\n        allSurasBoxs: [...action.allSurasBoxes]\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst ImamPage = props => {\n  _s();\n\n  const [state, dispatch] = useReducer(myReducer, initialState);\n  const [search, setSearch] = useState('');\n  const [filterSearch, setFilterSearch] = useState();\n  useEffect(() => {\n    props.startRequest();\n    axios.get(`/translations?languages=${props.language.lang}`).then(res => {\n      dispatch({\n        type: 'surahNumbers',\n        numbers: props.suras\n      });\n      props.successRequest();\n      let arrayNames = [];\n\n      if (props.suras) {\n        props.suras.map(num => arrayNames.push(res.data[props.language.lang][`sura${num}`]));\n      }\n\n      dispatch({\n        type: 'surahNames',\n        names: arrayNames\n      });\n      props.allSuras(arrayNames);\n      console.log('Response');\n    }).catch(error => {\n      props.failRequest(error);\n    });\n  }, [props.language.lang]);\n  useEffect(() => {\n    props.server && state.suraNames && state.suraNumbers && state.suraNumbers.length > 0 && state.suraNumbers && suraLoop();\n  }, [props.server, state.suraNames, state.suraNumbers, state.suraNumbers]);\n  useEffect(() => {\n    let array2 = [];\n    state.allSurasBoxs.filter(sura => {\n      if (search === '') {\n        array2 = [state.allSurasBoxs];\n        setFilterSearch(array2);\n      } else if (sura.props.name.toLocaleLowerCase().includes(search.toLocaleLowerCase())) {\n        array2.push( /*#__PURE__*/_jsxDEV(SurahBox, {\n          name: sura.props.name,\n          server: sura.props.server,\n          number: sura.props.number,\n          clicked: () => clickedHandler(sura.props.number, sura.props.name),\n          addFav: data => addFavFun(data, sura.props.number, sura.props.name),\n          isFavor: sura.props.isFavor,\n          allData: sura.props.allData,\n          copyText: sura.props.copyText\n        }, `${props.server}/${sura.props.name}/${sura.props.number}/${sura.props.isFavor}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this));\n      }\n    });\n    return setFilterSearch(array2);\n  }, [search, props.getData]);\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  console.log('Immam Page ========>>>>>>');\n\n  const clickedHandler = (index, suraName) => {\n    let fixNum = index.length === 1 ? `00${index}` : index.length === 2 ? `0${index}` : index;\n    props.getSurah_Number_Name(fixNum, suraName);\n    props.suraLink(`${props.server}/${fixNum}.mp3`);\n    props.imamName(props.getData.name);\n    props.isFromFavouritePlaylist(false);\n    props.playingFalse();\n    props.showPlayer();\n    props.getSuras();\n  };\n\n  const addFavFun = (data, num, suraName) => {\n    let setData = { ...data,\n      number: num\n    };\n    const collectData = {\n      allDataPlaylist: data,\n      isFavorite: setData.isFavorite,\n      server: `${setData.allData.Server}/${setData.number}.mp3`,\n      number: setData.number,\n      name: setData.allData.name,\n      rewaya: setData.allData.rewaya,\n      suraName: suraName\n    };\n    props.addToPlaylist(collectData);\n  };\n\n  let data = /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 16\n  }, this);\n\n  let arr = [];\n\n  const suraLoop = () => {\n    let sing = null;\n\n    if (props.server && state.suraNames && state.suraNumbers && state.suraNumbers.length > 0 && state.suraNumbers) {\n      console.log('XXX');\n\n      if (props.playlist && props.playlist.length > 0) {\n        for (let i = 0; i < state.suraNumbers.length; i++) {\n          let myNumber = null;\n          let successFav = false;\n          myNumber = state.suraNumbers[i].length === 1 ? `00${state.suraNumbers[i]}` : state.suraNumbers[i].length === 2 ? `0${state.suraNumbers[i]}` : state.suraNumbers[i];\n\n          for (let k = 0; k < props.playlist.length; k++) {\n            sing = props.getData.name === props.playlist[k].name && myNumber === props.playlist[k].number && `${props.getData.Server}/${myNumber}.mp3` === props.playlist[k].server && state.suraNames[i] === props.playlist[k].suraName;\n\n            if (sing) {\n              successFav = sing;\n            }\n          }\n\n          console.log('Long');\n          arr.push( /*#__PURE__*/_jsxDEV(SurahBox, {\n            name: state.suraNames[i],\n            server: props.getData.Server,\n            number: myNumber,\n            clicked: () => clickedHandler(state.suraNumbers[i], state.suraNames[i]),\n            addFav: data => addFavFun(data, myNumber, state.suraNames[i]),\n            isFavor: successFav,\n            allData: props.getData,\n            copyText: `${props.server}/${myNumber}.mp3`\n          }, `${props.server}/${state.suraNames[i]}/${myNumber}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this));\n        }\n      } else {\n        console.log('YYY');\n\n        for (let i = 0; i < state.suraNumbers.length; i++) {\n          let myNumbers = null;\n          let successFavs = false;\n          myNumbers = state.suraNumbers[i].length === 1 ? `00${state.suraNumbers[i]}` : state.suraNumbers[i].length === 2 ? `0${state.suraNumbers[i]}` : state.suraNumbers[i];\n          console.log('Short');\n          arr.push( /*#__PURE__*/_jsxDEV(SurahBox, {\n            name: state.suraNames[i],\n            server: props.getData.Server,\n            number: myNumbers,\n            clicked: () => clickedHandler(state.suraNumbers[i], state.suraNames[i]),\n            addFav: data => addFavFun(data, myNumbers, state.suraNames[i]),\n            isFavor: successFavs,\n            allData: props.getData,\n            copyText: `${props.server}/${myNumbers}.mp3`\n          }, `${props.server}/${state.suraNames[i]}/${myNumbers}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this));\n        }\n      }\n    }\n\n    setFilterSearch(arr);\n    dispatch({\n      type: 'allSurasBoxs',\n      allSurasBoxes: arr\n    });\n  };\n\n  if (!props.loading && props.site_language) {\n    data = /*#__PURE__*/_jsxDEV(ImamPageStyled, {\n      theme: props.theme,\n      themeStyle: props.themeStyle,\n      site_lang: props.language.lang,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-search-rewaya mb-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"top-search mb-2 mb-md-0\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: `${props.language.lang === 'ar' ? '...' + props.site_language.search + ' ' + props.site_language.surah_name : props.site_language.search + ' ' + props.site_language.surah_name + '...'}`,\n              className: \"rounded-pill search-filed\",\n              onChange: e => setSearch(e.target.value),\n              dir: \"auto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"all-surah-name\",\n        children: filterSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this);\n  }\n\n  return data;\n};\n\n_s(ImamPage, \"wRtC4bm4z2M6FO0mL04Eiay8w+4=\");\n\n_c = ImamPage;\n\nconst mapStateToprops = state => ({\n  getData: state.getData,\n  suras: state.suras,\n  imamPage: state.imamPage,\n  loading: state.loading,\n  server: state.server,\n  playlist: state.playlist,\n  suraNumber: state.suraNumber,\n  server: state.server,\n  theme: state.theme,\n  themeStyle: state.themeStyle,\n  language: state.language,\n  site_language: state.site_language\n});\n\nconst mapDispatchToprops = dispatch => ({\n  showPlayer: () => dispatch(actions.showPlayer()),\n  getSurah_Number_Name: (number, suraName) => dispatch(actions.getSurah_Number_Name(number, suraName)),\n  suraLink: link => dispatch(actions.suraLink(link)),\n  playingFalse: () => dispatch(actions.playingFalse()),\n  allSuras: names => dispatch(actions.allSurasNames(names)),\n  startRequest: () => dispatch(actions.startRequest()),\n  successRequest: () => dispatch(actions.successRequest()),\n  failRequest: error => dispatch(actions.failRequest(error)),\n  imamName: name => dispatch(actions.getImamNameBeforeUpdate(name)),\n  addToPlaylist: item => dispatch(actions.addToPlayList(item)),\n  isFromFavouritePlaylist: bool => dispatch(actions.isFromFavouritePlaylist(bool)),\n  getSuras: () => dispatch(actions.getSuras())\n});\n\nexport default connect(mapStateToprops, mapDispatchToprops)(ErrorHandler(ImamPage, axios));\n\nvar _c;\n\n$RefreshReg$(_c, \"ImamPage\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/HTML/quran_project_2/quran/src/components/imamPage/ImamPage.js"],"names":["React","useEffect","useReducer","useState","ImamPageStyled","Form","SurahBox","axios","ErrorHandler","connect","actions","Loader","initialState","suraNumbers","suraNames","allSurasBoxs","myReducer","state","action","type","numbers","names","allSurasBoxes","ImamPage","props","dispatch","search","setSearch","filterSearch","setFilterSearch","startRequest","get","language","lang","then","res","suras","successRequest","arrayNames","map","num","push","data","allSuras","console","log","catch","error","failRequest","server","length","suraLoop","array2","filter","sura","name","toLocaleLowerCase","includes","number","clickedHandler","addFavFun","isFavor","allData","copyText","getData","window","scrollTo","index","suraName","fixNum","getSurah_Number_Name","suraLink","imamName","isFromFavouritePlaylist","playingFalse","showPlayer","getSuras","setData","collectData","allDataPlaylist","isFavorite","Server","rewaya","addToPlaylist","arr","sing","playlist","i","myNumber","successFav","k","myNumbers","successFavs","loading","site_language","theme","themeStyle","surah_name","e","target","value","mapStateToprops","imamPage","suraNumber","mapDispatchToprops","link","allSurasNames","getImamNameBeforeUpdate","item","addToPlayList","bool"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer, useState} from 'react';\r\nimport { ImamPageStyled } from './imamPageStyled';\r\nimport Form from 'react-bootstrap/Form';\r\nimport SurahBox from '../surahBox/surahBox';\r\nimport axios from '../../axiosBase/createAxios';\r\nimport ErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/action/getData';\r\nimport Loader from '../UI/Loader/loader';\r\n\r\nconst initialState = {\r\n    suraNumbers: [],\r\n    suraNames: [],\r\n    allSurasBoxs: []\r\n}\r\n\r\nconst myReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'surahNumbers':\r\n            return { ...state, suraNumbers: [...action.numbers] }\r\n        case 'surahNames':\r\n            return { ...state, suraNames: [...action.names] }\r\n        case 'allSurasBoxs':\r\n            return { ...state, allSurasBoxs: [...action.allSurasBoxes] }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst ImamPage = props => {\r\n        \r\n    const [state, dispatch] = useReducer(myReducer, initialState);\r\n    const [search, setSearch] = useState('');\r\n    const [filterSearch, setFilterSearch] = useState();\r\n\r\n    useEffect(() => {\r\n        props.startRequest();\r\n        axios.get(`/translations?languages=${props.language.lang}`)\r\n        .then(res => {\r\n            dispatch({type: 'surahNumbers', numbers: props.suras});\r\n            props.successRequest();\r\n            let arrayNames = [];\r\n            if(props.suras) {\r\n                props.suras.map(num => arrayNames.push(res.data[props.language.lang][`sura${num}`]));\r\n            }\r\n            dispatch({type: 'surahNames', names: arrayNames})\r\n            props.allSuras(arrayNames)\r\n            console.log('Response');\r\n        })\r\n        .catch(error => {\r\n            props.failRequest(error)\r\n        });\r\n    }, [props.language.lang]);\r\n\r\n    useEffect(() => {\r\n        props.server && state.suraNames && state.suraNumbers && state.suraNumbers.length > 0 && state.suraNumbers && suraLoop();\r\n    }, [props.server, state.suraNames, state.suraNumbers, state.suraNumbers]);\r\n\r\n    useEffect(() => {\r\n        let array2 = [];\r\n        state.allSurasBoxs.filter(sura => {\r\n            if(search === '') {\r\n                array2 = [state.allSurasBoxs];\r\n                setFilterSearch(array2);\r\n            } else if(sura.props.name.toLocaleLowerCase().includes(search.toLocaleLowerCase())) {\r\n                array2.push(\r\n                    <SurahBox\r\n                    key={`${props.server}/${sura.props.name}/${sura.props.number}/${sura.props.isFavor}`}\r\n                    name={sura.props.name}\r\n                    server={sura.props.server}\r\n                    number={sura.props.number}\r\n                    clicked={() => clickedHandler(sura.props.number, sura.props.name)}\r\n                    addFav={(data) => addFavFun(data, sura.props.number, sura.props.name)}\r\n                    isFavor={sura.props.isFavor}\r\n                    allData={sura.props.allData}\r\n                    copyText={sura.props.copyText}\r\n                />);\r\n            }\r\n        });\r\n        return setFilterSearch(array2);\r\n    }, [search, props.getData]);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, []);\r\n\r\n    console.log('Immam Page ========>>>>>>');\r\n\r\n    const clickedHandler = (index, suraName) => {\r\n        let fixNum = index.length === 1 ? `00${index}` : index.length === 2 ? `0${index}` : index;\r\n        props.getSurah_Number_Name(fixNum, suraName);\r\n        props.suraLink(`${props.server}/${fixNum}.mp3`);\r\n        props.imamName(props.getData.name);\r\n        props.isFromFavouritePlaylist(false);\r\n        props.playingFalse();\r\n        props.showPlayer();\r\n        props.getSuras();\r\n    }\r\n\r\n    const addFavFun = (data, num, suraName) => {\r\n        let setData = {...data, number: num};\r\n        const collectData = {allDataPlaylist: data, isFavorite: setData.isFavorite, server: `${setData.allData.Server}/${setData.number}.mp3`, number: setData.number, name: setData.allData.name, rewaya: setData.allData.rewaya, suraName: suraName};\r\n        props.addToPlaylist(collectData);\r\n    }\r\n\r\n    let data = <Loader />;\r\n\r\n    let arr = [];\r\n    const suraLoop = () => {\r\n        let sing= null;\r\n        if(props.server && state.suraNames && state.suraNumbers && state.suraNumbers.length > 0 && state.suraNumbers) {\r\n            console.log('XXX')\r\n            if(props.playlist && props.playlist.length > 0) {\r\n                for(let i=0; i < state.suraNumbers.length; i++) {\r\n                    let myNumber= null;\r\n                    let successFav = false;\r\n                    myNumber = state.suraNumbers[i].length === 1 ? `00${state.suraNumbers[i]}` : state.suraNumbers[i].length === 2 ? `0${state.suraNumbers[i]}` : state.suraNumbers[i];\r\n                    for (let k=0; k < props.playlist.length; k++) {\r\n                        sing= props.getData.name === props.playlist[k].name && myNumber === props.playlist[k].number && `${props.getData.Server}/${myNumber}.mp3` === props.playlist[k].server && state.suraNames[i] === props.playlist[k].suraName;\r\n                        if(sing){\r\n                            successFav = sing;\r\n                        }\r\n                    }\r\n                    console.log('Long');\r\n                    arr.push(\r\n                        <SurahBox\r\n                            key={`${props.server}/${state.suraNames[i]}/${myNumber}`}\r\n                            name={state.suraNames[i]}\r\n                            server={props.getData.Server}\r\n                            number={myNumber}\r\n                            clicked={() => clickedHandler(state.suraNumbers[i], state.suraNames[i])}\r\n                            addFav={(data) => addFavFun(data, myNumber, state.suraNames[i])}\r\n                            isFavor={successFav}\r\n                            allData={props.getData}\r\n                            copyText={`${props.server}/${myNumber}.mp3`}\r\n                        />\r\n                    )\r\n                }\r\n            } else {\r\n                console.log('YYY')\r\n                for(let i=0; i < state.suraNumbers.length; i++){\r\n                    let myNumbers= null;\r\n                    let successFavs = false;\r\n                    myNumbers = state.suraNumbers[i].length === 1 ? `00${state.suraNumbers[i]}` : state.suraNumbers[i].length === 2 ? `0${state.suraNumbers[i]}` : state.suraNumbers[i];\r\n                    console.log('Short')\r\n                    arr.push(\r\n                        <SurahBox\r\n                            key={`${props.server}/${state.suraNames[i]}/${myNumbers}`}\r\n                            name={state.suraNames[i]}\r\n                            server={props.getData.Server}\r\n                            number={myNumbers}\r\n                            clicked={() => clickedHandler(state.suraNumbers[i], state.suraNames[i])}\r\n                            addFav={(data) => addFavFun(data, myNumbers, state.suraNames[i])}\r\n                            isFavor={successFavs}\r\n                            allData={props.getData}\r\n                            copyText={`${props.server}/${myNumbers}.mp3`}\r\n                        />\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        setFilterSearch(arr);\r\n        dispatch({type: 'allSurasBoxs', allSurasBoxes: arr});\r\n    }\r\n    \r\n    if(!props.loading && props.site_language) {\r\n        data = (\r\n            <ImamPageStyled theme={props.theme} themeStyle={props.themeStyle} site_lang={props.language.lang}>\r\n                <div className='top-search-rewaya mb-5'>\r\n                    <div className='top-search mb-2 mb-md-0'>\r\n                        <Form>\r\n                            <Form.Control type='text' placeholder={`${props.language.lang === 'ar' ? '...' + props.site_language.search + ' ' + props.site_language.surah_name : props.site_language.search + ' ' + props.site_language.surah_name + '...'}`} className='rounded-pill search-filed' onChange={e => setSearch(e.target.value)} dir='auto' />\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n                <ul className='all-surah-name'>\r\n                    {filterSearch}\r\n                </ul>\r\n            </ImamPageStyled>\r\n        )\r\n    }\r\n\r\n    return data;\r\n};\r\n\r\nconst mapStateToprops = state => ({\r\n    getData: state.getData,\r\n    suras: state.suras,\r\n    imamPage: state.imamPage,\r\n    loading: state.loading,\r\n    server: state.server,\r\n    playlist: state.playlist,\r\n    suraNumber: state.suraNumber,\r\n    server: state.server,\r\n    theme: state.theme,\r\n    themeStyle: state.themeStyle,\r\n    language: state.language,\r\n    site_language: state.site_language\r\n})\r\n\r\nconst mapDispatchToprops = dispatch => ({\r\n    showPlayer: () => dispatch(actions.showPlayer()),\r\n    getSurah_Number_Name: (number, suraName) => dispatch(actions.getSurah_Number_Name(number, suraName)),\r\n    suraLink: (link) => dispatch(actions.suraLink(link)),\r\n    playingFalse: () => dispatch(actions.playingFalse()),\r\n    allSuras: (names) => dispatch(actions.allSurasNames(names)),\r\n    startRequest: () => dispatch(actions.startRequest()),\r\n    successRequest: () => dispatch(actions.successRequest()),\r\n    failRequest: (error) => dispatch(actions.failRequest(error)),\r\n    imamName: (name) => dispatch(actions.getImamNameBeforeUpdate(name)),\r\n    addToPlaylist: (item) => dispatch(actions.addToPlayList(item)),\r\n    isFromFavouritePlaylist: (bool) => dispatch(actions.isFromFavouritePlaylist(bool)),\r\n    getSuras: () => dispatch(actions.getSuras())\r\n})\r\n\r\nexport default connect(mapStateToprops, mapDispatchToprops)(ErrorHandler(ImamPage, axios));"]},"metadata":{},"sourceType":"module"}