{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\HTML\\\\quran_project_2\\\\quran\\\\src\\\\components\\\\imamPage\\\\ImamPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer, useState } from 'react';\nimport { ImamPageStyled } from './imamPageStyled';\nimport Form from 'react-bootstrap/Form';\nimport SurahBox from '../surahBox/surahBox';\nimport axios from '../../axiosBase/createAxios';\nimport ErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/action/getData';\nimport Loader from '../UI/Loader/loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  suraNumbers: [],\n  suraNames: [],\n  allSurasBoxs: []\n};\n\nconst myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'surahNumbers':\n      return { ...state,\n        suraNumbers: [...action.numbers]\n      };\n\n    case 'surahNames':\n      return { ...state,\n        suraNames: [...action.names]\n      };\n\n    case 'allSurasBoxs':\n      return { ...state,\n        allSurasBoxs: [...action.allSurasBoxes]\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst ImamPage = ({\n  startRequest,\n  language,\n  suras,\n  successRequest,\n  allSuras,\n  failRequest,\n  server,\n  getData,\n  getSurah_Number_Name,\n  suraLink,\n  imamName,\n  isFromFavouritePlaylist,\n  playingFalse,\n  showPlayer,\n  getSuras,\n  addToPlaylist,\n  playlist,\n  loading,\n  site_language,\n  theme,\n  themeStyle\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(myReducer, initialState);\n  const [search, setSearch] = useState('');\n  const [filterSearch, setFilterSearch] = useState();\n  useEffect(() => {\n    startRequest();\n    axios.get(`/translations?languages=${language.lang}`).then(res => {\n      dispatch({\n        type: 'surahNumbers',\n        numbers: suras\n      });\n      successRequest();\n      let arrayNames = [];\n\n      if (suras) {\n        suras.map(num => arrayNames.push(res.data[language.lang][`sura${num}`]));\n      }\n\n      dispatch({\n        type: 'surahNames',\n        names: arrayNames\n      });\n      allSuras(arrayNames);\n      console.log('Response');\n    }).catch(error => {\n      failRequest(error);\n    });\n  }, [language.lang, allSuras, startRequest, successRequest, failRequest, suras]);\n  useEffect(() => {\n    server && state.suraNames && state.suraNumbers && state.suraNumbers.length > 0 && state.suraNumbers && suraLoop();\n  }, [server, state.suraNames, state.suraNumbers, state.suraNumbers]);\n  useEffect(() => {\n    let array2 = [];\n    state.allSurasBoxs.filter(sura => {\n      if (search === '') {\n        array2 = [state.allSurasBoxs];\n        setFilterSearch(array2);\n      } else if (sura.props.name.toLocaleLowerCase().includes(search.toLocaleLowerCase())) {\n        array2.push( /*#__PURE__*/_jsxDEV(SurahBox, {\n          name: sura.props.name,\n          server: sura.props.server,\n          number: sura.props.number,\n          clicked: () => clickedHandler(sura.props.number, sura.props.name),\n          addFav: data => addFavFun(data, sura.props.number, sura.props.name),\n          isFavor: sura.props.isFavor,\n          allData: sura.props.allData,\n          copyText: sura.props.copyText\n        }, `${server}/${sura.props.name}/${sura.props.number}/${sura.props.isFavor}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this));\n      }\n\n      return array2;\n    });\n    setFilterSearch(array2);\n  }, [search, getData]);\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  console.log('Immam Page ========>>>>>>');\n\n  const clickedHandler = (index, suraName) => {\n    let fixNum = index.length === 1 ? `00${index}` : index.length === 2 ? `0${index}` : index;\n    getSurah_Number_Name(fixNum, suraName);\n    suraLink(`${server}/${fixNum}.mp3`);\n    imamName(getData.name);\n    isFromFavouritePlaylist(false);\n    playingFalse();\n    showPlayer();\n    getSuras();\n  };\n\n  const addFavFun = (data, num, suraName) => {\n    let setData = { ...data,\n      number: num\n    };\n    const collectData = {\n      allDataPlaylist: data,\n      isFavorite: setData.isFavorite,\n      server: `${setData.allData.Server}/${setData.number}.mp3`,\n      number: setData.number,\n      name: setData.allData.name,\n      rewaya: setData.allData.rewaya,\n      suraName: suraName\n    };\n    addToPlaylist(collectData);\n  };\n\n  let data = /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 16\n  }, this);\n\n  let arr = [];\n\n  const suraLoop = () => {\n    let sing = null;\n\n    if (server && state.suraNames && state.suraNumbers && state.suraNumbers.length > 0 && state.suraNumbers) {\n      console.log('XXX');\n\n      if (playlist && playlist.length > 0) {\n        for (let i = 0; i < state.suraNumbers.length; i++) {\n          let myNumber = null;\n          let successFav = false;\n          myNumber = state.suraNumbers[i].length === 1 ? `00${state.suraNumbers[i]}` : state.suraNumbers[i].length === 2 ? `0${state.suraNumbers[i]}` : state.suraNumbers[i];\n\n          for (let k = 0; k < playlist.length; k++) {\n            sing = getData.name === playlist[k].name && myNumber === playlist[k].number && `${getData.Server}/${myNumber}.mp3` === playlist[k].server && state.suraNames[i] === playlist[k].suraName;\n\n            if (sing) {\n              successFav = sing;\n            }\n          }\n\n          console.log('Long');\n          arr.push( /*#__PURE__*/_jsxDEV(SurahBox, {\n            name: state.suraNames[i],\n            server: getData.Server,\n            number: myNumber,\n            clicked: () => clickedHandler(state.suraNumbers[i], state.suraNames[i]),\n            addFav: data => addFavFun(data, myNumber, state.suraNames[i]),\n            isFavor: successFav,\n            allData: getData,\n            copyText: `${server}/${myNumber}.mp3`\n          }, `${server}/${state.suraNames[i]}/${myNumber}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this));\n        }\n      } else {\n        console.log('YYY');\n\n        for (let i = 0; i < state.suraNumbers.length; i++) {\n          let myNumbers = null;\n          let successFavs = false;\n          myNumbers = state.suraNumbers[i].length === 1 ? `00${state.suraNumbers[i]}` : state.suraNumbers[i].length === 2 ? `0${state.suraNumbers[i]}` : state.suraNumbers[i];\n          console.log('Short');\n          arr.push( /*#__PURE__*/_jsxDEV(SurahBox, {\n            name: state.suraNames[i],\n            server: getData.Server,\n            number: myNumbers,\n            clicked: () => clickedHandler(state.suraNumbers[i], state.suraNames[i]),\n            addFav: data => addFavFun(data, myNumbers, state.suraNames[i]),\n            isFavor: successFavs,\n            allData: getData,\n            copyText: `${server}/${myNumbers}.mp3`\n          }, `${server}/${state.suraNames[i]}/${myNumbers}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this));\n        }\n      }\n    }\n\n    setFilterSearch(arr);\n    dispatch({\n      type: 'allSurasBoxs',\n      allSurasBoxes: arr\n    });\n  };\n\n  if (!loading && site_language) {\n    data = /*#__PURE__*/_jsxDEV(ImamPageStyled, {\n      theme: theme,\n      themeStyle: themeStyle,\n      site_lang: language.lang,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-search-rewaya mb-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"top-search mb-2 mb-md-0\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: `${language.lang === 'ar' ? '...' + site_language.search + ' ' + site_language.surah_name : site_language.search + ' ' + site_language.surah_name + '...'}`,\n              className: \"rounded-pill search-filed\",\n              onChange: e => setSearch(e.target.value),\n              dir: \"auto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"all-surah-name\",\n        children: filterSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this);\n  }\n\n  return data;\n}; //  =============================================================\n// const ImamPage = props => {\n//     const [state, dispatch] = useReducer(myReducer, initialState);\n//     const [search, setSearch] = useState('');\n//     const [filterSearch, setFilterSearch] = useState();\n//     useEffect(() => {\n//         props.startRequest();\n//         axios.get(`/translations?languages=${props.language.lang}`)\n//         .then(res => {\n//             dispatch({type: 'surahNumbers', numbers: props.suras});\n//             props.successRequest();\n//             let arrayNames = [];\n//             if(props.suras) {\n//                 props.suras.map(num => arrayNames.push(res.data[props.language.lang][`sura${num}`]));\n//             }\n//             dispatch({type: 'surahNames', names: arrayNames})\n//             props.allSuras(arrayNames)\n//             console.log('Response');\n//         })\n//         .catch(error => {\n//             props.failRequest(error)\n//         });\n//     }, [props.language.lang]);\n//     useEffect(() => {\n//         props.server && state.suraNames && state.suraNumbers && state.suraNumbers.length > 0 && state.suraNumbers && suraLoop();\n//     }, [props.server, state.suraNames, state.suraNumbers, state.suraNumbers]);\n//     useEffect(() => {\n//         let array2 = [];\n//         state.allSurasBoxs.filter(sura => {\n//             if(search === '') {\n//                 array2 = [state.allSurasBoxs];\n//                 setFilterSearch(array2);\n//             } else if(sura.props.name.toLocaleLowerCase().includes(search.toLocaleLowerCase())) {\n//                 console.log(sura)\n//                 array2.push(\n//                     <SurahBox\n//                     key={`${props.server}/${sura.props.name}/${sura.props.number}/${sura.props.isFavor}`}\n//                     name={sura.props.name}\n//                     server={sura.props.server}\n//                     number={sura.props.number}\n//                     clicked={() => clickedHandler(sura.props.number, sura.props.name)}\n//                     addFav={(data) => addFavFun(data, sura.props.number, sura.props.name)}\n//                     isFavor={sura.props.isFavor}\n//                     allData={sura.props.allData}\n//                     copyText={sura.props.copyText}\n//                 />);\n//             }\n//             return array2;\n//         });\n//         setFilterSearch(array2);\n//     }, [search, props.getData]);\n//     useEffect(() => {\n//         window.scrollTo(0, 0)\n//     }, []);\n//     console.log('Immam Page ========>>>>>>');\n//     const clickedHandler = (index, suraName) => {\n//         let fixNum = index.length === 1 ? `00${index}` : index.length === 2 ? `0${index}` : index;\n//         props.getSurah_Number_Name(fixNum, suraName);\n//         props.suraLink(`${props.server}/${fixNum}.mp3`);\n//         props.imamName(props.getData.name);\n//         props.isFromFavouritePlaylist(false);\n//         props.playingFalse();\n//         props.showPlayer();\n//         props.getSuras();\n//     }\n//     const addFavFun = (data, num, suraName) => {\n//         let setData = {...data, number: num};\n//         const collectData = {allDataPlaylist: data, isFavorite: setData.isFavorite, server: `${setData.allData.Server}/${setData.number}.mp3`, number: setData.number, name: setData.allData.name, rewaya: setData.allData.rewaya, suraName: suraName};\n//         props.addToPlaylist(collectData);\n//     }\n//     let data = <Loader />;\n//     let arr = [];\n//     const suraLoop = () => {\n//         let sing= null;\n//         if(props.server && state.suraNames && state.suraNumbers && state.suraNumbers.length > 0 && state.suraNumbers) {\n//             console.log('XXX')\n//             if(props.playlist && props.playlist.length > 0) {\n//                 for(let i=0; i < state.suraNumbers.length; i++) {\n//                     let myNumber= null;\n//                     let successFav = false;\n//                     myNumber = state.suraNumbers[i].length === 1 ? `00${state.suraNumbers[i]}` : state.suraNumbers[i].length === 2 ? `0${state.suraNumbers[i]}` : state.suraNumbers[i];\n//                     for (let k=0; k < props.playlist.length; k++) {\n//                         sing= props.getData.name === props.playlist[k].name && myNumber === props.playlist[k].number && `${props.getData.Server}/${myNumber}.mp3` === props.playlist[k].server && state.suraNames[i] === props.playlist[k].suraName;\n//                         if(sing){\n//                             successFav = sing;\n//                         }\n//                     }\n//                     console.log('Long');\n//                     arr.push(\n//                         <SurahBox\n//                             key={`${props.server}/${state.suraNames[i]}/${myNumber}`}\n//                             name={state.suraNames[i]}\n//                             server={props.getData.Server}\n//                             number={myNumber}\n//                             clicked={() => clickedHandler(state.suraNumbers[i], state.suraNames[i])}\n//                             addFav={(data) => addFavFun(data, myNumber, state.suraNames[i])}\n//                             isFavor={successFav}\n//                             allData={props.getData}\n//                             copyText={`${props.server}/${myNumber}.mp3`}\n//                         />\n//                     )\n//                 }\n//             } else {\n//                 console.log('YYY')\n//                 for(let i=0; i < state.suraNumbers.length; i++){\n//                     let myNumbers= null;\n//                     let successFavs = false;\n//                     myNumbers = state.suraNumbers[i].length === 1 ? `00${state.suraNumbers[i]}` : state.suraNumbers[i].length === 2 ? `0${state.suraNumbers[i]}` : state.suraNumbers[i];\n//                     console.log('Short')\n//                     arr.push(\n//                         <SurahBox\n//                             key={`${props.server}/${state.suraNames[i]}/${myNumbers}`}\n//                             name={state.suraNames[i]}\n//                             server={props.getData.Server}\n//                             number={myNumbers}\n//                             clicked={() => clickedHandler(state.suraNumbers[i], state.suraNames[i])}\n//                             addFav={(data) => addFavFun(data, myNumbers, state.suraNames[i])}\n//                             isFavor={successFavs}\n//                             allData={props.getData}\n//                             copyText={`${props.server}/${myNumbers}.mp3`}\n//                         />\n//                     )\n//                 }\n//             }\n//         }\n//         setFilterSearch(arr);\n//         dispatch({type: 'allSurasBoxs', allSurasBoxes: arr});\n//     }\n//     if(!props.loading && props.site_language) {\n//         data = (\n//             <ImamPageStyled theme={props.theme} themeStyle={props.themeStyle} site_lang={props.language.lang}>\n//                 <div className='top-search-rewaya mb-5'>\n//                     <div className='top-search mb-2 mb-md-0'>\n//                         <Form>\n//                             <Form.Control type='text' placeholder={`${props.language.lang === 'ar' ? '...' + props.site_language.search + ' ' + props.site_language.surah_name : props.site_language.search + ' ' + props.site_language.surah_name + '...'}`} className='rounded-pill search-filed' onChange={e => setSearch(e.target.value)} dir='auto' />\n//                         </Form>\n//                     </div>\n//                 </div>\n//                 <ul className='all-surah-name'>\n//                     {filterSearch}\n//                 </ul>\n//             </ImamPageStyled>\n//         )\n//     }\n//     return data;\n// };\n\n\n_s(ImamPage, \"wRtC4bm4z2M6FO0mL04Eiay8w+4=\");\n\n_c = ImamPage;\n\nconst mapStateToprops = state => ({\n  getData: state.getData,\n  suras: state.suras,\n  imamPage: state.imamPage,\n  loading: state.loading,\n  server: state.server,\n  playlist: state.playlist,\n  suraNumber: state.suraNumber,\n  theme: state.theme,\n  themeStyle: state.themeStyle,\n  language: state.language,\n  site_language: state.site_language\n});\n\nconst mapDispatchToprops = dispatch => ({\n  showPlayer: () => dispatch(actions.showPlayer()),\n  getSurah_Number_Name: (number, suraName) => dispatch(actions.getSurah_Number_Name(number, suraName)),\n  suraLink: link => dispatch(actions.suraLink(link)),\n  playingFalse: () => dispatch(actions.playingFalse()),\n  allSuras: names => dispatch(actions.allSurasNames(names)),\n  startRequest: () => dispatch(actions.startRequest()),\n  successRequest: () => dispatch(actions.successRequest()),\n  failRequest: error => dispatch(actions.failRequest(error)),\n  imamName: name => dispatch(actions.getImamNameBeforeUpdate(name)),\n  addToPlaylist: item => dispatch(actions.addToPlayList(item)),\n  isFromFavouritePlaylist: bool => dispatch(actions.isFromFavouritePlaylist(bool)),\n  getSuras: () => dispatch(actions.getSuras())\n});\n\nexport default connect(mapStateToprops, mapDispatchToprops)(ErrorHandler(ImamPage, axios));\n\nvar _c;\n\n$RefreshReg$(_c, \"ImamPage\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/HTML/quran_project_2/quran/src/components/imamPage/ImamPage.js"],"names":["React","useEffect","useReducer","useState","ImamPageStyled","Form","SurahBox","axios","ErrorHandler","connect","actions","Loader","initialState","suraNumbers","suraNames","allSurasBoxs","myReducer","state","action","type","numbers","names","allSurasBoxes","ImamPage","startRequest","language","suras","successRequest","allSuras","failRequest","server","getData","getSurah_Number_Name","suraLink","imamName","isFromFavouritePlaylist","playingFalse","showPlayer","getSuras","addToPlaylist","playlist","loading","site_language","theme","themeStyle","dispatch","search","setSearch","filterSearch","setFilterSearch","get","lang","then","res","arrayNames","map","num","push","data","console","log","catch","error","length","suraLoop","array2","filter","sura","props","name","toLocaleLowerCase","includes","number","clickedHandler","addFavFun","isFavor","allData","copyText","window","scrollTo","index","suraName","fixNum","setData","collectData","allDataPlaylist","isFavorite","Server","rewaya","arr","sing","i","myNumber","successFav","k","myNumbers","successFavs","surah_name","e","target","value","mapStateToprops","imamPage","suraNumber","mapDispatchToprops","link","allSurasNames","getImamNameBeforeUpdate","item","addToPlayList","bool"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer, useState} from 'react';\r\nimport { ImamPageStyled } from './imamPageStyled';\r\nimport Form from 'react-bootstrap/Form';\r\nimport SurahBox from '../surahBox/surahBox';\r\nimport axios from '../../axiosBase/createAxios';\r\nimport ErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/action/getData';\r\nimport Loader from '../UI/Loader/loader';\r\n\r\nconst initialState = {\r\n    suraNumbers: [],\r\n    suraNames: [],\r\n    allSurasBoxs: []\r\n}\r\n\r\nconst myReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'surahNumbers':\r\n            return { ...state, suraNumbers: [...action.numbers] }\r\n        case 'surahNames':\r\n            return { ...state, suraNames: [...action.names] }\r\n        case 'allSurasBoxs':\r\n            return { ...state, allSurasBoxs: [...action.allSurasBoxes] }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst ImamPage = ({ startRequest, language, suras, successRequest, allSuras, failRequest, server, getData, getSurah_Number_Name, suraLink, imamName, isFromFavouritePlaylist, playingFalse, showPlayer, getSuras, addToPlaylist, playlist, loading, site_language, theme, themeStyle}) => {\r\n        \r\n    const [state, dispatch] = useReducer(myReducer, initialState);\r\n    const [search, setSearch] = useState('');\r\n    const [filterSearch, setFilterSearch] = useState();\r\n\r\n    useEffect(() => {\r\n        startRequest();\r\n        axios.get(`/translations?languages=${language.lang}`)\r\n        .then(res => {\r\n            dispatch({type: 'surahNumbers', numbers: suras});\r\n            successRequest();\r\n            let arrayNames = [];\r\n            if(suras) {\r\n                suras.map(num => arrayNames.push(res.data[language.lang][`sura${num}`]));\r\n            }\r\n            dispatch({type: 'surahNames', names: arrayNames})\r\n            allSuras(arrayNames);\r\n            console.log('Response');\r\n        })\r\n        .catch(error => {\r\n            failRequest(error)\r\n        });\r\n    }, [language.lang, allSuras, startRequest, successRequest, failRequest, suras]);\r\n\r\n    useEffect(() => {\r\n        server && state.suraNames && state.suraNumbers && state.suraNumbers.length > 0 && state.suraNumbers && suraLoop();\r\n    }, [server, state.suraNames, state.suraNumbers, state.suraNumbers]);\r\n\r\n    useEffect(() => {\r\n        let array2 = [];\r\n        state.allSurasBoxs.filter(sura => {\r\n            if(search === '') {\r\n                array2 = [state.allSurasBoxs];\r\n                setFilterSearch(array2);\r\n            } else if(sura.props.name.toLocaleLowerCase().includes(search.toLocaleLowerCase())) {\r\n                array2.push(\r\n                    <SurahBox\r\n                    key={`${server}/${sura.props.name}/${sura.props.number}/${sura.props.isFavor}`}\r\n                    name={sura.props.name}\r\n                    server={sura.props.server}\r\n                    number={sura.props.number}\r\n                    clicked={() => clickedHandler(sura.props.number, sura.props.name)}\r\n                    addFav={(data) => addFavFun(data, sura.props.number, sura.props.name)}\r\n                    isFavor={sura.props.isFavor}\r\n                    allData={sura.props.allData}\r\n                    copyText={sura.props.copyText}\r\n                />);\r\n            }\r\n            return array2;\r\n        });\r\n        setFilterSearch(array2);\r\n    }, [search, getData]);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, []);\r\n\r\n    console.log('Immam Page ========>>>>>>');\r\n\r\n    const clickedHandler = (index, suraName) => {\r\n        let fixNum = index.length === 1 ? `00${index}` : index.length === 2 ? `0${index}` : index;\r\n        getSurah_Number_Name(fixNum, suraName);\r\n        suraLink(`${server}/${fixNum}.mp3`);\r\n        imamName(getData.name);\r\n        isFromFavouritePlaylist(false);\r\n        playingFalse();\r\n        showPlayer();\r\n        getSuras();\r\n    }\r\n\r\n    const addFavFun = (data, num, suraName) => {\r\n        let setData = {...data, number: num};\r\n        const collectData = {allDataPlaylist: data, isFavorite: setData.isFavorite, server: `${setData.allData.Server}/${setData.number}.mp3`, number: setData.number, name: setData.allData.name, rewaya: setData.allData.rewaya, suraName: suraName};\r\n        addToPlaylist(collectData);\r\n    }\r\n\r\n    let data = <Loader />;\r\n\r\n    let arr = [];\r\n    const suraLoop = () => {\r\n        let sing= null;\r\n        if(server && state.suraNames && state.suraNumbers && state.suraNumbers.length > 0 && state.suraNumbers) {\r\n            console.log('XXX')\r\n            if(playlist && playlist.length > 0) {\r\n                for(let i=0; i < state.suraNumbers.length; i++) {\r\n                    let myNumber= null;\r\n                    let successFav = false;\r\n                    myNumber = state.suraNumbers[i].length === 1 ? `00${state.suraNumbers[i]}` : state.suraNumbers[i].length === 2 ? `0${state.suraNumbers[i]}` : state.suraNumbers[i];\r\n                    for (let k=0; k < playlist.length; k++) {\r\n                        sing= getData.name === playlist[k].name && myNumber === playlist[k].number && `${getData.Server}/${myNumber}.mp3` === playlist[k].server && state.suraNames[i] === playlist[k].suraName;\r\n                        if(sing){\r\n                            successFav = sing;\r\n                        }\r\n                    }\r\n                    console.log('Long');\r\n                    arr.push(\r\n                        <SurahBox\r\n                            key={`${server}/${state.suraNames[i]}/${myNumber}`}\r\n                            name={state.suraNames[i]}\r\n                            server={getData.Server}\r\n                            number={myNumber}\r\n                            clicked={() => clickedHandler(state.suraNumbers[i], state.suraNames[i])}\r\n                            addFav={(data) => addFavFun(data, myNumber, state.suraNames[i])}\r\n                            isFavor={successFav}\r\n                            allData={getData}\r\n                            copyText={`${server}/${myNumber}.mp3`}\r\n                        />\r\n                    )\r\n                }\r\n            } else {\r\n                console.log('YYY')\r\n                for(let i=0; i < state.suraNumbers.length; i++){\r\n                    let myNumbers= null;\r\n                    let successFavs = false;\r\n                    myNumbers = state.suraNumbers[i].length === 1 ? `00${state.suraNumbers[i]}` : state.suraNumbers[i].length === 2 ? `0${state.suraNumbers[i]}` : state.suraNumbers[i];\r\n                    console.log('Short')\r\n                    arr.push(\r\n                        <SurahBox\r\n                            key={`${server}/${state.suraNames[i]}/${myNumbers}`}\r\n                            name={state.suraNames[i]}\r\n                            server={getData.Server}\r\n                            number={myNumbers}\r\n                            clicked={() => clickedHandler(state.suraNumbers[i], state.suraNames[i])}\r\n                            addFav={(data) => addFavFun(data, myNumbers, state.suraNames[i])}\r\n                            isFavor={successFavs}\r\n                            allData={getData}\r\n                            copyText={`${server}/${myNumbers}.mp3`}\r\n                        />\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        setFilterSearch(arr);\r\n        dispatch({type: 'allSurasBoxs', allSurasBoxes: arr});\r\n    }\r\n    \r\n    if(!loading && site_language) {\r\n        data = (\r\n            <ImamPageStyled theme={theme} themeStyle={themeStyle} site_lang={language.lang}>\r\n                <div className='top-search-rewaya mb-5'>\r\n                    <div className='top-search mb-2 mb-md-0'>\r\n                        <Form>\r\n                            <Form.Control type='text' placeholder={`${language.lang === 'ar' ? '...' + site_language.search + ' ' + site_language.surah_name : site_language.search + ' ' + site_language.surah_name + '...'}`} className='rounded-pill search-filed' onChange={e => setSearch(e.target.value)} dir='auto' />\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n                <ul className='all-surah-name'>\r\n                    {filterSearch}\r\n                </ul>\r\n            </ImamPageStyled>\r\n        )\r\n    }\r\n\r\n    return data;\r\n};\r\n\r\n//  =============================================================\r\n\r\n// const ImamPage = props => {\r\n        \r\n//     const [state, dispatch] = useReducer(myReducer, initialState);\r\n//     const [search, setSearch] = useState('');\r\n//     const [filterSearch, setFilterSearch] = useState();\r\n\r\n//     useEffect(() => {\r\n//         props.startRequest();\r\n//         axios.get(`/translations?languages=${props.language.lang}`)\r\n//         .then(res => {\r\n//             dispatch({type: 'surahNumbers', numbers: props.suras});\r\n//             props.successRequest();\r\n//             let arrayNames = [];\r\n//             if(props.suras) {\r\n//                 props.suras.map(num => arrayNames.push(res.data[props.language.lang][`sura${num}`]));\r\n//             }\r\n//             dispatch({type: 'surahNames', names: arrayNames})\r\n//             props.allSuras(arrayNames)\r\n//             console.log('Response');\r\n//         })\r\n//         .catch(error => {\r\n//             props.failRequest(error)\r\n//         });\r\n//     }, [props.language.lang]);\r\n\r\n//     useEffect(() => {\r\n//         props.server && state.suraNames && state.suraNumbers && state.suraNumbers.length > 0 && state.suraNumbers && suraLoop();\r\n//     }, [props.server, state.suraNames, state.suraNumbers, state.suraNumbers]);\r\n\r\n//     useEffect(() => {\r\n//         let array2 = [];\r\n//         state.allSurasBoxs.filter(sura => {\r\n//             if(search === '') {\r\n//                 array2 = [state.allSurasBoxs];\r\n//                 setFilterSearch(array2);\r\n//             } else if(sura.props.name.toLocaleLowerCase().includes(search.toLocaleLowerCase())) {\r\n//                 console.log(sura)\r\n//                 array2.push(\r\n//                     <SurahBox\r\n//                     key={`${props.server}/${sura.props.name}/${sura.props.number}/${sura.props.isFavor}`}\r\n//                     name={sura.props.name}\r\n//                     server={sura.props.server}\r\n//                     number={sura.props.number}\r\n//                     clicked={() => clickedHandler(sura.props.number, sura.props.name)}\r\n//                     addFav={(data) => addFavFun(data, sura.props.number, sura.props.name)}\r\n//                     isFavor={sura.props.isFavor}\r\n//                     allData={sura.props.allData}\r\n//                     copyText={sura.props.copyText}\r\n//                 />);\r\n//             }\r\n//             return array2;\r\n//         });\r\n//         setFilterSearch(array2);\r\n//     }, [search, props.getData]);\r\n\r\n//     useEffect(() => {\r\n//         window.scrollTo(0, 0)\r\n//     }, []);\r\n\r\n//     console.log('Immam Page ========>>>>>>');\r\n\r\n//     const clickedHandler = (index, suraName) => {\r\n//         let fixNum = index.length === 1 ? `00${index}` : index.length === 2 ? `0${index}` : index;\r\n//         props.getSurah_Number_Name(fixNum, suraName);\r\n//         props.suraLink(`${props.server}/${fixNum}.mp3`);\r\n//         props.imamName(props.getData.name);\r\n//         props.isFromFavouritePlaylist(false);\r\n//         props.playingFalse();\r\n//         props.showPlayer();\r\n//         props.getSuras();\r\n//     }\r\n\r\n//     const addFavFun = (data, num, suraName) => {\r\n//         let setData = {...data, number: num};\r\n//         const collectData = {allDataPlaylist: data, isFavorite: setData.isFavorite, server: `${setData.allData.Server}/${setData.number}.mp3`, number: setData.number, name: setData.allData.name, rewaya: setData.allData.rewaya, suraName: suraName};\r\n//         props.addToPlaylist(collectData);\r\n//     }\r\n\r\n//     let data = <Loader />;\r\n\r\n//     let arr = [];\r\n//     const suraLoop = () => {\r\n//         let sing= null;\r\n//         if(props.server && state.suraNames && state.suraNumbers && state.suraNumbers.length > 0 && state.suraNumbers) {\r\n//             console.log('XXX')\r\n//             if(props.playlist && props.playlist.length > 0) {\r\n//                 for(let i=0; i < state.suraNumbers.length; i++) {\r\n//                     let myNumber= null;\r\n//                     let successFav = false;\r\n//                     myNumber = state.suraNumbers[i].length === 1 ? `00${state.suraNumbers[i]}` : state.suraNumbers[i].length === 2 ? `0${state.suraNumbers[i]}` : state.suraNumbers[i];\r\n//                     for (let k=0; k < props.playlist.length; k++) {\r\n//                         sing= props.getData.name === props.playlist[k].name && myNumber === props.playlist[k].number && `${props.getData.Server}/${myNumber}.mp3` === props.playlist[k].server && state.suraNames[i] === props.playlist[k].suraName;\r\n//                         if(sing){\r\n//                             successFav = sing;\r\n//                         }\r\n//                     }\r\n//                     console.log('Long');\r\n//                     arr.push(\r\n//                         <SurahBox\r\n//                             key={`${props.server}/${state.suraNames[i]}/${myNumber}`}\r\n//                             name={state.suraNames[i]}\r\n//                             server={props.getData.Server}\r\n//                             number={myNumber}\r\n//                             clicked={() => clickedHandler(state.suraNumbers[i], state.suraNames[i])}\r\n//                             addFav={(data) => addFavFun(data, myNumber, state.suraNames[i])}\r\n//                             isFavor={successFav}\r\n//                             allData={props.getData}\r\n//                             copyText={`${props.server}/${myNumber}.mp3`}\r\n//                         />\r\n//                     )\r\n//                 }\r\n//             } else {\r\n//                 console.log('YYY')\r\n//                 for(let i=0; i < state.suraNumbers.length; i++){\r\n//                     let myNumbers= null;\r\n//                     let successFavs = false;\r\n//                     myNumbers = state.suraNumbers[i].length === 1 ? `00${state.suraNumbers[i]}` : state.suraNumbers[i].length === 2 ? `0${state.suraNumbers[i]}` : state.suraNumbers[i];\r\n//                     console.log('Short')\r\n//                     arr.push(\r\n//                         <SurahBox\r\n//                             key={`${props.server}/${state.suraNames[i]}/${myNumbers}`}\r\n//                             name={state.suraNames[i]}\r\n//                             server={props.getData.Server}\r\n//                             number={myNumbers}\r\n//                             clicked={() => clickedHandler(state.suraNumbers[i], state.suraNames[i])}\r\n//                             addFav={(data) => addFavFun(data, myNumbers, state.suraNames[i])}\r\n//                             isFavor={successFavs}\r\n//                             allData={props.getData}\r\n//                             copyText={`${props.server}/${myNumbers}.mp3`}\r\n//                         />\r\n//                     )\r\n//                 }\r\n//             }\r\n//         }\r\n//         setFilterSearch(arr);\r\n//         dispatch({type: 'allSurasBoxs', allSurasBoxes: arr});\r\n//     }\r\n    \r\n//     if(!props.loading && props.site_language) {\r\n//         data = (\r\n//             <ImamPageStyled theme={props.theme} themeStyle={props.themeStyle} site_lang={props.language.lang}>\r\n//                 <div className='top-search-rewaya mb-5'>\r\n//                     <div className='top-search mb-2 mb-md-0'>\r\n//                         <Form>\r\n//                             <Form.Control type='text' placeholder={`${props.language.lang === 'ar' ? '...' + props.site_language.search + ' ' + props.site_language.surah_name : props.site_language.search + ' ' + props.site_language.surah_name + '...'}`} className='rounded-pill search-filed' onChange={e => setSearch(e.target.value)} dir='auto' />\r\n//                         </Form>\r\n//                     </div>\r\n//                 </div>\r\n//                 <ul className='all-surah-name'>\r\n//                     {filterSearch}\r\n//                 </ul>\r\n//             </ImamPageStyled>\r\n//         )\r\n//     }\r\n\r\n//     return data;\r\n// };\r\n\r\nconst mapStateToprops = state => ({\r\n    getData: state.getData,\r\n    suras: state.suras,\r\n    imamPage: state.imamPage,\r\n    loading: state.loading,\r\n    server: state.server,\r\n    playlist: state.playlist,\r\n    suraNumber: state.suraNumber,\r\n    theme: state.theme,\r\n    themeStyle: state.themeStyle,\r\n    language: state.language,\r\n    site_language: state.site_language\r\n})\r\n\r\nconst mapDispatchToprops = dispatch => ({\r\n    showPlayer: () => dispatch(actions.showPlayer()),\r\n    getSurah_Number_Name: (number, suraName) => dispatch(actions.getSurah_Number_Name(number, suraName)),\r\n    suraLink: (link) => dispatch(actions.suraLink(link)),\r\n    playingFalse: () => dispatch(actions.playingFalse()),\r\n    allSuras: (names) => dispatch(actions.allSurasNames(names)),\r\n    startRequest: () => dispatch(actions.startRequest()),\r\n    successRequest: () => dispatch(actions.successRequest()),\r\n    failRequest: (error) => dispatch(actions.failRequest(error)),\r\n    imamName: (name) => dispatch(actions.getImamNameBeforeUpdate(name)),\r\n    addToPlaylist: (item) => dispatch(actions.addToPlayList(item)),\r\n    isFromFavouritePlaylist: (bool) => dispatch(actions.isFromFavouritePlaylist(bool)),\r\n    getSuras: () => dispatch(actions.getSuras())\r\n})\r\n\r\nexport default connect(mapStateToprops, mapDispatchToprops)(ErrorHandler(ImamPage, axios));"]},"metadata":{},"sourceType":"module"}