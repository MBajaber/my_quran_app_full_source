{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\HTML\\\\quran_project_2\\\\quran\\\\src\\\\components\\\\audioPlayer\\\\audioPlayer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useCallback } from 'react';\nimport { PlayerContent } from './audioPlayerStyled';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { FaRandom } from 'react-icons/fa';\nimport { CgTrashEmpty } from 'react-icons/cg';\nimport { AiFillHeart } from 'react-icons/ai';\nimport { BsArrowRight } from 'react-icons/bs';\nimport Container from 'react-bootstrap/Container';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/action/getData';\nimport Playlist from '../playlist/playlist';\nimport AudioPlayer from 'react-h5-audio-player';\nimport 'react-h5-audio-player/lib/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SongPlayer = props => {\n  _s();\n\n  const [showfavPlaylist, setShowfavPlaylist] = useState(false);\n  const favPlaylistclasses = showfavPlaylist ? ['playlist_list', 'show'] : ['playlist_list'];\n  const [autoPlayAudio, setAutoPlayAudio] = useState(false);\n\n  const randomChoice = () => {\n    console.log('Random');\n\n    if (props.isRandom) {\n      const getRandom = Math.floor(Math.random() * props.suras.length).toString();\n      const num = props.suras[getRandom].length === 1 ? `00${props.suras[getRandom]}` : props.suras[getRandom].length === 2 ? `0${props.suras[getRandom]}` : props.suras[getRandom];\n      props.suraLinkRandom(num);\n      let getName = props.allSurasNames[getRandom];\n      props.changeName(getName);\n      props.isFromFavouritePlaylist(false);\n      props.imamNameFunc(props.imamName);\n      console.log('{{{{{{{{{{{{{{{{{{{{{{{}}}}}}}}}}}}}}}}}}}}}}}}}}}');\n    }\n  };\n\n  const deleteItems = item => {\n    console.log(item.server);\n    props.deleteFavFromSurabox(item.server);\n    props.deleteItemFromPlaylist(item);\n  };\n\n  const clickedPlaylist = (link, number, suraName, imamName) => {\n    props.playingFalse();\n    props.suraLinkFunc(link);\n    props.getSurah_Number_Name(number, suraName);\n    props.showPlayer();\n    props.imamNameFunc(imamName);\n    props.isFromFavouritePlaylist(true);\n    props.favouritePlaylistImmamName(imamName);\n    props.emptySuras();\n  };\n\n  console.log('SONG Player');\n  return /*#__PURE__*/_jsxDEV(PlayerContent, {\n    suras: props.suras,\n    theme: props.theme,\n    themeStyle: props.themeStyle,\n    isFavPlaylist: props.isFavPlaylist,\n    showfavPlaylist: showfavPlaylist,\n    autoPlayAudio: autoPlayAudio,\n    children: [!props.isFavPlaylist && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"random d-none d-sm-block\",\n      onClick: randomChoice,\n      title: props.language.lang === 'ar' ? 'عشوائي' : 'Random',\n      children: /*#__PURE__*/_jsxDEV(FaRandom, {\n        size: 22\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"favorite_box d-none d-sm-block\",\n      title: props.site_language.favorite,\n      children: /*#__PURE__*/_jsxDEV(AiFillHeart, {\n        size: 24,\n        onClick: () => setShowfavPlaylist(!showfavPlaylist)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"autoPlay_box d-none d-sm-block\",\n      title: props.site_language.favorite,\n      children: /*#__PURE__*/_jsxDEV(BsArrowRight, {\n        size: 30,\n        onClick: () => setAutoPlayAudio(autoPlayAudio => !autoPlayAudio)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AudioPlayer, {\n      autoPlay: true,\n      src: props.suraLink,\n      onEnded: e => {\n        let regex = /\\d+/g;\n        let string = props.suraLink;\n        let matches = string.match(regex)[2];\n        console.log(matches);\n        console.log(typeof matches);\n        console.log('Ended');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlist_items d-none d-sm-block\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: favPlaylistclasses.join(' '),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header d-flex\",\n            children: [/*#__PURE__*/_jsxDEV(AiOutlineClose, {\n              size: 20,\n              onClick: () => setShowfavPlaylist(!showfavPlaylist)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"m-auto\",\n              children: props.site_language.favorite\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-unstyled sura_list\",\n            children: props.playlist && props.playlist.length > 0 ? props.playlist.map((e, i) => /*#__PURE__*/_jsxDEV(Playlist, {\n              server: e.server,\n              number: e.number,\n              name: e.name,\n              rewaya: e.rewaya,\n              index: i,\n              suraName: e.suraName,\n              deleteItem: item => deleteItems(item),\n              clicked: (link, number, suraName, name) => clickedPlaylist(link, number, suraName, name)\n            }, e.server, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 37\n            }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no_list text-center text-capitalize\",\n              children: [props.site_language.no_playlist_added, \" \", /*#__PURE__*/_jsxDEV(CgTrashEmpty, {\n                size: 26\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 128\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SongPlayer, \"ynL6/4YLNRQl7p7NrI05dZ/8PoU=\");\n\n_c = SongPlayer;\n\nconst mapStateToProps = state => {\n  return {\n    imamName: state.getData === null ? '' : state.getData.name,\n    suraName: state.suraName,\n    suraLink: state.suraLink,\n    isPlaying: state.isPlaying,\n    suras: state.suras,\n    allSurasNames: state.allSurasNames,\n    isImamPage: state.isImamPage,\n    imamNameBeforeUpdate: state.imamNameBeforeUpdate,\n    isRandom: state.isRandom,\n    playlist: state.playlist,\n    isFavPlaylist: state.isFavPlaylist,\n    playlistImamName: state.playlistImamName,\n    theme: state.theme,\n    themeStyle: state.themeStyle,\n    language: state.language,\n    site_language: state.site_language\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  togglePlay: () => dispatch(actions.playingToggle()),\n  playingFalse: () => dispatch(actions.playingFalse()),\n  playingTrue: () => dispatch(actions.playingTrue()),\n  suraLinkRandom: data => dispatch(actions.suraLinkRandom(data)),\n  changeName: name => dispatch(actions.changeName(name)),\n  imamNameFunc: name => dispatch(actions.getImamNameBeforeUpdate(name)),\n  deleteItemFromPlaylist: item => dispatch(actions.removeItemFromPlayList(item)),\n  deleteFavFromSurabox: item => dispatch(actions.deleteFavFromSurabox(item)),\n  showPlayer: () => dispatch(actions.showPlayer()),\n  suraLinkFunc: link => dispatch(actions.suraLink(link)),\n  getSurah_Number_Name: (number, suraName) => dispatch(actions.getSurah_Number_Name(number, suraName)),\n  isFromFavouritePlaylist: bool => dispatch(actions.isFromFavouritePlaylist(bool)),\n  favouritePlaylistImmamName: name => dispatch(actions.favouritePlaylistImmamName(name)),\n  emptySuras: () => dispatch(actions.emptySuras())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SongPlayer);\n\nvar _c;\n\n$RefreshReg$(_c, \"SongPlayer\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/HTML/quran_project_2/quran/src/components/audioPlayer/audioPlayer.js"],"names":["React","useState","useRef","useCallback","PlayerContent","AiOutlineClose","FaRandom","CgTrashEmpty","AiFillHeart","BsArrowRight","Container","connect","actions","Playlist","AudioPlayer","SongPlayer","props","showfavPlaylist","setShowfavPlaylist","favPlaylistclasses","autoPlayAudio","setAutoPlayAudio","randomChoice","console","log","isRandom","getRandom","Math","floor","random","suras","length","toString","num","suraLinkRandom","getName","allSurasNames","changeName","isFromFavouritePlaylist","imamNameFunc","imamName","deleteItems","item","server","deleteFavFromSurabox","deleteItemFromPlaylist","clickedPlaylist","link","number","suraName","playingFalse","suraLinkFunc","getSurah_Number_Name","showPlayer","favouritePlaylistImmamName","emptySuras","theme","themeStyle","isFavPlaylist","language","lang","site_language","favorite","suraLink","e","regex","string","matches","match","join","playlist","map","i","name","rewaya","no_playlist_added","mapStateToProps","state","getData","isPlaying","isImamPage","imamNameBeforeUpdate","playlistImamName","mapDispatchToProps","dispatch","togglePlay","playingToggle","playingTrue","data","getImamNameBeforeUpdate","removeItemFromPlayList","bool"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\r\nimport { PlayerContent } from './audioPlayerStyled';\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\nimport { FaRandom } from 'react-icons/fa';\r\nimport { CgTrashEmpty } from 'react-icons/cg';\r\nimport { AiFillHeart } from 'react-icons/ai';\r\nimport { BsArrowRight } from 'react-icons/bs';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/action/getData';\r\nimport Playlist from '../playlist/playlist';\r\nimport AudioPlayer from 'react-h5-audio-player';\r\nimport 'react-h5-audio-player/lib/styles.css';\r\n\r\n\r\nconst SongPlayer = props => {\r\n    const [showfavPlaylist, setShowfavPlaylist] = useState(false);\r\n    const favPlaylistclasses = showfavPlaylist ? ['playlist_list', 'show'] : ['playlist_list'];\r\n    const [autoPlayAudio, setAutoPlayAudio] = useState(false);\r\n\r\n    const randomChoice = () => {\r\n        console.log('Random');\r\n        if(props.isRandom) {\r\n            const getRandom = Math.floor(Math.random() * props.suras.length).toString()\r\n            const num = props.suras[getRandom].length === 1 ? `00${props.suras[getRandom]}` : props.suras[getRandom].length === 2 ? `0${props.suras[getRandom]}` : props.suras[getRandom];\r\n            props.suraLinkRandom(num);\r\n            let getName = props.allSurasNames[getRandom];\r\n            props.changeName(getName);\r\n            props.isFromFavouritePlaylist(false);\r\n            props.imamNameFunc(props.imamName);\r\n            console.log('{{{{{{{{{{{{{{{{{{{{{{{}}}}}}}}}}}}}}}}}}}}}}}}}}}')\r\n        }\r\n    }\r\n\r\n    const deleteItems = (item) => {\r\n        console.log(item.server);\r\n        props.deleteFavFromSurabox(item.server);\r\n        props.deleteItemFromPlaylist(item);\r\n    }\r\n\r\n    const clickedPlaylist = (link, number, suraName, imamName) => {\r\n        props.playingFalse();\r\n        props.suraLinkFunc(link);\r\n        props.getSurah_Number_Name(number, suraName);\r\n        props.showPlayer();\r\n        props.imamNameFunc(imamName);\r\n        props.isFromFavouritePlaylist(true);\r\n        props.favouritePlaylistImmamName(imamName);\r\n        props.emptySuras();\r\n    }\r\n\r\n    console.log('SONG Player');\r\n\r\n    return (\r\n        <PlayerContent suras={props.suras} theme={props.theme} themeStyle={props.themeStyle} isFavPlaylist={props.isFavPlaylist} showfavPlaylist={showfavPlaylist} autoPlayAudio={autoPlayAudio} >\r\n            {!props.isFavPlaylist && (\r\n                <div className='random d-none d-sm-block' onClick={randomChoice} title={props.language.lang === 'ar' ? 'عشوائي' : 'Random'}>\r\n                    <FaRandom size={22} />\r\n                </div>\r\n            )}\r\n            <div className='favorite_box d-none d-sm-block' title={props.site_language.favorite}>\r\n                <AiFillHeart size={24}  onClick={() => setShowfavPlaylist(!showfavPlaylist)} />\r\n            </div>\r\n            <div className='autoPlay_box d-none d-sm-block' title={props.site_language.favorite}>\r\n                <BsArrowRight size={30}  onClick={() => setAutoPlayAudio(autoPlayAudio => !autoPlayAudio)}/>\r\n            </div>\r\n            <AudioPlayer \r\n                autoPlay\r\n                src={props.suraLink}\r\n                onEnded={e => {\r\n                    let regex = /\\d+/g;\r\n                    let string = props.suraLink;\r\n                    let matches = string. match(regex)[2];\r\n                \r\n                    console.log(matches);\r\n                    console.log(typeof matches);\r\n\r\n                    console.log('Ended')\r\n                }}\r\n            />\r\n            <Container>\r\n                <div className='playlist_items d-none d-sm-block'>\r\n                    <div className={favPlaylistclasses.join(' ')}>\r\n                        <div className='header d-flex'>\r\n                            <AiOutlineClose size={20} onClick={() => setShowfavPlaylist(!showfavPlaylist)} />\r\n                            <h5 className='m-auto'>{props.site_language.favorite}</h5>\r\n                        </div>\r\n                        <ul className='list-unstyled sura_list'>\r\n                            {\r\n                                props.playlist && props.playlist.length > 0 \r\n                                ?  props.playlist.map((e, i) => (\r\n                                    <Playlist\r\n                                        key={e.server}\r\n                                        server={e.server}\r\n                                        number={e.number}\r\n                                        name={e.name}\r\n                                        rewaya={e.rewaya}\r\n                                        index={i}\r\n                                        suraName={e.suraName}\r\n                                        deleteItem={(item) => deleteItems(item)}\r\n                                        clicked={(link, number, suraName, name) => clickedPlaylist(link, number, suraName, name)}\r\n                                    />\r\n                                ))\r\n                                : <div className='no_list text-center text-capitalize'>{props.site_language.no_playlist_added} <CgTrashEmpty size={26} /></div>\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </PlayerContent>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        imamName: state.getData === null ? '' : state.getData.name,\r\n        suraName: state.suraName,\r\n        suraLink: state.suraLink,\r\n        isPlaying: state.isPlaying,\r\n        suras: state.suras,\r\n        allSurasNames: state.allSurasNames,\r\n        isImamPage: state.isImamPage,\r\n        imamNameBeforeUpdate: state.imamNameBeforeUpdate,\r\n        isRandom: state.isRandom,\r\n        playlist: state.playlist,\r\n        isFavPlaylist: state.isFavPlaylist,\r\n        playlistImamName: state.playlistImamName,\r\n        theme: state.theme,\r\n        themeStyle: state.themeStyle,\r\n        language: state.language,\r\n        site_language: state.site_language\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    togglePlay: () => dispatch(actions.playingToggle()),\r\n    playingFalse: () => dispatch(actions.playingFalse()),\r\n    playingTrue: () => dispatch(actions.playingTrue()),\r\n    suraLinkRandom: (data) => dispatch(actions.suraLinkRandom(data)),\r\n    changeName: (name) => dispatch(actions.changeName(name)),\r\n    imamNameFunc: (name) => dispatch(actions.getImamNameBeforeUpdate(name)),\r\n    deleteItemFromPlaylist: (item) => dispatch(actions.removeItemFromPlayList(item)),\r\n    deleteFavFromSurabox: (item) => dispatch(actions.deleteFavFromSurabox(item)),\r\n    showPlayer: () => dispatch(actions.showPlayer()),\r\n    suraLinkFunc: (link) => dispatch(actions.suraLink(link)),\r\n    getSurah_Number_Name: (number, suraName) => dispatch(actions.getSurah_Number_Name(number, suraName)),\r\n    isFromFavouritePlaylist: (bool) => dispatch(actions.isFromFavouritePlaylist(bool)),\r\n    favouritePlaylistImmamName: (name) => dispatch(actions.favouritePlaylistImmamName(name)),\r\n    emptySuras: () => dispatch(actions.emptySuras())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SongPlayer);"]},"metadata":{},"sourceType":"module"}