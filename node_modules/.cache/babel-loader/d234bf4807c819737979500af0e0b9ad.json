{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\HTML\\\\quran_project_2\\\\quran\\\\src\\\\components\\\\surahBox\\\\surahBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useCallback, useState, useEffect } from 'react';\nimport { SurahBoxList } from './surahBoxStyled';\nimport PlayBtn from '../playBtn/playBtn';\nimport HeartBtn from '../heartBox/heartBox';\nimport LinkBtn from '../linkBtn/linkBtn';\nimport DownloadBtn from '../downloadBtn/downloadBtn';\nimport ToastComp from '../toastCompo/toastCompo';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/action/getData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst initialState = (state, action) => {\n  switch (action.type) {\n    case 'isToastOpen':\n      return { ...state,\n        isToastOpen: true,\n        msg: action.msg,\n        isFavorite: action.isFavorite\n      };\n\n    case 'isToastClose':\n      return { ...state,\n        isToastOpen: false,\n        msg: {},\n        isFavorite: state.isFavorite\n      };\n\n    case 'isFavorite':\n      return { ...state,\n        isFavorite: action.isFavorite\n      };\n\n    case 'Msg':\n      return { ...state,\n        msg: action.msg\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst SurahBox = ({\n  isFavor,\n  playlist,\n  allData,\n  number,\n  name,\n  server,\n  deleteFav,\n  suraLink,\n  copyText,\n  language,\n  addFav,\n  clicked,\n  isPlayToggle,\n  site_language,\n  deleteItemFromPlaylist,\n  theme,\n  themeStyle\n}) => {\n  _s();\n\n  const [surahState, dispatch] = useReducer(initialState, {\n    isToastOpen: false,\n    isFavorite: isFavor,\n    msg: {}\n  });\n  const [isFav, setIsFav] = useState(isFavor);\n  const [linkState, setLinkState] = useState(false);\n\n  const toggleFav = () => {\n    if (isFav) {\n      playlist.map(list => {\n        if (list.server === `${allData.Server}/${number}.mp3` && list.number === number && list.suraName === name) {\n          return deleteItemFromPlaylist({\n            server: list.server\n          });\n        }\n\n        return null;\n      });\n    }\n\n    setIsFav(!isFav);\n  };\n\n  useEffect(() => {\n    if (`${server}/${number}.mp3` === deleteFav) {\n      setIsFav(false);\n    }\n  }, [deleteFav, isFav]);\n  useEffect(() => {\n    if (suraLink === copyText) {\n      setLinkState(true);\n    } else {\n      setLinkState(false);\n    }\n  }, [suraLink, server, number]);\n\n  const setTime = () => setTimeout(() => {\n    closeToast();\n  }, 5000);\n\n  const openToast = useCallback(msg => {\n    dispatch({\n      type: 'isToastOpen',\n      msg: { ...msg\n      },\n      isFavorite: msg.isFavorite\n    });\n  }, []);\n  const closeToast = useCallback(() => {\n    clearTimeout(setTime);\n    dispatch({\n      type: 'isToastClose',\n      msg: {},\n      isFavorite: surahState.isFavorite\n    });\n  }, []);\n  const cpiedFunc = useCallback(() => {\n    clearTimeout(setTime);\n    openToast({\n      title: language.lang === 'ar' ? 'تم النسخ' : 'Copied',\n      myMsg: language.lang === 'ar' ? 'تم نسخ الرابط' : 'The Link is copied',\n      myClass: 'added_item',\n      isFavorite: surahState.isFavorite\n    });\n    navigator.clipboard.writeText(copyText);\n  }, []);\n\n  const favFunc = () => {\n    clearTimeout(setTime);\n\n    if (surahState.isFavorite) {\n      openToast({\n        title: site_language.delete,\n        myMsg: site_language.delete + ' ' + site_language.favorite,\n        myClass: 'remove_item',\n        isFavorite: surahState.isFavorite\n      });\n      dispatch({\n        type: 'isFavorite',\n        msg: 'the item was removed from favorites',\n        isFavorite: !surahState.isFavorite\n      });\n    } else {\n      openToast({\n        title: site_language.add,\n        myMsg: site_language.adding_done_susseccfully,\n        myClass: 'added_item',\n        isFavorite: surahState.isFavorite\n      });\n      dispatch({\n        type: 'isFavorite',\n        msg: 'the item was removed from favorites',\n        isFavorite: !surahState.isFavorite\n      });\n    }\n  };\n\n  surahState.isToastOpen ? setTime() : clearTimeout(setTime);\n\n  const addToFavList = () => {\n    favFunc();\n    addFav({\n      isFavorite: !surahState.isFavorite,\n      allData: allData\n    });\n  };\n\n  return site_language && /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [surahState.isToastOpen && /*#__PURE__*/_jsxDEV(ToastComp, {\n      msg: surahState.msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 40\n    }, this), /*#__PURE__*/_jsxDEV(SurahBoxList, {\n      className: \"d-flex justify-content-between flex-wrap pr-1 pl-1 pr-sm-3 pl-sm-3\",\n      title: name,\n      theme: theme,\n      themeStyle: themeStyle,\n      linkState: linkState,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon_name_number d-flex align-items-center\",\n        onClick: clicked,\n        children: [/*#__PURE__*/_jsxDEV(PlayBtn, {\n          size: 30,\n          clicked: isPlayToggle,\n          linkState: linkState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"surah-box-number\",\n          onClick: isPlayToggle,\n          children: number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"surah-box-name text-capitalize\",\n          onClick: isPlayToggle,\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"surah-box-imam-page-info d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list hide_on_hover\",\n          title: \"copy link\",\n          onClick: () => cpiedFunc(),\n          children: /*#__PURE__*/_jsxDEV(LinkBtn, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list hide_on_hover heart\",\n          title: isFavor ? site_language.delete + ' ' + site_language.favorite : site_language.add_files_playlist,\n          onClick: addToFavList,\n          children: /*#__PURE__*/_jsxDEV(HeartBtn, {\n            size: 22,\n            server: server,\n            number: number,\n            isFav: isFav,\n            toggleFav: toggleFav\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list hide_on_hover heart\",\n          title: \"download\",\n          children: /*#__PURE__*/_jsxDEV(DownloadBtn, {\n            size: 22,\n            url: copyText,\n            suraName: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}; //  =========================================================\n// const SurahBox = props => {\n//     const [surahState, dispatch] = useReducer(initialState, {\n//         isToastOpen: false,\n//         isFavorite: props.isFavor,\n//         msg: {}\n//     });\n//     const [isFav, setIsFav] = useState(props.isFavor);\n//     const [linkState, setLinkState] = useState(false);\n//     const toggleFav = () => {\n//         if(isFav) {\n//             props.playlist.map(list => {\n//                 if(list.server === `${props.allData.Server}/${props.number}.mp3` && list.number === props.number && list.suraName === props.name) {\n//                     return props.deleteItemFromPlaylist({server: list.server});\n//                 }\n//                 return null;\n//             });\n//         }\n//         setIsFav(!isFav);\n//     };\n//     useEffect(() => {\n//         if(`${props.server}/${props.number}.mp3` === props.deleteFav) {\n//             setIsFav(false);\n//         }\n//     }, [props.deleteFav, props.isFav]);\n//     useEffect(() => {\n//         if(props.suraLink === props.copyText) {\n//             setLinkState(true);\n//         } else {\n//             setLinkState(false);\n//         }\n//     }, [props.suraLink, props.server, props.number]);\n//     const setTime = () => setTimeout(() => {closeToast()}, 5000);\n//     const openToast = useCallback((msg) => {\n//         dispatch({type: 'isToastOpen', msg: {...msg}, isFavorite: msg.isFavorite });\n//     }, []);\n//     const closeToast = useCallback(() => {\n//         clearTimeout(setTime);\n//         dispatch({type: 'isToastClose', msg: {}, isFavorite: surahState.isFavorite});\n//     }, []);\n//     const cpiedFunc = useCallback(() => {\n//         clearTimeout(setTime);\n//         openToast({title: props.language.lang === 'ar' ? 'تم النسخ' : 'Copied', myMsg: props.language.lang === 'ar' ? 'تم نسخ الرابط' : 'The Link is copied', myClass: 'added_item', isFavorite: surahState.isFavorite});\n//         navigator.clipboard.writeText(props.copyText);\n//     }, []);\n//     const favFunc = () => {\n//         clearTimeout(setTime);\n//         if(surahState.isFavorite) {\n//             openToast({title: props.site_language.delete, myMsg: props.site_language.delete + ' ' + props.site_language.favorite, myClass:'remove_item', isFavorite: surahState.isFavorite});\n//             dispatch({type: 'isFavorite', msg: 'the item was removed from favorites', isFavorite: !surahState.isFavorite });\n//         } else {\n//             openToast({title: props.site_language.add, myMsg: props.site_language.adding_done_susseccfully, myClass: 'added_item', isFavorite: surahState.isFavorite});\n//             dispatch({type: 'isFavorite', msg: 'the item was removed from favorites', isFavorite: !surahState.isFavorite });\n//         }\n//     }\n//     surahState.isToastOpen ? setTime() : clearTimeout(setTime);\n//     const addToFavList = () => {\n//         favFunc();\n//         props.addFav({isFavorite: !surahState.isFavorite, allData: props.allData });\n//     }\n//     return props.site_language && (\n//         <>\n//             {surahState.isToastOpen && <ToastComp msg={surahState.msg} />}\n//             <SurahBoxList className='d-flex justify-content-between flex-wrap pr-1 pl-1 pr-sm-3 pl-sm-3' title={props.name} theme={props.theme} themeStyle={props.themeStyle} linkState={linkState}>\n//                 <div className='icon_name_number d-flex align-items-center' onClick={props.clicked}>\n//                     <PlayBtn size={30} clicked={props.isPlayToggle} linkState={linkState} />\n//                     <div className='surah-box-number' onClick={props.isPlayToggle}>{props.number}</div>\n//                     <div className='surah-box-name text-capitalize' onClick={props.isPlayToggle}>{props.name}</div>\n//                 </div>\n//                 <div className='surah-box-imam-page-info d-flex align-items-center'>\n//                     <div className='list hide_on_hover' title='copy link' onClick={() => cpiedFunc()}>\n//                         <LinkBtn />\n//                     </div>\n//                     <div className='list hide_on_hover heart' title={props.isFavor ? props.site_language.delete + ' ' + props.site_language.favorite : props.site_language.add_files_playlist} onClick={addToFavList} >\n//                         <HeartBtn size={22} server={props.server} number={props.number} isFav={isFav} toggleFav={toggleFav} />\n//                     </div>\n//                     <div className='list hide_on_hover heart' title='download' >\n//                         <DownloadBtn size={22} url={props.copyText} suraName={props.name} />\n//                     </div>\n//                 </div>\n//             </SurahBoxList>\n//         </>\n//     );\n// };\n\n\n_s(SurahBox, \"scDbQbMn8HK6yCQf83ZsUfotgBI=\");\n\n_c = SurahBox;\n\nconst mapStateToProps = state => ({\n  suraLink: state.suraLink,\n  playlist: state.playlist,\n  deleteFav: state.deleteFav,\n  theme: state.theme,\n  themeStyle: state.themeStyle,\n  language: state.language,\n  site_language: state.site_language\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteItemFromPlaylist: item => dispatch(actions.removeItemFromPlayList(item))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SurahBox);\n\nvar _c;\n\n$RefreshReg$(_c, \"SurahBox\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/HTML/quran_project_2/quran/src/components/surahBox/surahBox.js"],"names":["React","useReducer","useCallback","useState","useEffect","SurahBoxList","PlayBtn","HeartBtn","LinkBtn","DownloadBtn","ToastComp","connect","actions","initialState","state","action","type","isToastOpen","msg","isFavorite","SurahBox","isFavor","playlist","allData","number","name","server","deleteFav","suraLink","copyText","language","addFav","clicked","isPlayToggle","site_language","deleteItemFromPlaylist","theme","themeStyle","surahState","dispatch","isFav","setIsFav","linkState","setLinkState","toggleFav","map","list","Server","suraName","setTime","setTimeout","closeToast","openToast","clearTimeout","cpiedFunc","title","lang","myMsg","myClass","navigator","clipboard","writeText","favFunc","delete","favorite","add","adding_done_susseccfully","addToFavList","add_files_playlist","mapStateToProps","mapDispatchToProps","item","removeItemFromPlayList"],"mappings":"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","sourcesContent":["import React, { useReducer, useCallback, useState, useEffect } from 'react';\r\nimport { SurahBoxList } from './surahBoxStyled';\r\nimport PlayBtn from '../playBtn/playBtn';\r\nimport HeartBtn from '../heartBox/heartBox';\r\nimport LinkBtn from '../linkBtn/linkBtn';\r\nimport DownloadBtn from '../downloadBtn/downloadBtn';\r\nimport ToastComp from '../toastCompo/toastCompo';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/action/getData';\r\n\r\nconst initialState = (state, action) => {\r\n    switch(action.type) {\r\n        case 'isToastOpen':\r\n            return {...state, isToastOpen: true, msg: action.msg, isFavorite: action.isFavorite}\r\n        case 'isToastClose':\r\n            return {...state, isToastOpen: false, msg: {}, isFavorite: state.isFavorite}\r\n        case 'isFavorite':\r\n            return {...state, isFavorite: action.isFavorite}\r\n        case 'Msg':\r\n            return {...state, msg: action.msg}\r\n        default: \r\n        return state;\r\n    }\r\n}\r\n\r\nconst SurahBox = ({ isFavor, playlist, allData, number, name, server, deleteFav, suraLink, copyText, language, addFav, clicked, isPlayToggle, site_language, deleteItemFromPlaylist, theme, themeStyle}) => {\r\n    \r\n    const [surahState, dispatch] = useReducer(initialState, {\r\n        isToastOpen: false,\r\n        isFavorite: isFavor,\r\n        msg: {}\r\n    });\r\n\r\n    const [isFav, setIsFav] = useState(isFavor);\r\n    const [linkState, setLinkState] = useState(false);\r\n\r\n    const toggleFav = () => {\r\n        if(isFav) {\r\n            playlist.map(list => {\r\n                if(list.server === `${allData.Server}/${number}.mp3` && list.number === number && list.suraName === name) {\r\n                    return deleteItemFromPlaylist({server: list.server});\r\n                }\r\n                return null;\r\n            });\r\n        }\r\n        setIsFav(!isFav);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(`${server}/${number}.mp3` === deleteFav) {\r\n            setIsFav(false);\r\n        }\r\n    }, [deleteFav, isFav]);\r\n\r\n    useEffect(() => {\r\n        if(suraLink === copyText) {\r\n            setLinkState(true);\r\n        } else {\r\n            setLinkState(false);\r\n        }\r\n    }, [suraLink, server, number]);\r\n\r\n    const setTime = () => setTimeout(() => {closeToast()}, 5000);\r\n\r\n    const openToast = useCallback((msg) => {\r\n        dispatch({type: 'isToastOpen', msg: {...msg}, isFavorite: msg.isFavorite });\r\n    }, []);\r\n\r\n    const closeToast = useCallback(() => {\r\n        clearTimeout(setTime);\r\n        dispatch({type: 'isToastClose', msg: {}, isFavorite: surahState.isFavorite});\r\n    }, []);\r\n\r\n    const cpiedFunc = useCallback(() => {\r\n        clearTimeout(setTime);\r\n        openToast({title: language.lang === 'ar' ? 'تم النسخ' : 'Copied', myMsg: language.lang === 'ar' ? 'تم نسخ الرابط' : 'The Link is copied', myClass: 'added_item', isFavorite: surahState.isFavorite});\r\n        navigator.clipboard.writeText(copyText);\r\n    }, []);\r\n\r\n    const favFunc = () => {\r\n        clearTimeout(setTime);\r\n        if(surahState.isFavorite) {\r\n            openToast({title: site_language.delete, myMsg: site_language.delete + ' ' + site_language.favorite, myClass:'remove_item', isFavorite: surahState.isFavorite});\r\n            dispatch({type: 'isFavorite', msg: 'the item was removed from favorites', isFavorite: !surahState.isFavorite });\r\n        } else {\r\n            openToast({title: site_language.add, myMsg: site_language.adding_done_susseccfully, myClass: 'added_item', isFavorite: surahState.isFavorite});\r\n            dispatch({type: 'isFavorite', msg: 'the item was removed from favorites', isFavorite: !surahState.isFavorite });\r\n        }\r\n    }\r\n\r\n    surahState.isToastOpen ? setTime() : clearTimeout(setTime);\r\n    \r\n    const addToFavList = () => {\r\n        favFunc();\r\n        addFav({isFavorite: !surahState.isFavorite, allData: allData });\r\n    }\r\n\r\n    return site_language && (\r\n        <>\r\n            {surahState.isToastOpen && <ToastComp msg={surahState.msg} />}\r\n            <SurahBoxList className='d-flex justify-content-between flex-wrap pr-1 pl-1 pr-sm-3 pl-sm-3' title={name} theme={theme} themeStyle={themeStyle} linkState={linkState}>\r\n                <div className='icon_name_number d-flex align-items-center' onClick={clicked}>\r\n                    <PlayBtn size={30} clicked={isPlayToggle} linkState={linkState} />\r\n                    <div className='surah-box-number' onClick={isPlayToggle}>{number}</div>\r\n                    <div className='surah-box-name text-capitalize' onClick={isPlayToggle}>{name}</div>\r\n                </div>\r\n                <div className='surah-box-imam-page-info d-flex align-items-center'>\r\n                    <div className='list hide_on_hover' title='copy link' onClick={() => cpiedFunc()}>\r\n                        <LinkBtn />\r\n                    </div>\r\n                    <div className='list hide_on_hover heart' title={isFavor ? site_language.delete + ' ' + site_language.favorite : site_language.add_files_playlist} onClick={addToFavList} >\r\n                        <HeartBtn size={22} server={server} number={number} isFav={isFav} toggleFav={toggleFav} />\r\n                    </div>\r\n                    <div className='list hide_on_hover heart' title='download' >\r\n                        <DownloadBtn size={22} url={copyText} suraName={name} />\r\n                    </div>\r\n                </div>\r\n            </SurahBoxList>\r\n        </>\r\n    );\r\n};\r\n\r\n//  =========================================================\r\n\r\n\r\n// const SurahBox = props => {\r\n//     const [surahState, dispatch] = useReducer(initialState, {\r\n//         isToastOpen: false,\r\n//         isFavorite: props.isFavor,\r\n//         msg: {}\r\n//     });\r\n\r\n//     const [isFav, setIsFav] = useState(props.isFavor);\r\n//     const [linkState, setLinkState] = useState(false);\r\n\r\n//     const toggleFav = () => {\r\n//         if(isFav) {\r\n//             props.playlist.map(list => {\r\n//                 if(list.server === `${props.allData.Server}/${props.number}.mp3` && list.number === props.number && list.suraName === props.name) {\r\n//                     return props.deleteItemFromPlaylist({server: list.server});\r\n//                 }\r\n//                 return null;\r\n//             });\r\n//         }\r\n//         setIsFav(!isFav);\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         if(`${props.server}/${props.number}.mp3` === props.deleteFav) {\r\n//             setIsFav(false);\r\n//         }\r\n//     }, [props.deleteFav, props.isFav]);\r\n\r\n//     useEffect(() => {\r\n//         if(props.suraLink === props.copyText) {\r\n//             setLinkState(true);\r\n//         } else {\r\n//             setLinkState(false);\r\n//         }\r\n//     }, [props.suraLink, props.server, props.number]);\r\n\r\n//     const setTime = () => setTimeout(() => {closeToast()}, 5000);\r\n\r\n//     const openToast = useCallback((msg) => {\r\n//         dispatch({type: 'isToastOpen', msg: {...msg}, isFavorite: msg.isFavorite });\r\n//     }, []);\r\n\r\n//     const closeToast = useCallback(() => {\r\n//         clearTimeout(setTime);\r\n//         dispatch({type: 'isToastClose', msg: {}, isFavorite: surahState.isFavorite});\r\n//     }, []);\r\n\r\n//     const cpiedFunc = useCallback(() => {\r\n//         clearTimeout(setTime);\r\n//         openToast({title: props.language.lang === 'ar' ? 'تم النسخ' : 'Copied', myMsg: props.language.lang === 'ar' ? 'تم نسخ الرابط' : 'The Link is copied', myClass: 'added_item', isFavorite: surahState.isFavorite});\r\n//         navigator.clipboard.writeText(props.copyText);\r\n//     }, []);\r\n\r\n//     const favFunc = () => {\r\n//         clearTimeout(setTime);\r\n//         if(surahState.isFavorite) {\r\n//             openToast({title: props.site_language.delete, myMsg: props.site_language.delete + ' ' + props.site_language.favorite, myClass:'remove_item', isFavorite: surahState.isFavorite});\r\n//             dispatch({type: 'isFavorite', msg: 'the item was removed from favorites', isFavorite: !surahState.isFavorite });\r\n//         } else {\r\n//             openToast({title: props.site_language.add, myMsg: props.site_language.adding_done_susseccfully, myClass: 'added_item', isFavorite: surahState.isFavorite});\r\n//             dispatch({type: 'isFavorite', msg: 'the item was removed from favorites', isFavorite: !surahState.isFavorite });\r\n//         }\r\n//     }\r\n\r\n//     surahState.isToastOpen ? setTime() : clearTimeout(setTime);\r\n    \r\n//     const addToFavList = () => {\r\n//         favFunc();\r\n//         props.addFav({isFavorite: !surahState.isFavorite, allData: props.allData });\r\n//     }\r\n\r\n//     return props.site_language && (\r\n//         <>\r\n//             {surahState.isToastOpen && <ToastComp msg={surahState.msg} />}\r\n//             <SurahBoxList className='d-flex justify-content-between flex-wrap pr-1 pl-1 pr-sm-3 pl-sm-3' title={props.name} theme={props.theme} themeStyle={props.themeStyle} linkState={linkState}>\r\n//                 <div className='icon_name_number d-flex align-items-center' onClick={props.clicked}>\r\n//                     <PlayBtn size={30} clicked={props.isPlayToggle} linkState={linkState} />\r\n//                     <div className='surah-box-number' onClick={props.isPlayToggle}>{props.number}</div>\r\n//                     <div className='surah-box-name text-capitalize' onClick={props.isPlayToggle}>{props.name}</div>\r\n//                 </div>\r\n//                 <div className='surah-box-imam-page-info d-flex align-items-center'>\r\n//                     <div className='list hide_on_hover' title='copy link' onClick={() => cpiedFunc()}>\r\n//                         <LinkBtn />\r\n//                     </div>\r\n//                     <div className='list hide_on_hover heart' title={props.isFavor ? props.site_language.delete + ' ' + props.site_language.favorite : props.site_language.add_files_playlist} onClick={addToFavList} >\r\n//                         <HeartBtn size={22} server={props.server} number={props.number} isFav={isFav} toggleFav={toggleFav} />\r\n//                     </div>\r\n//                     <div className='list hide_on_hover heart' title='download' >\r\n//                         <DownloadBtn size={22} url={props.copyText} suraName={props.name} />\r\n//                     </div>\r\n//                 </div>\r\n//             </SurahBoxList>\r\n//         </>\r\n//     );\r\n// };\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    suraLink: state.suraLink,\r\n    playlist: state.playlist,\r\n    deleteFav: state.deleteFav,\r\n    theme: state.theme,\r\n    themeStyle: state.themeStyle,\r\n    language: state.language,\r\n    site_language: state.site_language\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    deleteItemFromPlaylist: (item) => dispatch(actions.removeItemFromPlayList(item))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SurahBox);"]},"metadata":{},"sourceType":"module"}