{"ast":null,"code":"import * as actionType from './actionTypes'; // export const getData = (data) => {\n//     return dispatch => {\n//         dispatch({type: actionType.GET_IMAM_DATA, imamData: data, suras: data.suras.split(',')});\n//     }\n// }\n\nexport const getData = data => dispatch({\n  type: actionType.GET_IMAM_DATA,\n  imamData: data,\n  suras: data.suras.split(',')\n});\nexport const getSuras = () => {\n  return dispatch => {\n    dispatch({\n      type: actionType.GET_SURAS\n    });\n  };\n};\nexport const getServer = server => {\n  return dispatch => {\n    dispatch({\n      type: actionType.GET_SERVER,\n      server: server\n    });\n  };\n};\nexport const showPlayer = () => {\n  return dispatch => {\n    dispatch({\n      type: actionType.SHOW_PLAYER\n    });\n  };\n};\nexport const allSurasNames = names => {\n  return dispatch => {\n    dispatch({\n      type: actionType.ALL_SUARS_NAMES,\n      surasNames: names\n    });\n  };\n};\nexport const suraLink = link => {\n  console.log(link);\n  return dispatch => {\n    dispatch({\n      type: actionType.SURA_LINK,\n      link: link\n    });\n  };\n};\nexport const suraLinkRandom = randomNumber => {\n  return dispatch => {\n    dispatch({\n      type: actionType.SURA_LINK_RANDOM,\n      number: randomNumber\n    });\n  };\n};\nexport const startRequest = () => {\n  return dispatch => {\n    dispatch({\n      type: actionType.START_REQUEST\n    });\n  };\n};\nexport const successRequest = () => {\n  return dispatch => {\n    dispatch({\n      type: actionType.SUCCESS_REQUEST\n    });\n  };\n};\nexport const failRequest = error => {\n  return dispatch => {\n    dispatch({\n      type: actionType.FAIL_REQUEST,\n      error: error\n    });\n  };\n};\nexport const startMain = () => {\n  return dispatch => {\n    dispatch({\n      type: actionType.START_MAIN\n    });\n  };\n};\nexport const successMain = (letters, letterIndexs, allElements) => {\n  return dispatch => {\n    dispatch({\n      type: actionType.SUCCESS_MAIN,\n      letters: letters,\n      letterIndexs: letterIndexs,\n      allElements: allElements\n    });\n  };\n};\nexport const closeAside = () => {\n  return dispatch => {\n    dispatch({\n      type: actionType.CLOSE_ASIDE\n    });\n  };\n};\nexport const openAside = () => {\n  return {\n    type: actionType.OPEN_ASIDE\n  };\n};\nexport const addToPlayList = item => {\n  return {\n    type: actionType.ADD_TO_PLAYLIST,\n    item: item\n  };\n};\nexport const playlistStorage = items => {\n  return {\n    type: actionType.PLAYLIST_STORAGE,\n    items: items\n  };\n};\nexport const removeItemFromPlayList = item => {\n  return {\n    type: actionType.REMOVE_ITEM_FROM_PLAYLIST,\n    item: item\n  };\n};\nexport const deleteFavFromSurabox = item => {\n  return {\n    type: actionType.DELETE_FAVOURITE_FROM_SURABOX,\n    item: item\n  };\n};\nexport const emptyFavFromSurabox = () => {\n  return {\n    type: actionType.EMPTY_FAVOURITE_FROM_SURABOX\n  };\n};\nexport const isFromFavouritePlaylist = bool => {\n  return {\n    type: actionType.IS_FROM_FAVOURITE_PLAYLIST,\n    booleanValue: bool\n  };\n};\nexport const emptySuras = () => {\n  return {\n    type: actionType.EMPTY_SURAS\n  };\n};\nexport const getError = error => {\n  return {\n    type: actionType.GET_ERROR,\n    error: error\n  };\n};\nexport const changeTheme = () => {\n  return {\n    type: actionType.IS_THEME_IS_DARK\n  };\n};\nexport const toggleTheme = bool => {\n  return {\n    type: actionType.THEME_STORAGE,\n    value: bool\n  };\n};\nexport const changeLanguage = lang => {\n  let language = null;\n\n  if (lang === 'en') {\n    language = '_english.json';\n  } else if (lang === 'ar') {\n    language = '_arabic.json';\n  } else if (lang === 'fr') {\n    language = '_france.json';\n  } else if (lang === 'ru') {\n    language = '_russia.json';\n  } else if (lang === 'de') {\n    language = '_germany.json';\n  } else if (lang === 'es') {\n    language = '_spain.json';\n  } else if (lang === 'tr') {\n    language = '_turkey.json';\n  } else if (lang === 'cn') {\n    return {\n      type: actionType.CHOOSE_LANGUAGE,\n      selectLanguage: {\n        lang: 'en',\n        language: '_china.json'\n      }\n    };\n  } else if (lang === 'tl') {\n    return {\n      type: actionType.CHOOSE_LANGUAGE,\n      selectLanguage: {\n        lang: 'en',\n        language: '_tagalog.json'\n      }\n    };\n  } else if (lang === 'th') {\n    language = '_tahi.json';\n  } else if (lang === 'ur') {\n    language = '_urdu.json';\n  } else if (lang === 'bn') {\n    language = '_bengali.json';\n  } else if (lang === 'bs') {\n    language = '_bosnia.json';\n  } else if (lang === 'ug') {\n    language = '_uyghur.json';\n  } else if (lang === 'fa') {\n    language = '_farsi.json';\n  } else if (lang === 'tg') {\n    language = '_tagalog.json';\n  } else if (lang === 'ml') {\n    language = '_malbari.json';\n  } else if (lang === 'id') {\n    language = '_indonesia.json';\n  } else if (lang === 'pt') {\n    language = '_portuguese.json';\n  } else if (lang === 'ha') {\n    language = '_hausa.json';\n  } else if (lang === 'sw') {\n    language = '_swahili.json';\n  }\n\n  return {\n    type: actionType.CHOOSE_LANGUAGE,\n    selectLanguage: {\n      lang: lang,\n      language: language\n    }\n  };\n};\nexport const siteLanguage = lang => {\n  return {\n    type: actionType.SITE_LANGUAGE,\n    lang: lang\n  };\n};\nexport const isFavoritePage = value => {\n  return {\n    type: actionType.iS_FAVORITE_PAGE,\n    value: value\n  };\n};\nexport const isRadioPage = value => {\n  return {\n    type: actionType.iS_RADIO_PAGE,\n    value: value\n  };\n};","map":{"version":3,"sources":["C:/Users/USER/Desktop/HTML/quran_project_2/quran/src/store/action/getData.js"],"names":["actionType","getData","data","dispatch","type","GET_IMAM_DATA","imamData","suras","split","getSuras","GET_SURAS","getServer","server","GET_SERVER","showPlayer","SHOW_PLAYER","allSurasNames","names","ALL_SUARS_NAMES","surasNames","suraLink","link","console","log","SURA_LINK","suraLinkRandom","randomNumber","SURA_LINK_RANDOM","number","startRequest","START_REQUEST","successRequest","SUCCESS_REQUEST","failRequest","error","FAIL_REQUEST","startMain","START_MAIN","successMain","letters","letterIndexs","allElements","SUCCESS_MAIN","closeAside","CLOSE_ASIDE","openAside","OPEN_ASIDE","addToPlayList","item","ADD_TO_PLAYLIST","playlistStorage","items","PLAYLIST_STORAGE","removeItemFromPlayList","REMOVE_ITEM_FROM_PLAYLIST","deleteFavFromSurabox","DELETE_FAVOURITE_FROM_SURABOX","emptyFavFromSurabox","EMPTY_FAVOURITE_FROM_SURABOX","isFromFavouritePlaylist","bool","IS_FROM_FAVOURITE_PLAYLIST","booleanValue","emptySuras","EMPTY_SURAS","getError","GET_ERROR","changeTheme","IS_THEME_IS_DARK","toggleTheme","THEME_STORAGE","value","changeLanguage","lang","language","CHOOSE_LANGUAGE","selectLanguage","siteLanguage","SITE_LANGUAGE","isFavoritePage","iS_FAVORITE_PAGE","isRadioPage","iS_RADIO_PAGE"],"mappings":"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","sourcesContent":["import * as actionType from './actionTypes';\r\n\r\n// export const getData = (data) => {\r\n//     return dispatch => {\r\n//         dispatch({type: actionType.GET_IMAM_DATA, imamData: data, suras: data.suras.split(',')});\r\n//     }\r\n// }\r\n\r\nexport const getData = (data) => dispatch({type: actionType.GET_IMAM_DATA, imamData: data, suras: data.suras.split(',')});\r\n\r\nexport const getSuras = () => {\r\n    return dispatch => {\r\n        dispatch({type: actionType.GET_SURAS});\r\n    }\r\n}\r\n\r\nexport const getServer = (server) => {\r\n    return dispatch => {\r\n        dispatch({type: actionType.GET_SERVER, server: server});\r\n    }\r\n}\r\n\r\nexport const showPlayer = () => {\r\n    return dispatch => {\r\n        dispatch({type: actionType.SHOW_PLAYER})\r\n    }\r\n}\r\n\r\nexport const allSurasNames = (names) => {\r\n    return dispatch => {\r\n       dispatch({type: actionType.ALL_SUARS_NAMES, surasNames: names})\r\n    }\r\n}\r\n\r\nexport const suraLink = (link) => {\r\n    console.log(link)\r\n    return dispatch => {\r\n        dispatch({type: actionType.SURA_LINK, link: link})\r\n    }\r\n}\r\n\r\nexport const suraLinkRandom = (randomNumber) => {\r\n    return dispatch => {\r\n        dispatch({type: actionType.SURA_LINK_RANDOM, number: randomNumber})\r\n    }\r\n}\r\n\r\nexport const startRequest = () => {\r\n    return dispatch => {\r\n        dispatch({type: actionType.START_REQUEST})\r\n    }\r\n}\r\n\r\nexport const successRequest = () => {\r\n    return dispatch => {\r\n        dispatch({type: actionType.SUCCESS_REQUEST});\r\n    }\r\n}\r\n\r\nexport const failRequest = (error) => {\r\n    return dispatch => {\r\n        dispatch({type: actionType.FAIL_REQUEST, error: error})\r\n    }\r\n}\r\n\r\nexport const startMain = () => {\r\n    return dispatch => {\r\n        dispatch({type: actionType.START_MAIN});\r\n    }\r\n}\r\nexport const successMain = (letters, letterIndexs, allElements) => {\r\n    return dispatch => {\r\n        dispatch({type: actionType.SUCCESS_MAIN, letters: letters, letterIndexs: letterIndexs, allElements: allElements})\r\n    }\r\n}\r\n\r\nexport const closeAside = () => {\r\n    return dispatch => {\r\n        dispatch({type: actionType.CLOSE_ASIDE});\r\n    }\r\n}\r\n\r\nexport const openAside = () => {\r\n    return {type: actionType.OPEN_ASIDE}\r\n}\r\n\r\nexport const addToPlayList = (item) => {\r\n    return {type: actionType.ADD_TO_PLAYLIST, item: item}\r\n}\r\n\r\nexport const playlistStorage = (items) => {\r\n    return {type: actionType.PLAYLIST_STORAGE, items: items}\r\n}\r\n\r\nexport const removeItemFromPlayList = (item) => {\r\n    return {type: actionType.REMOVE_ITEM_FROM_PLAYLIST, item: item}\r\n}\r\n\r\nexport const deleteFavFromSurabox = (item) => {\r\n    return {type: actionType.DELETE_FAVOURITE_FROM_SURABOX, item: item}\r\n}\r\n\r\nexport const emptyFavFromSurabox = () => {\r\n    return {type: actionType.EMPTY_FAVOURITE_FROM_SURABOX}\r\n}\r\n\r\nexport const isFromFavouritePlaylist = (bool) => {\r\n    return {type: actionType.IS_FROM_FAVOURITE_PLAYLIST, booleanValue: bool }\r\n}\r\n\r\nexport const emptySuras = () => {\r\n    return {type: actionType.EMPTY_SURAS}\r\n}\r\n\r\nexport const getError = (error) => {\r\n    return {type: actionType.GET_ERROR, error: error}\r\n}\r\n\r\nexport const changeTheme = () => {\r\n    return {type: actionType.IS_THEME_IS_DARK}\r\n}\r\n\r\nexport const toggleTheme = (bool) => {\r\n    return {type: actionType.THEME_STORAGE, value: bool}\r\n}\r\n\r\nexport const changeLanguage = (lang) => {\r\n    let language = null;\r\n    if (lang === 'en') {\r\n        language = '_english.json';\r\n    } else if(lang === 'ar') {\r\n        language = '_arabic.json';\r\n    } else if(lang === 'fr') {\r\n        language = '_france.json';\r\n    } else if(lang === 'ru') {\r\n        language = '_russia.json';\r\n    } else if(lang === 'de') {\r\n        language = '_germany.json';\r\n    } else if(lang === 'es') {\r\n        language = '_spain.json';\r\n    } else if(lang === 'tr') {\r\n        language = '_turkey.json';\r\n    } else if(lang === 'cn') {\r\n        return {type: actionType.CHOOSE_LANGUAGE, selectLanguage: {lang: 'en', language: '_china.json'}}\r\n    } else if(lang === 'tl') {\r\n        return {type: actionType.CHOOSE_LANGUAGE, selectLanguage: {lang: 'en', language: '_tagalog.json'}}\r\n    } else if(lang === 'th') {\r\n        language = '_tahi.json';\r\n    } else if(lang === 'ur') {\r\n        language = '_urdu.json';\r\n    } else if(lang === 'bn') {\r\n        language = '_bengali.json';\r\n    } else if(lang === 'bs') {\r\n        language = '_bosnia.json';\r\n    } else if(lang === 'ug') {\r\n        language = '_uyghur.json';\r\n    } else if(lang === 'fa') {\r\n        language = '_farsi.json';\r\n    } else if(lang === 'tg') {\r\n        language = '_tagalog.json';\r\n    } else if(lang === 'ml') {\r\n        language = '_malbari.json';\r\n    } else if(lang === 'id') {\r\n        language = '_indonesia.json';\r\n    } else if(lang === 'pt') {\r\n        language = '_portuguese.json';\r\n    } else if(lang === 'ha') {\r\n        language = '_hausa.json';\r\n    } else if(lang === 'sw') {\r\n        language = '_swahili.json';\r\n    }\r\n    return {type: actionType.CHOOSE_LANGUAGE, selectLanguage: {lang: lang, language: language}}\r\n}\r\n\r\nexport const siteLanguage = (lang) => {\r\n    return {type: actionType.SITE_LANGUAGE, lang: lang}\r\n}\r\n\r\nexport const isFavoritePage = (value) => {\r\n    return {type: actionType.iS_FAVORITE_PAGE, value: value}\r\n}\r\n\r\nexport const isRadioPage = (value) => {\r\n    return {type: actionType.iS_RADIO_PAGE, value: value}\r\n}"]},"metadata":{},"sourceType":"module"}