{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\HTML\\\\quran_project_2\\\\quran\\\\src\\\\components\\\\MainContent\\\\main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Letter from '../letters/letters';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport axios from 'axios';\nimport ImamBoxs from '../imamBoxs/imamBoxs';\nimport './main.css';\nimport * as actions from '../../store/action/getData';\nimport { connect } from 'react-redux';\nimport Loader from '../UI/Loader/loader';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = props => {\n  _s();\n\n  const [allElements, setAllElements] = useState([]);\n  const [search, setSearch] = useState('');\n  const [rewayas, setRewayas] = useState([]);\n  const [chooseSelect, setChooseSelect] = useState('all');\n  const [allSections, setAllSections] = useState([]);\n  useEffect(() => {\n    let isMounted = true;\n    const source = axios.CancelToken.source();\n\n    const myAPI = async () => {\n      props.startMain();\n      props.emptyFavFromSurabox();\n      await axios.get('http://mp3quran.net/api/_english.json', {\n        cancelToken: source.token\n      }).then(res => {\n        if (isMounted) {\n          const arrayOfLetters = [];\n          const allElementsArrays = [];\n          const arrayOfLettersIndex = [];\n          let allRewayas = [];\n          const allArraysElements = res.data.reciters;\n          const myData = allArraysElements.map(letter => letter.letter);\n          myData.filter((element, index) => element !== myData[index + 1] && arrayOfLetters.push(element));\n          myData.filter((element, index) => element !== myData[index + 1] && arrayOfLettersIndex.push(index));\n          allArraysElements.map(element => allElementsArrays.push(element));\n          setAllElements(allArraysElements);\n          allArraysElements.map(e => {\n            if (!allRewayas.find(z => z === e.rewaya)) {\n              allRewayas.push(e.rewaya);\n            }\n          });\n          setRewayas(allRewayas); // console.log(rewayas);\n\n          props.successMain(arrayOfLetters, arrayOfLettersIndex, allElementsArrays);\n        }\n      }).catch(error => {\n        if (isMounted) {\n          return props.failRequest(error);\n        }\n      });\n    };\n\n    myAPI(); // rewayaFunc();\n\n    return () => {\n      isMounted = false;\n      source.cancel();\n    };\n  }, []); // useState(() => {\n  //     let allRewayas = [];\n  //     allElements.map(e => {\n  //         if(!allRewayas.find(z => z === e.rewaya)) {\n  //             allRewayas.push(e.rewaya);\n  //         }\n  //     });\n  //     setRewayas(allRewayas);\n  // }, [allElements]);\n\n  let fullElementSections = [];\n  let curentIndex = 0;\n\n  if (props.letters && props.allElementsImams && props.lettersIndex) {\n    for (let i = 0; i < props.letters.length; i++) {\n      let speElement = props.allElementsImams.slice(curentIndex, props.lettersIndex[i] + 1);\n      curentIndex = props.lettersIndex[i] + 1;\n      fullElementSections.push({\n        letterSection: props.letters[i],\n        sectionElements: speElement\n      });\n    }\n  }\n\n  useEffect(() => {\n    let allSectionsArray = []; // console.log('ASDFG')\n\n    fullElementSections.map((element, index) => {\n      console.log('ASDFG');\n      allSectionsArray.push( /*#__PURE__*/_jsxDEV(ImamBoxs, {\n        letter: element.letterSection,\n        boxes: element.sectionElements,\n        myIndex: index\n      }, element.letterSection + element.letterSection, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this));\n      setAllSections(allSectionsArray);\n    }); // console.log(allElements);\n  }, [chooseSelect, allElements]);\n  console.log(allSections);\n\n  let show = /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 16\n  }, this);\n\n  if (!props.loading) {\n    show = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"show-names-letter\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content-show\",\n        children: props.letters && props.letters.map(letter => /*#__PURE__*/_jsxDEV(Letter, {\n          text: letter,\n          id: `#letter_${letter}`\n        }, letter, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 67\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search_select mt-4 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            lg: \"6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-search mb-3 mb-lg-0\",\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"Search by Sura reciter name...\",\n                  className: \"rounded-pill search-filed\",\n                  onChange: e => setSearch(e.target.value),\n                  dir: \"auto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-select\",\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"exampleForm.SelectCustom\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    custom: true,\n                    className: \"select\",\n                    value: chooseSelect,\n                    onChange: e => setChooseSelect(e.target.value),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"select rewaya\",\n                      children: \"select rewaya\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"all\",\n                      children: \"all\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 41\n                    }, this), rewayas.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: option,\n                      children: option\n                    }, option, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 64\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"show-all-names\",\n        children: allElements && allElements.length > 0 && fullElementSections.map((element, index) => {\n          return /*#__PURE__*/_jsxDEV(ImamBoxs, {\n            letter: element.letterSection,\n            boxes: element.sectionElements,\n            myIndex: index\n          }, element.letterSection + element.letterSection, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this);\n  }\n\n  return show;\n};\n\n_s(Main, \"83OmIafxLrGBySqcfAY/ueP3sGA=\");\n\n_c = Main;\n\nconst mapStateToProps = state => ({\n  loading: state.loading,\n  letters: state.letters,\n  lettersIndex: state.lettersIndex,\n  allElementsImams: state.allElementsImams\n});\n\nconst mapDispatchToProps = dispatch => ({\n  startMain: () => dispatch(actions.startMain()),\n  successMain: (letters, lettersIndex, allEllemnt) => dispatch(actions.successMain(letters, lettersIndex, allEllemnt)),\n  failRequest: () => dispatch(actions.failRequest()),\n  emptyFavFromSurabox: () => dispatch(actions.emptyFavFromSurabox())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Main, axios));\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/HTML/quran_project_2/quran/src/components/MainContent/main.js"],"names":["React","useEffect","useState","Letter","withErrorHandler","axios","ImamBoxs","actions","connect","Loader","Form","Row","Col","Main","props","allElements","setAllElements","search","setSearch","rewayas","setRewayas","chooseSelect","setChooseSelect","allSections","setAllSections","isMounted","source","CancelToken","myAPI","startMain","emptyFavFromSurabox","get","cancelToken","token","then","res","arrayOfLetters","allElementsArrays","arrayOfLettersIndex","allRewayas","allArraysElements","data","reciters","myData","map","letter","filter","element","index","push","e","find","z","rewaya","successMain","catch","error","failRequest","cancel","fullElementSections","curentIndex","letters","allElementsImams","lettersIndex","i","length","speElement","slice","letterSection","sectionElements","allSectionsArray","console","log","show","loading","target","value","option","mapStateToProps","state","mapDispatchToProps","dispatch","allEllemnt"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Letter from '../letters/letters';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport axios from 'axios';\r\nimport ImamBoxs from '../imamBoxs/imamBoxs';\r\nimport './main.css';\r\nimport * as actions from '../../store/action/getData';\r\nimport { connect } from 'react-redux';\r\nimport Loader from '../UI/Loader/loader';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst Main = props => {\r\n    const [allElements, setAllElements] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n    const [rewayas, setRewayas] = useState([]);\r\n    const [chooseSelect, setChooseSelect] = useState('all');\r\n    const [allSections, setAllSections] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        const source = axios.CancelToken.source();\r\n        \r\n        const myAPI = async () => {\r\n            props.startMain();\r\n            props.emptyFavFromSurabox();\r\n            await axios.get('http://mp3quran.net/api/_english.json', {\r\n                cancelToken: source.token\r\n            })\r\n            .then(res => {\r\n                if(isMounted) {\r\n                    const arrayOfLetters = [];\r\n                    const allElementsArrays = [];\r\n                    const arrayOfLettersIndex = [];\r\n                    let allRewayas = [];\r\n                    const allArraysElements = res.data.reciters;\r\n                    const myData = allArraysElements.map(letter => letter.letter);\r\n                    myData.filter((element, index) => element !== myData[index + 1] && arrayOfLetters.push(element));\r\n                    myData.filter((element, index) => element !== myData[index + 1] && arrayOfLettersIndex.push(index));\r\n                    allArraysElements.map(element => allElementsArrays.push(element));\r\n                    setAllElements(allArraysElements);\r\n                    allArraysElements.map(e => {\r\n                        if(!allRewayas.find(z => z === e.rewaya)) {\r\n                            allRewayas.push(e.rewaya);\r\n                        }\r\n                    });\r\n\r\n                    setRewayas(allRewayas);\r\n                    // console.log(rewayas);\r\n                    props.successMain(arrayOfLetters, arrayOfLettersIndex, allElementsArrays);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                if(isMounted) {\r\n                    return props.failRequest(error)\r\n                }\r\n            });\r\n        };\r\n        myAPI();\r\n        // rewayaFunc();\r\n        return () => {\r\n            isMounted = false;\r\n            source.cancel();\r\n        }\r\n    }, []);\r\n\r\n    // useState(() => {\r\n    //     let allRewayas = [];\r\n    //     allElements.map(e => {\r\n    //         if(!allRewayas.find(z => z === e.rewaya)) {\r\n    //             allRewayas.push(e.rewaya);\r\n    //         }\r\n    //     });\r\n    //     setRewayas(allRewayas);\r\n    // }, [allElements]);\r\n\r\n    let fullElementSections = [];\r\n    let curentIndex = 0;\r\n\r\n\r\n    if(props.letters && props.allElementsImams && props.lettersIndex) {\r\n        for(let i = 0; i < props.letters.length; i++) {\r\n            let speElement = props.allElementsImams.slice(curentIndex , props.lettersIndex[i] + 1);\r\n            curentIndex= props.lettersIndex[i] + 1;\r\n            fullElementSections.push({\r\n                letterSection: props.letters[i],\r\n                sectionElements: speElement\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let allSectionsArray = [];\r\n        // console.log('ASDFG')\r\n        fullElementSections.map((element, index) => {\r\n            console.log('ASDFG')\r\n            allSectionsArray.push(\r\n                <ImamBoxs\r\n                    key={element.letterSection + element.letterSection}\r\n                    letter={element.letterSection}\r\n                    boxes={element.sectionElements}\r\n                    myIndex={index}\r\n                />\r\n            );\r\n            setAllSections(allSectionsArray);\r\n        })\r\n        \r\n        // console.log(allElements);\r\n    }, [chooseSelect, allElements]);\r\n    \r\n    console.log(allSections);\r\n\r\n    let show = <Loader />;\r\n\r\n    if(!props.loading) {\r\n        show = (\r\n            <div className='show-names-letter'>\r\n                <div className='main-content-show'>\r\n                    {props.letters && props.letters.map(letter => <Letter text={letter} id={`#letter_${letter}`} key={letter} />) }\r\n                </div>\r\n                <div className='search_select mt-4 mb-4'>\r\n                    <Row>\r\n                        <Col lg='6'>\r\n                            <div className='form-search mb-3 mb-lg-0'>\r\n                                <Form>\r\n                                    <Form.Control type='text' placeholder='Search by Sura reciter name...' className='rounded-pill search-filed' onChange={e => setSearch(e.target.value)} dir='auto' />\r\n                                </Form>\r\n                            </div>\r\n                        </Col>\r\n                        <Col lg='6'>\r\n                            <div className='form-select'>\r\n                                <Form>\r\n                                    <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                                        <Form.Control as=\"select\" custom className='select' value={chooseSelect} onChange={e => setChooseSelect(e.target.value)}>\r\n                                        <option value='select rewaya'>select rewaya</option>\r\n                                        <option value='all'>all</option>\r\n                                        {rewayas.map(option => <option key={option} value={option}>{option}</option>)}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                <div className='show-all-names'>\r\n                    {/* {console.log(fullElementSections)} */}\r\n                    {\r\n                        allElements && allElements.length > 0 && fullElementSections.map((element, index) => {\r\n                            return (\r\n                                <ImamBoxs\r\n                                    key={element.letterSection + element.letterSection}\r\n                                    letter={element.letterSection}\r\n                                    boxes={element.sectionElements}\r\n                                    myIndex={index}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                    {/* {\r\n                        props.allElementsImams && props.allElementsImams.length > 0 && fullElementSections.map((element, index) => {\r\n                            // console.log(element)\r\n                            return (   \r\n                                <ImamBoxs\r\n                                    key={element.letterSection + element.letterSection}\r\n                                    letter={element.letterSection}\r\n                                    boxes={element.sectionElements}\r\n                                    myIndex={index}\r\n                                />\r\n                            )\r\n                        })\r\n                    } */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return show;\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    loading: state.loading,\r\n    letters: state.letters,\r\n    lettersIndex: state.lettersIndex,\r\n    allElementsImams: state.allElementsImams\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    startMain: () => dispatch(actions.startMain()),\r\n    successMain: (letters, lettersIndex, allEllemnt) => dispatch(actions.successMain(letters, lettersIndex, allEllemnt)),\r\n    failRequest: () => dispatch(actions.failRequest()),\r\n    emptyFavFromSurabox: () => dispatch(actions.emptyFavFromSurabox())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Main, axios));"]},"metadata":{},"sourceType":"module"}