{"ast":null,"code":"import React from'react';import Logo from'../logo/logo';import Container from'react-bootstrap/Container';import{FaBars}from\"react-icons/fa\";import{connect}from'react-redux';import{NavigationStyled}from'./NavigationStyled';import*as settingActions from'../../store/action/settingActions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Navagations=function Navagations(props){return/*#__PURE__*/_jsx(NavigationStyled,{themeStyle:props.themeStyle,children:/*#__PURE__*/_jsx(\"div\",{className:\"navgation d-flex align-items-center h-100\",children:/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"content d-flex align-items-center justify-content-between\",children:[/*#__PURE__*/_jsx(Logo,{}),/*#__PURE__*/_jsx(\"div\",{className:\"account_setting d-flex align-items-center\",title:props.site_language&&props.site_language.settings,children:/*#__PURE__*/_jsx(\"div\",{className:\"setting\",onClick:props.openAside,children:/*#__PURE__*/_jsx(FaBars,{size:30})})})]})})})});};var mapStateToProps=function mapStateToProps(state){return{themeStyle:state.theme.themeStyle,site_language:state.lang.site_language};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{openAside:function openAside(){return dispatch(settingActions.openAside());}};};export default connect(mapStateToProps,mapDispatchToProps)(Navagations);","map":{"version":3,"sources":["C:/Users/USER/Desktop/HTML/quran_project_2/quran/src/components/Navagations/Navigation.js"],"names":["React","Logo","Container","FaBars","connect","NavigationStyled","settingActions","Navagations","props","themeStyle","site_language","settings","openAside","mapStateToProps","state","theme","lang","mapDispatchToProps","dispatch"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,cAAjB,CACA,MAAOC,CAAAA,SAAP,KAAsB,2BAAtB,CACA,OAASC,MAAT,KAAuB,gBAAvB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,gBAAT,KAAiC,oBAAjC,CACA,MAAO,GAAKC,CAAAA,cAAZ,KAAgC,mCAAhC,C,wFAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,KAAK,qBACrB,KAAC,gBAAD,EAAkB,UAAU,CAAEA,KAAK,CAACC,UAApC,uBACI,YAAK,SAAS,CAAC,2CAAf,uBACI,KAAC,SAAD,wBACI,aAAK,SAAS,CAAC,2DAAf,wBACI,KAAC,IAAD,IADJ,cAEI,YAAK,SAAS,CAAC,2CAAf,CAA2D,KAAK,CAAED,KAAK,CAACE,aAAN,EAAuBF,KAAK,CAACE,aAAN,CAAoBC,QAA7G,uBACI,YAAK,SAAS,CAAC,SAAf,CAAyB,OAAO,CAAEH,KAAK,CAACI,SAAxC,uBACI,KAAC,MAAD,EAAQ,IAAI,CAAE,EAAd,EADJ,EADJ,EAFJ,GADJ,EADJ,EADJ,EADqB,EAAzB,CAiBA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAC9BL,UAAU,CAAEK,KAAK,CAACC,KAAN,CAAYN,UADM,CAE9BC,aAAa,CAAEI,KAAK,CAACE,IAAN,CAAWN,aAFI,CAAL,EAA7B,CAKA,GAAMO,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACpCN,SAAS,CAAE,2BAAMM,CAAAA,QAAQ,CAACZ,cAAc,CAACM,SAAf,EAAD,CAAd,EADyB,CAAL,EAAnC,CAIA,cAAeR,CAAAA,OAAO,CAACS,eAAD,CAAkBI,kBAAlB,CAAP,CAA6CV,WAA7C,CAAf","sourcesContent":["import React from 'react'\r\nimport Logo from '../logo/logo';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { FaBars } from \"react-icons/fa\";\r\nimport { connect } from 'react-redux';\r\nimport { NavigationStyled } from './NavigationStyled';\r\nimport * as settingActions from '../../store/action/settingActions';\r\n\r\nconst Navagations = props => (\r\n    <NavigationStyled themeStyle={props.themeStyle}>\r\n        <div className='navgation d-flex align-items-center h-100'>\r\n            <Container>\r\n                <div className='content d-flex align-items-center justify-content-between'>\r\n                    <Logo />\r\n                    <div className='account_setting d-flex align-items-center' title={props.site_language && props.site_language.settings}>\r\n                        <div className='setting' onClick={props.openAside}>\r\n                            <FaBars size={30} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    </NavigationStyled>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    themeStyle: state.theme.themeStyle,\r\n    site_language: state.lang.site_language\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    openAside: () => dispatch(settingActions.openAside())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navagations);"]},"metadata":{},"sourceType":"module"}