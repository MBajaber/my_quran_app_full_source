{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\HTML\\\\quran_project_2\\\\quran\\\\src\\\\components\\\\MainContent\\\\main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Letter from '../letters/letters';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport axios from 'axios';\nimport ImamBoxs from '../imamBoxs/imamBoxs';\nimport './main.css';\nimport * as actions from '../../store/action/getData';\nimport { connect } from 'react-redux';\nimport Loader from '../UI/Loader/loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = props => {\n  _s();\n\n  useEffect(() => {\n    const source = axios.CancelToken.source();\n    let isMounted = true;\n    props.startMain();\n    axios.get('http://mp3quran.net/api/_english.json', {\n      cancelToken: source.token\n    }).then(res => {\n      if (isMounted) {\n        const arrayOfLetters = [];\n        const allElementsArrays = [];\n        const arrayOfLettersIndex = [];\n        const allArraysElements = res.data.reciters;\n        const myData = allArraysElements.map(letter => letter.letter);\n        myData.filter((element, index) => element !== myData[index + 1] && arrayOfLetters.push(element));\n        myData.filter((element, index) => element !== myData[index + 1] && arrayOfLettersIndex.push(index));\n        allArraysElements.map(element => allElementsArrays.push(element));\n        props.successMain(arrayOfLetters, arrayOfLettersIndex, allElementsArrays);\n      }\n    }).catch(error => {\n      if (isMounted) {\n        return props.failRequest(error);\n      }\n    });\n    return () => {\n      source.cancel();\n    };\n  }, []);\n  let fullElementSections = [];\n  let curentIndex = 0;\n  const get = React.useMemo(() => {\n    if (props.letters && props.allElementsImams && props.lettersIndex) {\n      for (let i = 0; i < props.letters.length; i++) {\n        let speElement = props.allElementsImams.slice(curentIndex, props.lettersIndex[i] + 1);\n        curentIndex = props.lettersIndex[i] + 1;\n        fullElementSections.push({\n          letterSection: props.letters[i],\n          sectionElements: speElement\n        });\n      }\n    }\n  }, [fullElementSections]);\n\n  let show = /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 16\n  }, this);\n\n  if (!props.loading) {\n    show = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"show-names-letter\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content-show\",\n        children: props.letters && props.letters.map(letter => /*#__PURE__*/_jsxDEV(Letter, {\n          text: letter,\n          id: `#letter_${letter}`\n        }, letter, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 67\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"show-all-names\",\n        children: props.allElementsImams && props.allElementsImams.length > 0 && fullElementSections.map((element, index) => {\n          // console.log(element)\n          return /*#__PURE__*/_jsxDEV(ImamBoxs, {\n            letter: element.letterSection,\n            boxes: element.sectionElements,\n            myIndex: index\n          }, element.letterSection + element.letterSection, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n\n  return show;\n};\n\n_s(Main, \"ruN+fgi3Y5ETreEYX8WMLz6dcJU=\");\n\n_c = Main;\n\nconst mapStateToProps = state => ({\n  loading: state.loading,\n  letters: state.letters,\n  lettersIndex: state.lettersIndex,\n  allElementsImams: state.allElementsImams\n});\n\nconst mapDispatchToProps = dispatch => ({\n  startMain: () => dispatch(actions.startMain()),\n  successMain: (letters, lettersIndex, allEllemnt) => dispatch(actions.successMain(letters, lettersIndex, allEllemnt)),\n  failRequest: () => dispatch(actions.failRequest())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Main, axios));\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/HTML/quran_project_2/quran/src/components/MainContent/main.js"],"names":["React","useEffect","Letter","withErrorHandler","axios","ImamBoxs","actions","connect","Loader","Main","props","source","CancelToken","isMounted","startMain","get","cancelToken","token","then","res","arrayOfLetters","allElementsArrays","arrayOfLettersIndex","allArraysElements","data","reciters","myData","map","letter","filter","element","index","push","successMain","catch","error","failRequest","cancel","fullElementSections","curentIndex","useMemo","letters","allElementsImams","lettersIndex","i","length","speElement","slice","letterSection","sectionElements","show","loading","mapStateToProps","state","mapDispatchToProps","dispatch","allEllemnt"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport Letter from '../letters/letters';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport axios from 'axios';\r\nimport ImamBoxs from '../imamBoxs/imamBoxs';\r\nimport './main.css';\r\nimport * as actions from '../../store/action/getData';\r\nimport { connect } from 'react-redux';\r\nimport Loader from '../UI/Loader/loader';\r\n\r\nconst Main = props => {\r\n\r\n    useEffect(() => {\r\n        const source = axios.CancelToken.source();\r\n        let isMounted = true;\r\n\r\n        props.startMain();\r\n        axios.get('http://mp3quran.net/api/_english.json', {\r\n            cancelToken: source.token\r\n        })\r\n        .then(res => {\r\n            if(isMounted) {\r\n                const arrayOfLetters = [];\r\n                const allElementsArrays = [];\r\n                const arrayOfLettersIndex = [];\r\n                const allArraysElements = res.data.reciters;\r\n                const myData = allArraysElements.map(letter => letter.letter);\r\n                myData.filter((element, index) => element !== myData[index + 1] && arrayOfLetters.push(element));\r\n                myData.filter((element, index) => element !== myData[index + 1] && arrayOfLettersIndex.push(index));\r\n                allArraysElements.map(element => allElementsArrays.push(element));\r\n                \r\n                props.successMain(arrayOfLetters, arrayOfLettersIndex, allElementsArrays);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            if(isMounted) {\r\n                return props.failRequest(error)\r\n            }\r\n        });\r\n        return () => {\r\n            source.cancel();\r\n        }\r\n    }, []);\r\n    \r\n    let fullElementSections = [];\r\n    let curentIndex = 0;\r\n\r\n    const get = React.useMemo(() => {\r\n        if(props.letters && props.allElementsImams && props.lettersIndex) {\r\n            for(let i = 0; i < props.letters.length; i++) {\r\n                let speElement = props.allElementsImams.slice(curentIndex , props.lettersIndex[i] + 1);\r\n                curentIndex= props.lettersIndex[i] + 1;\r\n                fullElementSections.push({\r\n                    letterSection: props.letters[i],\r\n                    sectionElements: speElement\r\n                });\r\n            }\r\n        }\r\n    }, [fullElementSections]);\r\n\r\n    let show = <Loader />;\r\n\r\n    if(!props.loading) {\r\n        show = (\r\n            <div className='show-names-letter'>\r\n                <div className='main-content-show'>\r\n                    {props.letters && props.letters.map(letter => <Letter text={letter} id={`#letter_${letter}`} key={letter} />) }\r\n                </div>\r\n                <div className='show-all-names'>\r\n                    {\r\n                        props.allElementsImams && props.allElementsImams.length > 0 && fullElementSections.map((element, index) => {\r\n                            // console.log(element)\r\n                            return (   \r\n                                <ImamBoxs\r\n                                    key={element.letterSection + element.letterSection}\r\n                                    letter={element.letterSection}\r\n                                    boxes={element.sectionElements}\r\n                                    myIndex={index}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return show;\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    loading: state.loading,\r\n    letters: state.letters,\r\n    lettersIndex: state.lettersIndex,\r\n    allElementsImams: state.allElementsImams\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    startMain: () => dispatch(actions.startMain()),\r\n    successMain: (letters, lettersIndex, allEllemnt) => dispatch(actions.successMain(letters, lettersIndex, allEllemnt)),\r\n    failRequest: () => dispatch(actions.failRequest()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Main, axios));"]},"metadata":{},"sourceType":"module"}